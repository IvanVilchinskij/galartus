{"version":3,"sources":["actions/actions.js","components/footer/footer.js","components/slider/imgs/img.jpg","components/slider/imgs/2.jpg","components/slider/imgs/3.jpg","components/slider/slider.js","db.js","images/collections/1.jpg","images/collections/2.jpg","images/collections/3.png","images/collections/4.png","images/collections/5.png","images/collections/6.png","images/pictures/1.png","images/pictures/2.png","images/pictures/3.png","images/pictures/4.png","images/pictures/5.png","images/pictures/6.png","images/pictures/7.png","images/pictures/8.jpg","images/exhibitions/1.jpg","images/exhibitions/2.jpg","images/exhibitions/3.jpg","images/exhibitions/4.png","images/user/user.jpg","dateTransform/dateTransform.js","icons/icons.svg","components/comingEvents/comingEvents.js","components/map/map.js","pages/mainPage.js","axios.js","components/spinner/spinner.js","components/exhibitionsList/exhibitionsList.js","pages/exhibitionsPage.js","components/aboutInfo/aboutSlider/img/about-img.jpg","components/aboutInfo/aboutSlider/aboutSlider.js","components/aboutInfo/aboutText/aboutText.js","components/aboutInfo/aboutInfo.js","pages/aboutPage.js","components/collections/collections.js","pages/allCollectionsPage.js","components/userAccount/editUserModal/editUserModal.js","components/userAccount/userLikes/userLikes.js","components/userAccount/userRecommendation/userRecommendation.js","images/user/no-avatar.jpg","components/userAccount/userAccount.js","pages/userPage.js","components/collectionsPictures/collectionsPictures.js","pages/collectonPage.js","components/pictureInfo/pictureInfo.js","pages/itemPage.js","components/admin/adminPayment/adminPayment.js","components/admin/adminControl/collcetions/addModalCollcetions.js","components/admin/adminControl/collcetions/editModalCollcetions.js","components/admin/adminControl/deleteModal.js","components/admin/adminControl/collcetions/adminCollections.js","components/admin/adminControl/pictures/addModalPictures.js","components/admin/adminControl/pictures/editModalPictures.js","components/admin/adminControl/pictures/adminPictures.js","components/admin/adminControl/exhibitions/addModalExhibitions.js","components/admin/adminControl/exhibitions/editModalExhibitions.js","components/admin/adminControl/exhibitions/adminExhibitions.js","components/admin/adminControl/adminControl.js","components/admin/admin.js","pages/adminPage.js","components/logInModal/formErrors/formErrors.js","components/logInModal/logIn/logIn.js","components/logInModal/register/register.js","components/logInModal/logInModal.js","components/logOutModal/logOutModal.js","components/header/img/smalWhiteArrow.svg","components/header/img/smalBlackArrow.svg","components/header/header.js","pages/notFoundPage.js","components/exhibitionInfo/exhibitionInfo.js","pages/exhibitionInfoPage.js","components/cart/cart.js","pages/cartPage.js","components/cart/cartBtn/cartBtn.js","components/paymentList/paymentList.js","pages/paymentListPage.js","components/app/app.js","reducers/reducers.js","store.js","index.js"],"names":["collectionsLoaded","newCollections","type","payload","collectionsRequsted","collectionsError","exhibitionsLoaded","newExhibitions","exhibitionsRequsted","exhibitionsError","picturesLoaded","newPictures","picturesRequsted","picturesError","toggleHeaderColor","isDarkHeader","darkHeader","setCurrentPicture","newPicture","setAutorization","isAuto","isAutorization","setLikesId","newLikes","newLikesId","Set","forEach","item","add","picture","id","setCartCount","oldCount","newCount","count","Footer","className","to","href","SwiperCore","use","Navigation","Pagination","Keyboard","Autoplay","items","src","image1","altText","title","text","image2","image3","Slider","useEffect","slider","document","querySelector","pagination","paginationBullet","querySelectorAll","classList","bullet","slides","map","titleWords","split","firstWords","slice","lastWords","alt","join","navigation","prevEl","nextEl","clickable","keyboard","enabled","onlyInViewport","loop","autoplay","delay","disableOnInteraction","speed","db","collections","name","image","pictures","author","description","categories","exhibitions","date","address","time","price","user","first_name","last_name","birthday","email","setMonthName","month","setWeekdayName","weekday","setShortWeekdayName","connect","state","isLoadingExhibitions","isErrorExhibitions","actions","cards","i","Date","dateData","day","getDate","transformDate","getDay","getMonth","year","getFullYear","icons","Map","useState","isBr","setIsBr","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","clientWidth","documentElement","loading","baseURL","axiosInstance","axios","create","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","a","error","originalRequest","config","console","log","status","alert","Promise","reject","url","location","data","code","statusText","refreshToken","tokenParts","JSON","parse","atob","stringify","now","Math","ceil","exp","post","refresh","then","access","setItem","defaults","catch","err","removeItem","reload","Spinner","LoadingCard","ErrorCard","exhibitionsCards","length","loadingContent","errorContent","content","aboutImgs","AboutSlider","AboutText","AboutInfo","Container","isLoadingCollections","isErrorCollcetions","collectionsCards","breakpointCols","default","1100","700","columnClassName","EditUserModal","toggle","isOpen","userId","initialFormData","Object","freeze","lastNameEdit","editData","updateEditData","editImg","setEditImg","handleChange","e","target","files","value","trim","closeBtn","onClick","Modal","ModalHeader","close","Form","ModalBody","FormGroup","Label","for","Input","onChange","ModalFooter","disabled","preventDefault","formData","FormData","counter","key","append","keys","put","LikeIcon","handleDelete","itemId","UserLikes","likes","setRefresh","closest","remove","delete","likesCards","UserReccomendation","recommendations","recommendationsCards","UserCard","toggleRefresh","dateArr","avatar","EmptyData","UserAccount","userInfo","setUserInfo","setIsOpen","activeTab","setActiveTab","tab","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","likeClass","handleLike","isLoadingPictures","isErrorPictures","currentCollection","likesId","collectionId","contains","filterPictures","filter","includes","picturesCards","has","likeBtn","useParams","collectionName","setCollectionName","Picture","PictureInfo","pictureId","setPicture","pictureInfo","currentPicture","AddModalCollcetions","setUpdate","collectionData","updateCollcetionData","collectionImg","setCollectionImg","setLoading","setError","formValid","setFormValid","loadingText","errorText","formErrorText","autoComplete","setTimeout","EditModalCollcetions","modalId","modalName","updateCollectionData","formImg","setFormImg","imageLength","DeleteModal","loadingCollections","addModal","setAddModal","editModal","setEditModal","deleteModal","setDeleteModal","setModalId","setModalName","isUpdate","setIsUpdate","toggleAddModal","toggleEditModal","toggleDeleteModal","collectionsList","handleClikEdit","handleClikDelete","picturesData","updatePicturesData","picturesImg","setPicturesImg","validForm","setValidForm","checkValidation","fieldName","collectionsOptions","label","multiple","formId","form","picturesImgLength","set","entries","pair","handleSubmit","pictureData","updatePictureData","pictureImg","setPictureImg","picturesList","itemCategories","el","collection","push","exhibitionData","updateExhibitionData","exhibitionImg","setExhibitionImg","exhibitionImgLength","exhibitionsList","AdminControl","Admin","FormErrors","formErrors","typeFor","LogIn","password","history","useHistory","updateFormData","setFormErrors","emailValid","setEmailValid","passValid","setPassValid","validateField","field","input","emailValidate","passwordValidate","match","handleInput","handleBlur","onBlur","onInput","placeholder","res","style","display","Register","isValidPass","setIsValidPass","checkPassword","validText","formData1","toggleTab","isOpenExit","toggleExit","refresh_token","LogInBtn","darkClass","smallArrow","LogOutBtn","color","AdminBtn","handleClik","UserPA","getScrollbarWidth","outer","createElement","visibility","overflow","msOverflowStyle","body","appendChild","inner","scrollbarWidth","offsetWidth","parentNode","removeChild","setIsOpenExit","isOpenBurger","setIsOpenBurger","isMobile","setIsMobile","noTransparentBG","smallBlackArrow","smallWhiteArrow","scrollBarWidth","checkIsMobile","toggleMenu","menu","paddingRight","headerEnterOrExit","headerUserBtns","activeBurger","burgerTarget","handleClickSubstr","Exhibition","buyContent","PurchaseBlock","decrCount","incrCount","resetCount","cartCount","success","setSuccess","successText","Button","NoAutorization","exhibitionId","setExhibitionData","setCount","exhibition","buyList","setBuyList","order","setOrder","loadingPayment","setLoadingPayment","errorPayment","setErrorPayment","get","loadingPaymentText","errorPaymentText","purchaseCards","quantity","total","amount","CartBtn","PaymentList","exhId","users","setUsers","userList","account","emptyText","htmlEl","initialFZ","getComputedStyle","fontSize","initilaWidth","adaptiveCoef","exact","path","component","MainPage","ExhibitionsPage","AllCollectionsPage","AboutPage","UserPage","CollectionPage","ItemPage","ExhibitionInfoPage","AdminPage","CartPage","PaymentListPage","NotFoundPage","initialState","reducer","action","store","createStore","ReactDOM","render","getElementById"],"mappings":"swCAAMA,EAAoB,SAACC,GACvB,MAAO,CACHC,KAAM,qBACNC,QAASF,IAIXG,EAAsB,WACxB,MAAO,CACHF,KAAM,yBAIRG,EAAmB,WACrB,MAAO,CACHH,KAAM,sBAIRI,EAAoB,SAACC,GACvB,MAAO,CACHL,KAAM,qBACNC,QAASI,IAIXC,EAAsB,WACxB,MAAO,CACHN,KAAM,yBAIRO,EAAmB,WACrB,MAAO,CACHP,KAAM,sBAIRQ,EAAiB,SAACC,GACpB,MAAO,CACHT,KAAM,kBACNC,QAASQ,IAIXC,EAAmB,WACrB,MAAO,CACHV,KAAM,sBAIRW,EAAgB,WAClB,MAAO,CACHX,KAAM,mBAIRY,EAAoB,SAACC,GACvB,MAAO,CACHb,KAAM,sBACNc,WAAYD,IAIdE,EAAoB,SAACC,GACvB,MAAO,CACHhB,KAAM,sBACNC,QAASe,IAIXC,EAAkB,SAACC,GACrB,MAAO,CACHlB,KAAM,sBACNmB,eAAgBD,IAIlBE,EAAa,SAACC,GAChB,IAAMC,EAAa,IAAIC,IAQvB,OANIF,GACAA,EAASG,SAAQ,SAAAC,GACbH,EAAWI,IAAID,EAAKE,QAAQC,OAI7B,CACH5B,KAAM,eACNC,QAASqB,IAIXO,EAAe,SAACC,EAAUC,GAG5B,MAAO,CACH/B,KAAM,iBACNgC,MAJUF,EAAWC,I,eCzCdE,EAhDA,WACX,OACI,qBAAKC,UAAU,SAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,0BAAf,SACI,cAAC,IAAD,CAAMC,GAAG,mBAAT,wBAEJ,qBAAKD,UAAU,oBAAf,qBAEJ,qBAAKA,UAAU,cAAf,SACI,qBAAIA,UAAU,mBAAd,UACI,oBAAIA,UAAU,mBAAd,SACI,cAAC,IAAD,CAAMC,GAAG,eAAT,SACI,wFAGR,oBAAID,UAAU,mBAAd,SACI,cAAC,IAAD,CAAMC,GAAG,eAAT,SACI,8FAGR,oBAAID,UAAU,mBAAd,SACI,cAAC,IAAD,CAAMC,GAAG,SAAT,SACI,kFAKhB,sBAAKD,UAAU,mBAAf,UACI,qBAAKA,UAAU,+BAAf,8DACA,qBAAIA,UAAU,wBAAd,UACI,oBAAIA,UAAU,wBAAd,2HACA,oBAAIA,UAAU,wBAAd,SACG,mBAAGE,KAAK,mBAAR,kCAEH,oBAAIF,UAAU,wBAAd,SACG,mBAAGE,KAAK,2BAAR,+C,+DC3ChB,G,8BAAA,IAA0B,iCCA1B,MAA0B,8BCA1B,MAA0B,8BCczCC,IAAWC,IAAI,CAACC,IAAYC,IAAYC,IAAUC,MAElD,IAAMC,EAAQ,CACV,CACEC,IAAKC,EACLC,QAAS,UACTC,MAAM,8NACNC,KAAM,6pBACNpB,GAAI,GAEN,CACIgB,IAAKK,EACLH,QAAS,UACTC,MAAO,4MACPC,KAAM,+iBACNpB,GAAI,GAER,CACIgB,IAAKM,EACLJ,QAAS,UACTC,MAAM,2TACNC,KAAM,6pBACNpB,GAAI,IAmEGuB,EA/DA,WACXC,qBAAU,WACN,IAAMC,EAASC,SAASC,cAAc,WAChCC,EAAaH,EAAOE,cAAc,sBAClCE,EAAmBJ,EAAOK,iBAAiB,6BAEjDF,EAAWG,UAAUjC,IAAI,sBACzB+B,EAAiBjC,SAAQ,SAAAoC,GAAM,OAAIA,EAAOD,UAAUjC,IAAI,kCAEzD,IAEH,IAAMmC,EAASlB,EAAMmB,KAAI,SAACrC,GACtB,IAAMsC,EAAatC,EAAKsB,MAAMiB,MAAM,KAC9BC,EAAaF,EAAWG,MAAM,EAAG,GACjCC,EAAYJ,EAAWG,MAAM,GAEnC,OACI,eAAC,IAAD,CAAahC,UAAU,eAAvB,UACI,qBAAKU,IAAKnB,EAAKmB,IAAKwB,IAAK3C,EAAKqB,UAC9B,sBAAKZ,UAAU,iCAAf,UACI,sBAAKA,UAAU,gBAAf,UACK+B,EAAWI,KAAK,KACjB,uBACCF,EAAUE,KAAK,QAEpB,qBAAKnC,UAAU,eAAf,SAA+BT,EAAKuB,YARDvB,EAAKG,OAcxD,OACI,eAAC,IAAD,CACIM,UAAU,SACVoC,WAAY,CACRC,OAAQ,gBACRC,OAAQ,iBAEZhB,WAAY,CAACiB,WAAW,GACxBC,SAAU,CACNC,SAAS,EACTC,gBAAgB,GAEpBC,MAAM,EACNC,SAAU,CACNC,MAAO,IACPC,sBAAsB,GAE1BC,MAAO,IAhBX,UAkBKpB,EACD,sBAAK3B,UAAU,oCAAf,UACI,qBAAKA,UAAU,iBAGf,qBAAKA,UAAU,wBCqHhBgD,G,MA7LJ,CACPC,YAAa,CACT,CACIvD,GAAI,EACJwD,KAAM,mDACNC,MC5BG,IAA0B,+BD8BjC,CACIzD,GAAI,EACJwD,KAAM,6CACNC,MEjCG,IAA0B,+BFmC7B,CACAzD,GAAI,EACJwD,KAAM,6CACNC,MGtCG,IAA0B,+BHwCjC,CACIzD,GAAI,EACJwD,KAAM,+DACNC,MI3CG,IAA0B,+BJ6CjC,CACIzD,GAAI,EACJwD,KAAM,mDACNC,MKhDG,IAA0B,+BLkDjC,CACIzD,GAAI,EACJwD,KAAM,6CACNC,MMrDG,IAA0B,gCNyDrCC,SAAU,CACN,CACI1D,GAAI,EACJwD,KAAM,mDACNG,OAAQ,mEACRC,YAAa,wpEACbH,MO/DG,IAA0B,8BPgE7BI,WAAY,CACR,EACA,IAGR,CACI7D,GAAI,EACJwD,KAAM,uIACNG,OAAQ,6BACRC,YAAa,wpEACbH,MQ1EG,IAA0B,8BR2E7BI,WAAY,CACR,IAGR,CACI7D,GAAI,EACJwD,KAAM,mEACNG,OAAQ,+CACRC,YAAa,wpEACbH,MSpFG,IAA0B,8BTqF7BI,WAAY,CACR,IAGR,CACI7D,GAAI,EACJwD,KAAM,6IACNG,OAAQ,4DACRC,YAAa,wpEACbH,MU9FG,IAA0B,8BV+F7BI,WAAY,CACR,IAGR,CACI7D,GAAI,EACJwD,KAAM,oMACNG,OAAQ,gDACRC,YAAa,wpEACbH,MWxGG,IAA0B,8BXyG7BI,WAAY,CACR,EACA,IAGR,CACI7D,GAAI,EACJwD,KAAM,0HACNG,OAAQ,qDACRC,YAAa,wpEACbH,MYnHG,IAA0B,8BZoH7BI,WAAY,CACR,EACA,IAGR,CACI7D,GAAI,EACJwD,KAAM,iCACNG,OAAQ,mCACRC,YAAa,wpEACbH,Ma9HG,IAA0B,8Bb+H7BI,WAAY,CACR,IAGR,CACI7D,GAAI,EACJwD,KAAM,wFACNG,OAAQ,8FACRC,YAAa,wpEACbH,McxIG,IAA0B,8BdyI7BI,WAAY,CACR,EAAG,KAIfC,YAAa,CACT,CACI9D,GAAI,EACJyD,MejJG,IAA0B,8BfkJ7BD,KAAM,mMACNO,KAAM,aACNC,QAAS,oJACTC,KAAM,QACNL,YAAa,8oEACbM,MAAO,KACPL,WAAY,CACR,EACA,IAGR,CACI7D,GAAI,EACJyD,MgB/JG,IAA0B,8BhBgK7BD,KAAM,+MACNO,KAAM,aACNC,QAAS,2EACTC,KAAM,QACNL,YAAa,8oEACbM,MAAO,KACPL,WAAY,CACR,IAGR,CACI7D,GAAI,EACJyD,MiB5KG,IAA0B,8BjB6K7BD,KAAM,4EACNO,KAAM,aACNC,QAAS,sFACTC,KAAM,QACNL,YAAa,8oEACbM,MAAO,IACPL,WAAY,CACR,EACA,EACA,IAGR,CACI7D,GAAI,EACJyD,MkB3LG,IAA0B,8BlB4L7BD,KAAM,sQACNO,KAAM,aACNC,QAAS,sFACTC,KAAM,QACNL,YAAa,8oEACbM,MAAO,KACPL,WAAY,CACR,EACA,KAIZM,KAAM,CACF,CACInE,GAAI,GACJoE,WAAY,2BACZC,UAAW,uCACXC,SAAU,aACVC,MAAO,mBACPd,MmB/MG,IAA0B,qCCAnCe,EAAe,SAACC,GAClB,OAAQA,GACJ,KAAK,EACD,MAAO,uCACX,KAAK,EACD,MAAO,6CACX,KAAK,EACD,MAAO,iCACX,KAAK,EACD,MAAO,uCACX,KAAK,EACD,MAAO,qBACX,KAAK,EACD,MAAO,2BACX,KAAK,EACD,MAAO,2BACX,KAAK,EACD,MAAO,6CACX,KAAK,EACD,MAAO,mDACX,KAAK,EACD,MAAO,6CACX,KAAK,GACD,MAAO,uCACX,KAAK,GACD,MAAO,6CACX,QACI,MAAO,6GAIbC,EAAiB,SAACC,GACpB,OAAQA,GACJ,KAAK,EACD,MAAO,qEACX,KAAK,EACD,MAAO,qEACX,KAAK,EACD,MAAO,6CACX,KAAK,EACD,MAAO,iCACX,KAAK,EACD,MAAO,6CACX,KAAK,EACD,MAAO,6CACX,KAAK,EACD,MAAO,6CACX,QACI,MAAO,4IAIbC,EAAsB,SAACD,GACzB,OAAQA,GACJ,KAAK,EACD,MAAO,eACX,KAAK,EACD,MAAO,eACX,KAAK,EACD,MAAO,eACX,KAAK,EACD,MAAO,eACX,KAAK,EACD,MAAO,eACX,KAAK,EACD,MAAO,eACX,KAAK,EACD,MAAO,eACX,QACI,MAAO,4ICrEJ,MAA0B,kCCkG1BE,eARS,SAACC,GACrB,MAAO,CACHhB,YAAagB,EAAMhB,YACnBiB,qBAAsBD,EAAMC,qBAC5BC,mBAAoBF,EAAME,sBAIMC,EAAzBJ,EAtFM,SAAC,GAAsC,IAArCrG,EAAoC,EAApCA,kBAAmBsF,EAAiB,EAAjBA,YAEtCtC,qBAAU,WACNhD,EAAkB8E,EAAGQ,gBAGzB,IAAMoB,EAAQpB,EAAY5B,KAAI,SAACrC,EAAMsF,GACjC,IAAMpB,EAAO,IAAIqB,KAAKvF,EAAKkE,MAErBsB,EAAW,CACbC,IAAKvB,EAAKwB,UACVZ,QAASa,EAA6BzB,EAAK0B,UAC3ChB,MAAOe,EAA2BzB,EAAK2B,YACvCC,KAAM5B,EAAK6B,eAGf,OAAIT,EAAI,EAEA,eAAC,IAAD,CAAM5E,GAAE,uBAAkBV,EAAKG,IAAoBM,UAAU,sCAA7D,UACI,qBACIU,IAAKnB,EAAK4D,MACVjB,IAAK3C,EAAK2D,KACVlD,UAAU,yBAEd,qBAAKA,UAAU,+BACf,sBAAKA,UAAU,0BAAf,UACI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,+BAAf,SACK+E,EAASC,MAEd,sBAAKhF,UAAU,wBAAf,UACI,qBAAKA,UAAU,yBAAf,SACK+E,EAASZ,QAEd,qBAAKnE,UAAU,2BAAf,SACK+E,EAASV,gBAItB,sBAAKrE,UAAU,4BAAf,UACI,qBAAKA,UAAU,2BAAf,SACKT,EAAKmE,UAEV,qBAAK1D,UAAU,wBAAf,SACKT,EAAKoE,KAAK3B,MAAM,EAAG,WAIhC,sBAAKhC,UAAU,0BAAf,UACI,qBAAKA,UAAU,yBAAf,SACKT,EAAK2D,OAEV,qBAAKlD,UAAU,yBAAf,SACI,qBAAKE,KAAI,UAAKqF,EAAL,mBAnCqBhG,EAAKG,IAyC5C,QAKf,OACI,qBAAKM,UAAU,gBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,wCAAd,uIAGA,qBAAKA,UAAU,sBAAf,SACK4E,Y,OCnBNY,G,MA7DH,WAAO,IAAD,EACUC,oBAAS,GADnB,mBACPC,EADO,KACDC,EADC,OAGUF,mBAAS,CAAC,EAAG,IAHvB,mBAGPG,EAHO,KAGDC,EAHC,KA2Bd,OAtBAC,2BAAgB,WACZ,SAASC,IACLF,EAAQ,CAACG,OAAOC,WAAYD,OAAOE,cAMvC,OAHAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IAEO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACnD,IAEH7E,qBAAU,WACN,IAAMmF,EAAcjF,SAASkF,gBAAgBD,YAGzCV,IADAU,EAAc,QAKnB,CAACT,IAIA,qBAAK5F,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,mBAAf,qCAEK0F,EAAO,uBAAQ,IAFpB,sDAKA,sBAAK1F,UAAU,YAAf,UACI,qBAAKA,UAAU,iBAAf,2HAGA,qBAAKA,UAAU,iBAAf,SACI,mBAAGE,KAAK,mBAAR,kCAEJ,qBAAKF,UAAU,iBAAf,SACI,mBAAGE,KAAK,2BAAR,iCAEJ,qBAAKF,UAAU,iBAAf,8DAKR,qBAAKA,UAAU,aAAf,SACI,wBAAQa,MAAM,MAAMH,IAAI,kXAAkX6F,QAAQ,oBC3B3ZhC,eANS,SAACC,GACrB,MAAO,CACH5F,WAAY4F,EAAM5F,cAIc+F,EAAzBJ,EArBE,SAAC,GAAyB,IAAxB7F,EAAuB,EAAvBA,kBAMf,OALAwC,qBAAU,WACNxC,GAAkB,KAEnB,IAGC,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,U,yCChBN8H,EAAU,4BAEVC,E,OAAgBC,EAAMC,OAAO,CAClCH,QAASA,EACTI,QAAS,IACTC,QAAS,CACRC,cAAeC,aAAaC,QAAQ,gBACnC,UAAYD,aAAaC,QAAQ,gBACjC,KACD,eAAgB,mBAChBC,OAAQ,sBAIVR,EAAcS,aAAaC,SAAS/G,KACnC,SAAC+G,GACA,OAAOA,IAFT,+BAAAC,EAAA,MAIC,WAAgBC,GAAhB,qBAAAD,EAAA,yDACOE,EAAkBD,EAAME,OAEA,qBAAnBF,EAAMF,SAHlB,uBAIWK,QAAQC,IAAIJ,EAAMK,QAClBF,QAAQC,IAAIJ,EAAMF,SAASO,QACpCC,MACC,6ZAPH,kBAUSC,QAAQC,OAAOR,IAVxB,UAc4B,MAA1BA,EAAMF,SAASO,QACfJ,EAAgBQ,MAAQtB,EAAU,iBAfpC,uBAiBER,OAAO+B,SAAS7H,KAAO,IAjBzB,kBAkBS0H,QAAQC,OAAOR,IAlBxB,UAsB+B,oBAA7BA,EAAMF,SAASa,KAAKC,MACM,MAA1BZ,EAAMF,SAASO,QACe,iBAA9BL,EAAMF,SAASe,WAxBjB,sBA0BQC,EAAepB,aAAaC,QAAQ,kBA1B5C,oBA6BSoB,EAAaC,KAAKC,MAAMC,KAAKJ,EAAarG,MAAM,KAAK,KAE/C0F,QAAQC,IAAR,uBAA4BY,KAAKG,UAAUJ,KAGjDK,EAAMC,KAAKC,KAAK7D,KAAK2D,MAAQ,KACnCjB,QAAQC,IAAR,2BAAgCW,EAAWQ,QAEvCR,EAAWQ,IAAMH,GArCxB,0CAsCWhC,EACLoC,KAAK,kBAAmB,CACxBC,QAASX,IAETY,MAAK,SAAC5B,GAeN,OAdqBK,QAAQC,IAAR,qBAA0BY,KAAKG,UAAUrB,KACzCK,QAAQC,IAAR,iCAAsCN,EAASa,KAAKgB,SACpDxB,QAAQC,IAAR,kCAAuCN,EAASa,KAAKc,UAE1E/B,aAAakC,QAAQ,eAAgB9B,EAASa,KAAKgB,QACnDjC,aAAakC,QAAQ,gBAAiB9B,EAASa,KAAKc,SAEpDrC,EAAcyC,SAASrC,QAAvB,cACC,UAAYM,EAASa,KAAKgB,OAC3B1B,EAAgBT,QAAhB,cACC,UAAYM,EAASa,KAAKgB,OAENxB,QAAQC,IAAR,4BAAiCY,KAAKG,UAAUlB,KAE9Db,EAAca,MAErB6B,OAAM,SAACC,GACP5B,QAAQC,IAAI2B,GAESrC,aAAasC,WAAW,gBACxBtC,aAAasC,WAAW,iBAExB5C,EAAcyC,SAASrC,QAAvB,cAAkD,KAElDb,OAAO+B,SAAS7H,KAAO,IACvB8F,OAAO+B,SAASuB,aApE3C,QAuEI9B,QAAQC,IAAI,2BAA4BW,EAAWQ,IAAKH,GAEzC1B,aAAasC,WAAW,gBACxBtC,aAAasC,WAAW,iBAEvCrD,OAAO+B,SAAS7H,KAAO,IACR8F,OAAO+B,SAASuB,SA7EnC,gCAgFG9B,QAAQC,IAAI,gCACZzB,OAAO+B,SAAS7H,KAAO,IAjF1B,iCAsFQ0H,QAAQC,OAAOR,IAtFvB,4CAJD,uDA8FeZ,QCpGA8C,GARC,WACZ,OACI,qBAAKvJ,UAAU,UAAf,wBCoHFwJ,GAAc,WAChB,OACI,qBAAKxJ,UAAU,eAAf,SACI,cAAC,GAAD,OAKNyJ,GAAY,WACd,OACI,qBAAKzJ,UAAU,aAAf,oBAcOuE,gBARS,SAACC,GACrB,MAAO,CACHhB,YAAagB,EAAMhB,YACnBiB,qBAAsBD,EAAMC,qBAC5BC,mBAAoBF,EAAME,sBAIMC,EAAzBJ,EAnIS,SAAC,GAAuH,IAAtHrG,EAAqH,EAArHA,kBAAqCsF,GAAgF,EAAlGnF,iBAAkG,EAAhFmF,aAAaiB,EAAmE,EAAnEA,qBAAsBC,EAA6C,EAA7CA,mBAA6C,EAAzBtG,oBAElH8C,qBAAU,WAYNhD,EAAkB8E,EAAGQ,eAGtB,IAEH,IAAyB/C,EAgEnBiJ,EAAmBlG,EA/DA,KADA/C,EAgE8B+C,GA/DzCmG,OAEF,mFAIAlJ,EAAMmB,KAAI,SAACrC,GAEP,IAAMkE,EAAO,IAAIqB,KAAKvF,EAAKkE,MAErBsB,EAAW,CACbC,IAAKvB,EAAKwB,UACVZ,QAASa,EAA6BzB,EAAK0B,UAC3ChB,MAAOe,EAA2BzB,EAAK2B,YACvCC,KAAM5B,EAAK6B,eAGf,OACI,eAAC,IAAD,CAAMrF,GAAE,uBAAkBV,EAAKG,IAAoBM,UAAU,kBAA7D,UACI,qBACIU,IAAKnB,EAAK4D,MACVjB,IAAK3C,EAAK2D,KACVlD,UAAU,yBAEd,qBAAKA,UAAU,+BACf,sBAAKA,UAAU,0BAAf,UACI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,+BAAf,SACK+E,EAASC,MAEd,sBAAKhF,UAAU,wBAAf,UACI,qBAAKA,UAAU,yBAAf,SACK+E,EAASZ,QAEd,qBAAKnE,UAAU,2BAAf,SACK+E,EAASV,gBAItB,sBAAKrE,UAAU,4BAAf,UACI,qBAAKA,UAAU,2BAAf,SACKT,EAAKmE,UAEV,qBAAK1D,UAAU,wBAAf,SACKT,EAAKoE,KAAK3B,MAAM,EAAG,WAIhC,sBAAKhC,UAAU,0BAAf,UACI,qBAAKA,UAAU,yBAAf,SACKT,EAAK2D,OAEV,qBAAKlD,UAAU,yBAAf,SACI,qBAAKE,KAAI,UAAKqF,EAAL,mBAnCqBhG,EAAKG,OA6CG,KAEhEkK,EAAiBnF,EAAuB,cAAC,GAAD,IAAiB,KAEzDoF,EAAenF,EAAqB,cAAC,GAAD,IAAe,KAEnDoF,EAAWrF,GAAyBC,EAAwC,KAAnBgF,EAE/D,OACI,qBAAK1J,UAAU,cAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,sCAAf,6FAGA,sBAAKA,UAAU,4BAAf,UACK4J,EACAE,EACAD,aCzFNtF,gBANS,SAACC,GACrB,MAAO,CACH5F,WAAY4F,EAAM5F,cAIc+F,EAAzBJ,EAjBS,SAAC,GAAyB,IAAxB7F,EAAuB,EAAvBA,kBAMtB,OALAwC,qBAAU,WACNxC,GAAkB,KAEnB,IAGC,cAAC,GAAD,O,UCdO,I,qBAAA,IAA0B,uCCSzCyB,IAAWC,IAAI,CAACC,IAAYC,IAAYC,IAAUC,MAElD,IAAMuJ,GAAY,CACd,CACIrK,GAAI,EACJgB,IAAKyC,GACLD,KAAM,QAEV,CACIxD,GAAI,EACJgB,IAAKyC,GACLD,KAAM,QAEV,CACIxD,GAAI,EACJgB,IAAKyC,GACLD,KAAM,QAEV,CACIxD,GAAI,EACJgB,IAAKyC,GACLD,KAAM,SAqDC8G,GAjDK,WAChB9I,qBAAU,WACN,IAAMC,EAASC,SAASC,cAAc,iBAChCC,EAAaH,EAAOE,cAAc,sBAClCE,EAAmBJ,EAAOK,iBAAiB,6BAEjDF,EAAWG,UAAUjC,IAAI,4BACzB+B,EAAiBjC,SAAQ,SAAAoC,GAAM,OAAIA,EAAOD,UAAUjC,IAAI,wCACzD,IAEH,IAAMmC,EAASoI,GAAUnI,KAAI,SAACrC,GAC1B,OACI,cAAC,IAAD,CAAaS,UAAU,qBAAvB,SACI,qBAAKU,IAAKnB,EAAKmB,IAAKwB,IAAK3C,EAAK2D,QADe3D,EAAKG,OAM9D,OACI,eAAC,IAAD,CACIM,UAAU,eACVoC,WAAY,CACRC,OAAQ,sBACRC,OAAQ,uBAEZhB,WAAY,CAACiB,WAAW,GACxBC,SAAU,CACNC,SAAS,EACTC,gBAAgB,GAEpBC,MAAM,EACNC,SAAU,CACNC,MAAO,IACPC,sBAAsB,GAE1BC,MAAO,IAhBX,UAkBKpB,EAED,qBAAK3B,UAAU,qBAAf,SACI,qBAAKE,KAAI,UAAKqF,EAAL,cAEb,qBAAKvF,UAAU,qBAAf,SACI,qBAAKE,KAAI,UAAKqF,EAAL,kBC5DV0E,I,OAbG,WACd,OACI,sBAAKjK,UAAU,aAAf,UACI,oBAAIA,UAAU,sCAAd,mDAGA,qBAAKA,UAAU,mBAAf,ggECMGkK,GATG,WACd,OACI,sBAAKlK,UAAU,aAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,QCqBGuE,gBANS,SAACC,GACrB,MAAO,CACH5F,WAAY4F,EAAM5F,cAIc+F,EAAzBJ,EAtBG,SAAC,GAAyB,IAAxB7F,EAAuB,EAAvBA,kBAMhB,OALAwC,qBAAU,WACNxC,GAAkB,KAEnB,IAGC,sBAAKsB,UAAU,QAAf,UACI,cAACmK,GAAA,EAAD,UACI,cAAC,GAAD,MAEJ,cAAC,EAAD,U,SC0ENX,I,OAAc,WAChB,OACI,qBAAKxJ,UAAU,eAAf,SACI,cAAC,GAAD,QAKNyJ,GAAY,WACd,OACI,qBAAKzJ,UAAU,aAAf,oBAcOuE,gBARS,SAACC,GACrB,MAAO,CACHvB,YAAauB,EAAMvB,YACnBmH,qBAAsB5F,EAAM4F,qBAC5BC,mBAAoB7F,EAAM6F,sBAIM1F,EAAzBJ,EAzGK,SAAC,GAOd,IANH3G,EAME,EANFA,kBACAqF,EAKE,EALFA,YAEAmH,GAGE,EAJFpM,oBAIE,EAHFoM,sBACAC,EAEE,EAFFA,mBAEE,EADFpM,iBAGAiD,qBAAU,WAYNtD,EAAkBoF,EAAGC,eAGtB,IAEH,IAAyBxC,EA4BnB6J,EAAmBrH,EA3BA,KADAxC,EA4B8BwC,GA3BzC0G,OAEF,mFAIAlJ,EAAMmB,KAAI,SAACrC,GACP,OACI,eAAC,IAAD,CAAMU,GAAE,uBAAkBV,EAAKG,IAAMM,UAAU,kBAA/C,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKU,IAAKnB,EAAK4D,MAAOjB,IAAK3C,EAAK2D,SAEpC,sBAAKlD,UAAU,+BAAf,UACKT,EAAK2D,KACN,qBAAKlD,UAAU,yBAAf,SACI,qBAAKE,KAAI,UAAKqF,EAAL,mBAPiDhG,EAAKG,OAmBzB,KAEhEkK,EAAiBQ,EAAuB,cAAC,GAAD,IAAiB,KAEzDP,EAAeQ,EAAqB,cAAC,GAAD,IAAe,KAEnDP,EAAWM,GAAyBC,EAAwC,KAAnBC,EAQ/D,OACI,eAAC,KAAD,CACIC,eARW,CACfC,QAAS,EACTC,KAAM,EACNC,IAAK,GAMD1K,UAAU,mBACV2K,gBAAgB,0BAHpB,UAKKf,EACAE,EACAD,QC7DEtF,gBANS,SAACC,GACrB,MAAO,CACH5F,WAAY4F,EAAM5F,cAIc+F,EAAzBJ,EAtBY,SAAC,GAAyB,IAAxB7F,EAAuB,EAAvBA,kBAMzB,OALAwC,qBAAU,WACNxC,GAAkB,KAEnB,IAGC,qBAAKsB,UAAU,aAAf,SACI,eAACmK,GAAA,EAAD,WACI,oBAAInK,UAAU,qCAAd,oEACA,cAAC,GAAD,Y,wLCoHD4K,GAtHO,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQjC,EAAa,EAAbA,QACtCkC,EAAkBC,OAAOC,OAAO,CAClCpH,WAAY,GACZqH,aAAc,GACdnH,SAAU,KAJ2C,EAOtByB,mBAASuF,GAPa,mBAOlDI,EAPkD,KAOxCC,EAPwC,OAQ3B5F,mBAAS,MARkB,mBAQlD6F,EARkD,KAQzCC,EARyC,KAUnDC,EAAe,SAACC,GAClB,IAAMC,EAASD,EAAEC,OAEI,SAAjB,CAACA,EAAOxI,OACRqI,EAAW,CACPpI,MAAOuI,EAAOC,QAItBN,EAAe,6BACRD,GADO,mBAETM,EAAOxI,KAAOwI,EAAOE,MAAMC,WAqC9BC,EAAW,qBAAK9L,UAAU,QAAQ+L,QAASlB,EAAhC,SAAwC,qBAAK3K,KAAI,UAAKqF,EAAL,cAElE,OACI,eAACyG,GAAA,EAAD,CAAOnB,OAAQA,EAAQC,OAAQA,EAAQ9K,UAAU,eAAjD,UACI,cAACiM,GAAA,EAAD,CAAapB,OAAQA,EAAQqB,MAAOJ,EAApC,kGAGA,eAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,gBAAX,gCACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,aACLxD,GAAG,gBACH+M,SAAUjB,OAGlB,eAACa,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,eAAX,wDACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,YACLxD,GAAG,eACH+M,SAAUjB,OAGlB,eAACa,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,eAAX,uFACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,WACLxD,GAAG,eACH+M,SAAUjB,OAGlB,eAACa,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,YAAX,0EACA,cAACC,GAAA,EAAD,CACI9M,GAAG,YACHuH,OAAO,UACPnJ,KAAK,OACLoF,KAAK,QACLuJ,SAAUjB,UAItB,cAACkB,GAAA,EAAD,UACI,wBACIC,UAAQ,EACRZ,QAnFC,SAACN,GAClBA,EAAEmB,iBAEF,IAAMC,EAAW,IAAIC,SACjBC,EAAU,EAEd,IAAK,IAAIC,KAAO5B,EACRA,EAAS4B,IACTH,EAASI,OAAOD,EAAK5B,EAAS4B,IAIlC1B,GAAsC,IAAzBA,EAAQnI,MAAMwG,QAC3BkD,EAASI,OAAO,QAAS3B,EAAQnI,MAAM,IAbnB,qBAgBL0J,EAASK,QAhBJ,IAgBxB,2BAAoC,2BAChCH,KAjBoB,8BAoBR,IAAZA,EACAlC,IAEApE,EAAc0G,IAAd,gBAA2BpC,GAAU8B,GAChC9D,MAAK,WACFD,IACA+B,QAuDA,6ECrCduC,I,OAAW,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,OAC7B,OACI,qBAAKvB,QAAS,SAACN,GAAD,OAAO4B,EAAa5B,EAAG6B,IAAStN,UAAS,qCAAvD,SACI,qBAAKE,KAAI,UAAKqF,EAAL,eAKNgI,GAlFG,WAAO,IAAD,EACM9H,mBAAS,IADf,mBACb+H,EADa,aAGU/H,oBAAS,IAHnB,mBAGbqD,EAHa,KAGJ2E,EAHI,KAOpBvM,qBAAU,cASP,IAEH,IAAMmM,EAAe,SAAC5B,EAAG6B,GACN7B,EAAEC,OAAOgC,QAAQ,iBAEzBC,SAEPlH,EAAcmH,OAAd,gBAA8BN,EAA9B,YACKvE,MAAK,WAnBc0E,GAAY3E,MAsB/BK,OAAM,SAACC,GAAD,OAAS5B,QAAQC,IAAI2B,OAU9ByE,EAAaL,EAAM7D,OAAS,EAAI6D,EAAM5L,KAAI,SAAArC,GAC5C,OACI,sBAAmBS,UAAU,gCAA7B,UACI,eAAC,IAAD,CAAMC,GAAE,oBAAeV,EAAKE,QAAQC,IAAMM,UAAU,wBAApD,UACI,qBAAKA,UAAU,oBAAf,SACI,qBAAKU,IAAKnB,EAAKE,QAAQ0D,MAAOjB,IAAK3C,EAAKE,QAAQyD,SAGpD,sBAAKlD,UAAU,4BAAf,UACI,sBAAKA,UAAU,qBAAf,UACKT,EAAKE,QAAQ4D,OADlB,KAC4B9D,EAAKE,QAAQyD,KADzC,OAGA,qBAAKlD,UAAU,sBAAf,SACI,qBAAKE,KAAI,UAAKqF,EAAL,oBAIrB,cAAC,GAAD,CACI+H,OAAQ/N,EAAKE,QAAQC,GACrB2N,aAAcA,MAjBZ9N,EAAKG,OAqBlB,gEAEL,OACI,cAAC,KAAD,CACI6K,eAlCW,CACfC,QAAS,EACTC,KAAM,EACNC,IAAK,GAgCD1K,UAAU,cACV2K,gBAAgB,qBAHpB,SAKKkD,KCNEC,GAlEY,WAAO,IAAD,EACiBrI,mBAAS,IAD1B,mBACtBsI,EADsB,UAG7B7M,qBAAU,cAIP,IAEH,IAAM8M,EAAuBD,EAAgBpE,OAAS,EAAIoE,EAAgBnM,KAAI,SAAArC,GAC1E,IAAMkE,EAAO,IAAIqB,KAAKvF,EAAKkE,MAErBsB,EAAW,CACbC,IAAKvB,EAAKwB,UACVZ,QAASa,EAA6BzB,EAAK0B,UAC3ChB,MAAOe,EAA2BzB,EAAK2B,YACvCC,KAAM5B,EAAK6B,eAGf,OACI,eAAC,IAAD,CAAMrF,GAAE,uBAAkBV,EAAKG,IAAoBM,UAAU,sCAA7D,UACI,qBACIU,IAAKnB,EAAK4D,MACVjB,IAAK3C,EAAK2D,KACVlD,UAAU,yBAEd,qBAAKA,UAAU,+BACf,sBAAKA,UAAU,0BAAf,UACI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,+BAAf,SACK+E,EAASC,MAEd,sBAAKhF,UAAU,wBAAf,UACI,qBAAKA,UAAU,yBAAf,SACK+E,EAASZ,QAEd,qBAAKnE,UAAU,2BAAf,SACK+E,EAASV,gBAItB,sBAAKrE,UAAU,4BAAf,UACI,qBAAKA,UAAU,2BAAf,SACKT,EAAKmE,UAEV,qBAAK1D,UAAU,wBAAf,SACKT,EAAKoE,KAAK3B,MAAM,EAAG,WAIhC,qBAAKhC,UAAU,0BAAf,SACI,qBAAKA,UAAU,yBAAf,SACKT,EAAK2D,WAhCwB3D,EAAKG,OAqClD,gEAEL,OACI,qBAAKM,UAAU,4BAAf,SACKgO,KCnEE,OAA0B,sCCmGnCC,GAAW,SAAC,GAA2C,IAA1CpK,EAAyC,EAAzCA,KAAMgH,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,OAAQoD,EAAmB,EAAnBA,cAC/BlK,EpB3BY,SAACP,GACnB,GAAIA,EAAM,CACN,IAAM0K,EAAU1K,EAAK3B,MAAM,KAG3B,MAFY,UAAMqM,EAAQ,GAAd,YAAoBA,EAAQ,GAA5B,YAAkCA,EAAQ,KoBwBzCjJ,CAAcrB,EAAKG,UAEpC,OACI,sBAAKhE,UAAU,OAAf,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAKU,IAAKmD,EAAKV,MAAQU,EAAKV,MAAQiL,GAAQlM,IAAK2B,EAAKC,eAE1D,sBAAK9D,UAAU,aAAf,UACI,qBAAIA,UAAU,mBAAd,UAAkC6D,EAAKC,WAAvC,IAAoDD,EAAKE,aACzD,oBAAI/D,UAAU,iBAAd,SAAgCgE,IAChC,qBAAKhE,UAAU,aAAf,SAA6B6D,EAAKI,WAEtC,qBAAKjE,UAAU,eAAf,SACI,wBAAQ+L,QAASlB,EAAQ7K,UAAU,aAAnC,8FAEJ,cAAC,GAAD,CAAe8I,QAASoF,EAAenD,OAAQlH,EAAKnE,GAAIoL,OAAQA,EAAQD,OAAQA,QAMtFwD,GAAY,WACd,OACI,4KAIOC,GAtGK,WAAO,IAAD,EACU7I,mBAAS,MADnB,mBACf8I,EADe,KACLC,EADK,OAEM/I,oBAAS,GAFf,mBAEfqF,EAFe,KAEP2D,EAFO,OAIYhJ,mBAAS,KAJrB,mBAIfiJ,EAJe,KAIJC,EAJI,OAMQlJ,qBANR,mBAMfqD,EANe,KAMN2E,EANM,KAUhB5C,EAAS,SAAA+D,GACRF,IAAcE,GAAKD,EAAaC,IAKvC1N,qBAAU,WAKNsN,EAAYxL,EAAGa,KAAK,MACrB,CAACiF,IAEJ,IAAMgB,EAAUyE,EAChB,cAAC,GAAD,CACIzD,OAAQA,EACRjH,KAAM0K,EACN1D,OAdoB,kBAAM4D,GAAW3D,IAerCoD,cArBkB,kBAAMT,GAAY3E,MAuBxC,cAAC,GAAD,IAEA,OACI,qBAAK9I,UAAU,eAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,wBAAf,UACK8J,EACD,sBAAK9J,UAAU,eAAf,UACI,eAAC6O,GAAA,EAAD,CAAKC,MAAI,EAAC9O,UAAU,cAApB,UACI,cAAC+O,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACIhP,UAAWiP,KAAW,CAAEC,OAAsB,MAAdR,IAChC3C,QAAS,WAAQlB,EAAO,MAF5B,qGAOJ,cAACkE,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACIhP,UAAWiP,KAAW,CAAEC,OAAsB,MAAdR,IAChC3C,QAAS,WAAQlB,EAAO,MAF5B,oHAQR,eAACsE,GAAA,EAAD,CAAYT,UAAWA,EAAvB,UACI,cAACU,GAAA,EAAD,CAASC,MAAM,IAAf,SACI,cAAC,GAAD,MAEJ,cAACD,GAAA,EAAD,CAASC,MAAM,IAAf,SACI,cAAC,GAAD,oBChEjB9K,gBANS,SAACC,GACrB,MAAO,CACH5F,WAAY4F,EAAM5F,cAIc+F,EAAzBJ,EAjBE,SAAC,GAAyB,IAAxB7F,EAAuB,EAAvBA,kBAMf,OALAwC,qBAAU,WACNxC,GAAkB,KAEnB,IAGC,cAAC,GAAD,OC8HF0O,I,OAAW,SAAC,GAAqC,IAApCkC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,WAAYjC,EAAY,EAAZA,OACtC,OACI,qBAAKvB,QAAS,SAACN,GAAD,OAAO8D,EAAWjC,EAAQ7B,IAAIzL,UAAS,iCAA4BsP,GAAjF,SACI,qBAAKpP,KAAI,UAAKqF,EAAL,eAKf8I,GAAY,WACd,OACI,qBAAKrO,UAAU,aAAf,6CAMFwJ,GAAc,WAChB,OACI,qBAAKxJ,UAAU,eAAf,SACI,cAAC,GAAD,OAKNyJ,GAAY,WACd,OACI,qBAAKzJ,UAAU,aAAf,oBAiBOuE,gBAXS,SAACC,GACrB,MAAO,CACHpB,SAAUoB,EAAMpB,SAChBoM,kBAAmBhL,EAAMgL,kBACzBC,gBAAiBjL,EAAMiL,gBACvBC,kBAAmBlL,EAAMkL,kBACzBC,QAASnL,EAAMmL,QACf1Q,eAAgBuF,EAAMvF,kBAIU0F,EAAzBJ,EAxKa,SAAC,GAAwJ,IAAvJnB,EAAsJ,EAAtJA,SAAU9E,EAA4I,EAA5IA,eAAgBsR,EAA4H,EAA5HA,aAA+CJ,GAA6E,EAA9G/Q,cAA8G,EAA/FD,iBAA+F,EAA7EgR,mBAAmBC,EAA0D,EAA1DA,gBAAiBxQ,EAAyC,EAAzCA,eAA4B0Q,GAAa,EAAzBzQ,WAAyB,EAAbyQ,SAEnKzO,qBAAU,WAyBN5C,EAAe0E,EAAGI,YAGnB,IAEH,IAAMmM,EAAa,SAACjC,EAAQ7B,GACxB,IAAMC,EAASD,EAAEC,OAAOgC,QAAQ,2BAEhC,GAAIhC,EAAOjK,UAAUoO,SAAS,eAC1BnE,EAAOjK,UAAUkM,OAAO,eAExBlH,EAAcmH,OAAd,gBAA8BN,EAA9B,YACKnE,OAAM,SAACC,GACJ5B,QAAQC,IAAI2B,GACZsC,EAAOjK,UAAUjC,IAAI,sBAE1B,CACH,IAAMqN,EAAW,IAAIC,SAEjBQ,GACAT,EAASI,OAAO,UAAWK,GAG/B5B,EAAOjK,UAAUjC,IAAI,eAErBiH,EAAcoC,KAAK,eAAgBgE,GAC9B1D,OAAM,WACH3B,QAAQC,IAAI,SACZiE,EAAOjK,UAAUkM,OAAO,oBAKlCmC,EAAiB1M,EAAWA,EAAS2M,QAAO,SAACxQ,GAC/C,OAAOA,EAAKgE,WAAWyM,SAASJ,MAC/B,KAECK,EAAgBH,GAA4C,IAA1BA,EAAenG,OAAgBvG,EAASxB,KAAI,SAACrC,GACjF,IAAI+P,EAAY,GAEZK,GAA4B,IAAjBA,EAAQ/J,OACnB0J,EAAYK,EAAQO,IAAI3Q,EAAKG,IAAM,cAAgB,IAGvD,IAAMyQ,EAAUlR,EAAiB,cAAC,GAAD,CACGqO,OAAQ/N,EAAKG,GACb6P,WAAYA,EACZD,UAAWA,IACV,KAErC,OACI,sBAAmBtP,UAAU,eAA7B,UACI,eAAC,IAAD,CAAMC,GAAE,oBAAeV,EAAKG,IAAMM,UAAU,wBAA5C,UACI,qBAAKA,UAAU,oBAAf,SACI,qBAAKU,IAAKnB,EAAK4D,MAAOjB,IAAK3C,EAAK2D,SAGpC,sBAAKlD,UAAU,4BAAf,UACI,sBAAKA,UAAU,qBAAf,UACKT,EAAK8D,OADV,KACoB9D,EAAK2D,KADzB,OAGA,qBAAKlD,UAAU,sBAAf,SACI,qBAAKE,KAAI,UAAKqF,EAAL,oBAIpB4K,IAfK5Q,EAAKG,OAmBlB,cAAC,GAAD,IAECkK,EAAiB4F,EAAoB,cAAC,GAAD,IAAiB,KAEtD3F,EAAe4F,EAAkB,cAAC,GAAD,IAAe,KAEhD3F,EAAW0F,GACGC,EAAkC,KAAhBQ,EAQtC,OACI,eAAC,KAAD,CACI1F,eARW,CACfC,QAAS,EACTC,KAAM,EACNC,IAAK,GAMD1K,UAAU,iBACV2K,gBAAgB,wBAHpB,UAKKf,EACAE,EACAD,QCtEEtF,I,OAAAA,aANS,SAACC,GACrB,MAAO,CACH5F,WAAY4F,EAAM5F,cAIc+F,EAAzBJ,EAnDQ,SAAC,GAAyB,IAAxB7F,EAAuB,EAAvBA,kBACdgB,EAAM0Q,cAAN1Q,GADqC,EAGA+F,mBAAS,MAHT,mBAGrC4K,EAHqC,KAGrBC,EAHqB,KAmC5C,OA9BApP,qBAAU,WACNxC,GAAkB,GAmBlBsE,EAAGC,YAAY3D,SAAQ,SAAAC,GACfA,EAAKG,MAAQA,GACb4Q,EAAkB/Q,EAAK2D,WAMhC,IAGC,qBAAKlD,UAAU,kBAAf,SACI,eAACmK,GAAA,EAAD,WACI,oBAAInK,UAAU,mCAAd,SAAkDqQ,IAClD,cAAC,GAAD,CAAqBT,cAAelQ,aC1B9C6Q,I,cAAU,SAAC,GAAY,IAAXhR,EAAU,EAAVA,KACd,OACI,sBAAmBS,UAAU,eAA7B,UACI,qBAAKA,UAAU,oBAAf,SACI,qBAAKU,IAAKnB,EAAK4D,MAAOjB,IAAK3C,EAAK2D,SAEpC,sBAAKlD,UAAU,qBAAf,UACI,sBAAKA,UAAU,uCAAf,UACI,oBAAIA,UAAU,qBAAd,SAAoCT,EAAK8D,OAAOwI,SAChD,qBAAI7L,UAAU,uBAAd,iBAAuCT,EAAK2D,KAAK2I,OAAjD,aAEJ,qBAAK7L,UAAU,sBAAf,SACKT,EAAK+D,mBAVR/D,EAAKG,MAiBR8Q,GAvCK,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAAe,EACHhL,mBAAS,MADN,mBAC1BhG,EAD0B,KACjBiR,EADiB,KAGjCxP,qBAAU,WACN8B,EAAGI,SAAS9D,SAAQ,SAAAC,GACZA,EAAKG,MAAQ+Q,GACbC,EAAWnR,QAGpB,IAEH,IAAMoR,EAAclR,EAAU,cAAC,GAAD,CAASF,KAAME,IAAa,KAE1D,OACI,qBAAKO,UAAU,YAAf,SACK2Q,KCwBEpM,gBAPS,SAACC,GACrB,MAAO,CACH5F,WAAY4F,EAAM5F,WAClBgS,eAAgBpM,EAAMoM,kBAIUjM,EAAzBJ,EAnCE,SAAC,GAA4D,IAA3D7F,EAA0D,EAA1DA,kBACRgB,GADkE,EAAvCb,kBAAuC,EAApB+R,eACxCR,cAAN1Q,IAoBP,OAlBAwB,qBAAU,WACNxC,GAAkB,KAcnB,IAIC,qBAAKsB,UAAU,YAAf,SACI,cAAC,GAAD,CAAayQ,UAAW/Q,SC+BrB6E,I,cAAAA,aARS,SAACC,GACrB,MAAO,CACHhB,YAAagB,EAAMhB,YACnBiB,qBAAsBD,EAAMC,qBAC5BC,mBAAoBF,EAAME,sBAIMC,EAAzBJ,EAvDM,SAAC,GAA6E,IAA5Ef,EAA2E,EAA3EA,YAA2E,EAA9DpF,oBAA8D,EAAzCF,kBAAyC,EAAtBG,iBAExE6C,qBAAU,cAcP,IAE4C,IAAvBsC,EAAYmG,QAAenG,EAAY5B,KAAI,SAACrC,GAChE,OACI,eAAC,IAAD,CAAMU,GAAE,wBAAmBV,EAAKG,IAAoBM,UAAU,eAA9D,UACI,qBAAKA,UAAU,mBAAf,SAAmCT,EAAKG,KACxC,qBAAKM,UAAU,qBAAf,SAAqCT,EAAK2D,OAC1C,qBAAKlD,UAAU,sBAAf,SAAsCT,EAAKqE,QAC3C,qBAAK5D,UAAU,qBAAf,SACKT,EAAKkE,SAL6BlE,EAAKG,OAqBxD,OAEI,qFCoFOmR,I,OAxHa,SAAC,GAAiC,IAAhC/F,EAA+B,EAA/BA,OAAQD,EAAuB,EAAvBA,OAAQiG,EAAe,EAAfA,UACpC9F,EAAkBC,OAAOC,OAAO,CAClChI,KAAM,KAF+C,EAKVuC,mBAASuF,GALC,mBAKlD+F,EALkD,KAKlCC,EALkC,OAMfvL,mBAAS,MANM,mBAMlDwL,EANkD,KAMnCC,EANmC,OAQ3BzL,oBAAS,GARkB,mBAQlDc,EARkD,KAQzC4K,EARyC,OAS/B1L,oBAAS,GATsB,mBASlD4B,EATkD,KAS3C+J,EAT2C,OAWvB3L,oBAAS,GAXc,mBAWlD4L,EAXkD,KAWvCC,EAXuC,KAenD9F,EAAe,SAACC,GAClB,IAAMC,EAASD,EAAEC,OAEG,SAAjB,CAACA,EAAOxI,OACPgO,EAAiB,CACb/N,MAAOuI,EAAOC,QAItBqF,EAAqB,6BACdD,GADa,mBAEfrF,EAAOxI,KAAOwI,EAAOE,MAAMC,WA8C9B0F,EAAchL,EAAU,sDAAgB,KACxCiL,EAAYnK,EAAQ,uCAAW,KAC/BoK,EAAiBJ,EAA8C,KAAlC,kKAE7BvF,EAAW,qBAAK9L,UAAU,QAAQ+L,QAASlB,EAAhC,SAAwC,qBAAK3K,KAAI,UAAKqF,EAAL,cAElE,OACI,cAACyG,GAAA,EAAD,CAAOlB,OAAQA,EAAQD,OAAQA,EAAQ7K,UAAU,eAAjD,SACI,eAACmM,GAAA,EAAD,CAAMzM,GAAG,oBAAT,UACI,cAACuM,GAAA,EAAD,CAAapB,OAAQA,EAAQqB,MAAOJ,EAApC,iIACA,eAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,UAAX,8DACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,OACLxD,GAAG,UACH+M,SAAUjB,EACVkG,aAAa,YAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,eAAX,gFACA,cAACC,GAAA,EAAD,CACIvF,OAAO,UACPnJ,KAAK,OACLoF,KAAK,QACLxD,GAAG,eACH+M,SAAUjB,UAItB,eAACkB,GAAA,EAAD,WACI,wBACIX,QA5EC,SAACN,GAClBA,EAAEmB,iBAEFwE,GAAS,GACTD,GAAW,GAEX,IAAItE,EAAW,IAAIC,SAEdmE,GAM0C,IAAtCF,EAAe7N,KAAK2I,OAAOlC,QAAiD,IAA/BsH,EAAc9N,MAAMwG,QAClE2H,GAAa,GAEbzE,EAASI,OAAO,OAAQ8D,EAAe7N,MACvC2J,EAASI,OAAO,QAASgE,EAAc9N,MAAM,IAE7CsD,EAAcoC,KAAd,oBAAwCgE,GACnC9D,MAAK,WACFoI,GAAW,GAEXL,IACAjG,OAEH1B,OAAM,SAAAC,GACH+H,GAAW,GACXC,GAAS,GAET5J,QAAQC,IAAI2B,QAtBxB+H,GAAW,GACXG,GAAa,GAEbK,YAAW,kBAAML,GAAa,KAAO,OAiEzB3E,UAAQ,EAFZ,8DAMC4E,EACAC,EACAC,YCDNG,GAhHc,SAAC,GAAsD,IAApD9G,EAAmD,EAAnDA,OAAQD,EAA2C,EAA3CA,OAAQgH,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,UAAWhB,EAAe,EAAfA,UAC1D9F,EAAkBC,OAAOC,OAAO,CAClChI,KAAM,KAFqE,EAKhCuC,mBAASuF,GALuB,mBAKxE+F,EALwE,KAKxDgB,EALwD,OAMjDtM,mBAAS,MANwC,mBAMxEuM,EANwE,KAM/DC,EAN+D,OAQjDxM,oBAAS,GARwC,mBAQxEc,EARwE,KAQ/D4K,EAR+D,OASrD1L,oBAAS,GAT4C,mBASxE4B,EATwE,KASjE+J,EATiE,KAWzE5F,EAAe,SAACC,GAClB,IAAMC,EAASD,EAAEC,OAEI,SAAjB,CAACA,EAAOxI,OACR+O,EAAW,CACP9O,MAAOuI,EAAOC,QAItBoG,EAAqB,6BACdhB,GADa,mBAEfrF,EAAOxI,KAAOwI,EAAOE,MAAMC,WAiD9B0F,EAAchL,EAAU,sDAAgB,KACxCiL,EAAYnK,EAAQ,uCAAW,KAE/ByE,EAAW,qBAAK9L,UAAU,QAAQ+L,QAASlB,EAAhC,SAAwC,qBAAK3K,KAAI,UAAKqF,EAAL,cAElE,OACI,cAACyG,GAAA,EAAD,CAAOlB,OAAQA,EAAQD,OAAQA,EAAQ7K,UAAU,eAAjD,SACI,eAACmM,GAAA,EAAD,CAAMzM,GAAG,qBAAT,UACI,eAACuM,GAAA,EAAD,CAAapB,OAAQA,EAAQqB,MAAOJ,EAApC,+DAAyDgG,EAAzD,OACA,eAAC1F,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,UAAX,8DACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,OACLxD,GAAG,UACHgS,aAAa,OACbjF,SAAUjB,OAGlB,eAACa,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,eAAX,gFACA,cAACC,GAAA,EAAD,CACIvF,OAAO,UACPnJ,KAAK,OACLoF,KAAK,QACLxD,GAAG,eACH+M,SAAUjB,UAItB,eAACkB,GAAA,EAAD,WACI,wBAAQC,UAAQ,EAACZ,QA7EZ,WACjBqF,GAAS,GACTD,GAAW,GAEX,IAAMtE,EAAW,IAAIC,SAGfoF,GADUF,EAAUA,EAAQ7O,MAAQ,MACZ6O,EAAQ7O,MAAMwG,OAAS,EACjDoD,EAAU,EAEd,IAAK,IAAIC,KAAO+D,EACTA,EAAe/D,IACdH,EAASI,OAAOD,EAAK+D,EAAe/D,IAIxCgF,GAAWE,GACXrF,EAASI,OAAO,QAAS+E,EAAQ7O,MAAM,IAjBpB,qBAoBJ0J,EAASK,QApBL,IAoBvB,2BAAoC,2BAChCH,KArBmB,8BAwBP,IAAZA,GACAoE,GAAW,GAEXtG,KAEApE,EAAc0G,IAAd,qBAAgC0E,GAAWhF,GACtC9D,MAAK,WACFoI,GAAW,GAEXL,IACAjG,OAEH1B,OAAM,SAACC,GACJ+H,GAAW,GACXC,GAAS,GAET5J,QAAQC,IAAI2B,OAqCZ,8DACCmI,EACAC,WCtDNW,GAvDK,SAAC,GAAyE,IAAxErH,EAAuE,EAAvEA,OAAQhD,EAA+D,EAA/DA,IAAK+C,EAA0D,EAA1DA,OAAQgH,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,UAAWhB,EAA8B,EAA9BA,UAAW5C,EAAmB,EAAnBA,cAAmB,EAC3DzI,oBAAS,GADkD,mBAClFc,EADkF,KACzE4K,EADyE,OAE/D1L,oBAAS,GAFsD,mBAElF4B,EAFkF,KAE3E+J,EAF2E,KAmCnFG,EAAchL,EAAU,sDAAgB,KACxCiL,EAAYnK,EAAQ,uCAAW,KAE/ByE,EAAW,qBAAK9L,UAAU,QAAQ+L,QAASlB,EAAhC,SAAwC,qBAAK3K,KAAI,UAAKqF,EAAL,cAElE,OACI,eAACyG,GAAA,EAAD,CAAOlB,OAAQA,EAAQD,OAAQA,EAAQ7K,UAAU,eAAjD,UACI,cAACiM,GAAA,EAAD,CAAapB,OAAQA,EAAQqB,MAAOJ,EAApC,8DACA,eAACM,GAAA,EAAD,0DACc0F,EADd,QAGA,eAACpF,GAAA,EAAD,WACI,wBAAQC,UAAQ,EAACZ,QA3CR,WACjBqF,GAAS,GACTD,GAAW,GAEX1K,EAAcmH,OAAd,UAAwB9F,GAAxB,OAA8B+J,EAA9B,YACK9I,MAAK,WACFoI,GAAW,GAEPL,GACAA,IAGA5C,GACAA,IAGJrD,OAEH1B,OAAM,SAACC,GACJ+H,GAAW,GACXC,GAAS,GAELhI,EAAIjC,WACnBK,QAAQC,IAAI2B,EAAIjC,SAASa,MACzBR,QAAQC,IAAI2B,EAAIjC,SAASO,QACzBF,QAAQC,IAAI2B,EAAIjC,SAASN,cAkBd,wDACC0K,EACAC,SC8DXhI,GAAc,WAChB,OACI,qBAAKxJ,UAAU,eAAf,SACI,cAAC,GAAD,OAKNyJ,GAAY,WACd,OACI,qBAAKzJ,UAAU,aAAf,oBAcOuE,gBARS,SAACC,GACrB,MAAO,CACHvB,YAAauB,EAAMvB,YACnBmH,qBAAsB5F,EAAM4N,mBAC5B/H,mBAAoB7F,EAAM6F,sBAIM1F,EAAzBJ,EAtIU,SAAC,GAAuH,IAAtHtB,EAAqH,EAArHA,YAAarF,EAAwG,EAAxGA,kBAAmByM,EAAqF,EAArFA,mBAAoBD,EAAiE,EAAjEA,qBAAiE,KAA3CpM,oBAA2C,EAAtBC,iBACtFwH,oBAAS,IADmG,mBACrI4M,EADqI,KAC3HC,EAD2H,OAE1G7M,oBAAS,GAFiG,mBAErI8M,EAFqI,KAE1HC,EAF0H,OAGtG/M,oBAAS,GAH6F,mBAGrIgN,EAHqI,KAGxHC,EAHwH,OAK9GjN,qBAL8G,mBAKrIoM,EALqI,KAK5Hc,EAL4H,OAM1GlN,qBAN0G,mBAMrIqM,EANqI,KAM1Hc,EAN0H,OAQ5GnN,oBAAS,GARmG,mBAQrIoN,EARqI,KAQ3HC,EAR2H,KAUtIhC,EAAY,kBAAMgC,GAAY,IAE9BC,EAAiB,kBAAMT,GAAaD,IACpCW,EAAkB,kBAAMR,GAAcD,IACtCU,EAAoB,kBAAMP,GAAgBD,IAEhDvR,qBAAU,YACqB,IAAvB+B,EAAY0G,QAAgBkJ,IAYxBjV,EAAkBoF,EAAGC,eAG9B,CAAC4P,IAEJ,IAYMK,EAAyC,IAAvBjQ,EAAY0G,OAAe1G,EAAYrB,KAAI,SAACrC,GAChE,OACI,sBAAmBS,UAAU,mBAA7B,UACI,qBAAKA,UAAU,uDAAf,SAAuET,EAAKG,KAC5E,qBAAKM,UAAU,2DAAf,SAA2ET,EAAK2D,OAChF,sBAAKlD,UAAU,2BAAf,UACI,qBACI+L,QAAS,kBAnBN,SAACxM,GACpBoT,EAAWpT,EAAKG,IAChBkT,EAAarT,EAAK2D,MAClB8P,IAgB+BG,CAAe5T,IAC9BS,UAAU,wBAFd,SAII,qBAAKE,KAAI,UAAKqF,EAAL,aAEb,qBACIwG,QAAS,kBAnBJ,SAACxM,GACtBoT,EAAWpT,EAAKG,IAChBkT,EAAarT,EAAK2D,MAClB+P,IAgB+BG,CAAiB7T,IAChCS,UAAU,0BAFd,SAII,qBAAKE,KAAI,UAAKqF,EAAL,oBAdXhG,EAAKG,OAmBlB,KAECkK,EAAiBQ,EAAuB,cAAC,GAAD,IAAiB,KAEzDP,EAAeQ,EAAqB,cAAC,GAAD,IAAe,KAEzD,OACI,qCACI,sBAAKrK,UAAU,aAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,yDAAf,gBACA,qBAAKA,UAAU,6DAAf,iEAEH4J,EACAsJ,EACArJ,KAEL,wBAAQ7J,UAAU,gBAAgB+L,QAASgH,EAA3C,qHACA,cAAC,GAAD,CACIjI,OAAQuH,EACRxH,OAAQkI,EACRjC,UAAWA,IAEf,cAAC,GAAD,CACIhG,OAAQyH,EACR1H,OAAQmI,EACRlC,UAAWA,EACXe,QAASA,EACTC,UAAWA,IAEf,cAAC,GAAD,CACIhH,OAAQ2H,EACR5H,OAAQoI,EACRnC,UAAWA,EACXe,QAASA,EACTC,UAAWA,EACXhK,IAAG,sBC8FJvD,gBARS,SAACC,GACrB,MAAO,CACHvB,YAAauB,EAAMvB,YACnBmH,qBAAsB5F,EAAM4F,qBAC5BC,mBAAoB7F,EAAM6F,sBAIM1F,EAAzBJ,EAhMU,SAAC,GAA4F,IAA3FtB,EAA0F,EAA1FA,YAAamH,EAA6E,EAA7EA,qBAAsBC,EAAuD,EAAvDA,mBAAoBS,EAAmC,EAAnCA,OAAQD,EAA2B,EAA3BA,OAAQqD,EAAmB,EAAnBA,cAExFlD,EAAkBC,OAAOC,OAAO,CAClChI,KAAM,GACNG,OAAQ,GACRC,YAAa,GACbC,WAAY,KANiG,EAStEkC,mBAASuF,GAT6D,mBAS1GqI,EAT0G,KAS5FC,EAT4F,OAU3E7N,mBAAS,MAVkE,mBAU1G8N,EAV0G,KAU7FC,EAV6F,OAYnF/N,oBAAS,GAZ0E,mBAY1Gc,EAZ0G,KAYjG4K,EAZiG,OAavF1L,oBAAS,GAb8E,mBAa1G4B,EAb0G,KAanG+J,EAbmG,OAe/E3L,oBAAS,GAfsE,mBAe1GgO,EAf0G,KAe/FC,EAf+F,KAiB3GlI,EAAe,SAACC,GAClB,IAAMC,EAASD,EAAEC,OAEI,SAAjB,CAACA,EAAOxI,OACRsQ,EAAe,CACXrQ,MAAOuI,EAAOC,QAItB2H,EAAmB,6BACZD,GADW,mBAEb3H,EAAOxI,KAAOwI,EAAOE,MAAMC,WAK9B8H,EAAkB,SAACC,EAAWhI,GAEhC,OAAQgI,GACJ,IAAK,QACIhI,GACD8H,GAAa,GAEjB,MACJ,QACgC,IAAxB9H,EAAMC,OAAOlC,QACb+J,GAAa,KAsDvBG,EAAqB5Q,EAAcA,EAAYrB,KAAI,SAACrC,GACtD,OACI,wBAAQuU,MAAOvU,EAAK2D,KAApB,SAAyC3D,EAAKG,IAAfH,EAAKG,OAEvC,KAECkK,EAAiBQ,EAAuB,UAAY,KAEpDP,EAAeQ,EAAqB,QAAU,KAE9CkH,EAAchL,EAAU,sDAAgB,KACxCiL,EAAYnK,EAAQ,uCAAW,KAC/BoK,EAAiBgC,EAA8C,KAAlC,kKAE7B3H,EAAW,qBAAK9L,UAAU,QAAQ+L,QAASlB,EAAhC,SAAwC,qBAAK3K,KAAI,UAAKqF,EAAL,cAElE,OACI,cAACyG,GAAA,EAAD,CAAOlB,OAAQA,EAAQD,OAAQA,EAAQ7K,UAAU,eAAjD,SACI,eAACmM,GAAA,EAAD,CAAMzM,GAAG,iBAAT,UACI,cAACuM,GAAA,EAAD,CAAapB,OAAQA,EAAQqB,MAAOJ,EAApC,qHACA,eAACM,GAAA,EAAD,WACA,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,UAAX,8DACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,OACLxD,GAAG,UACH+M,SAAUjB,EACVkG,aAAa,YAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,YAAX,4CACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,SACLxD,GAAG,YACH+M,SAAUjB,EACVkG,aAAa,cAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,iBAAX,8DACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,cACLxD,GAAG,iBACH+M,SAAUjB,EACVkG,aAAa,mBAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,WAAX,gFACA,cAACC,GAAA,EAAD,CACIvF,OAAO,UACPnJ,KAAK,OACLoF,KAAK,QACLxD,GAAG,WACH+M,SAAUjB,OAGlB,eAACa,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,gBAAX,oEACA,eAACC,GAAA,EAAD,CACI1O,KAAK,SACLoF,KAAK,aACLxD,GAAG,gBACHqU,UAAQ,EACRtH,SAAUjB,EALd,UAOK5B,EACAiK,EACAhK,WAIT,eAAC6C,GAAA,EAAD,WACI,wBAAQC,UAAQ,EAACZ,QAAS,kBA5HrB,SAACiI,GAClB5C,GAAS,GACTD,GAAW,GAEX,IAAM8C,EAAO7S,SAASC,cAAc2S,GAC9BnH,EAAW,IAAIC,SAASmH,GAE9BP,GAAa,GAEb,IAAMQ,EAAoBX,EAAcA,EAAYpQ,MAAMwG,OAAS,KAEnE,GAAK4J,GAAgBW,GAAsBrH,EAASqD,IAAI,cAKjD,CACHrD,EAASsH,IAAI,OAAQd,EAAanQ,MAClC2J,EAASsH,IAAI,SAAUd,EAAahQ,QACpCwJ,EAASsH,IAAI,cAAed,EAAa/P,aACzCuJ,EAASsH,IAAI,QAASZ,EAAYpQ,MAAM,IAJrC,qBAMc0J,EAASuH,WANvB,IAMH,2BAAqC,CAAC,IAA7BC,EAA4B,QACjCV,EAAgBU,EAAK,GAAIA,EAAK,KAP/B,8BAUCZ,EACAhN,EAAcoC,KAAK,kBAAmBgE,GACrC9D,MAAK,WACFoI,GAAW,GACXjD,IACArD,OAEH1B,OAAM,SAAAC,GACH+H,GAAW,GACPC,GAAS,GAET5J,QAAQC,IAAI2B,OAGpB+H,GAAW,GAEXQ,YAAW,kBAAM+B,GAAa,KAAO,WA9BzCvC,GAAW,GACXuC,GAAa,GAEb/B,YAAW,kBAAM+B,GAAa,KAAO,KA6GGY,CAAa,oBAA7C,8DACC/C,EACAC,EACAC,aCPNlN,gBARS,SAACC,GACrB,MAAO,CACHvB,YAAauB,EAAMvB,YACnBmH,qBAAsB5F,EAAM4F,qBAC5BC,mBAAoB7F,EAAM6F,sBAIM1F,EAAzBJ,EA1KW,SAAC,GAAiH,IAA/GtB,EAA8G,EAA9GA,YAAamH,EAAiG,EAAjGA,qBAAsBC,EAA2E,EAA3EA,mBAAoBS,EAAuD,EAAvDA,OAAQD,EAA+C,EAA/CA,OAAQgH,EAAuC,EAAvCA,QAAS3D,EAA8B,EAA9BA,cAAe4D,EAAe,EAAfA,UAElH9G,EAAkBC,OAAOC,OAAO,CAClChI,KAAM,GACNG,OAAQ,GACRC,YAAa,KALsH,EAQ9FmC,mBAASuF,GARqF,mBAQhIuJ,EARgI,KAQnHC,EARmH,OASnG/O,mBAAS,MAT0F,mBAShIgP,EATgI,KASpHC,EAToH,OAWzGjP,oBAAS,GAXgG,mBAWhIc,EAXgI,KAWvH4K,EAXuH,OAY7G1L,oBAAS,GAZoG,mBAYhI4B,EAZgI,KAYzH+J,EAZyH,KAcjI5F,EAAe,SAACC,GAClB,IAAMC,EAASD,EAAEC,OAEG,SAAjB,CAACA,EAAOxI,OACPwR,EAAc,CACVvR,MAAOuI,EAAOC,QAItB6I,EAAkB,6BACXD,GADU,mBAEZ7I,EAAOxI,KAAOwI,EAAOE,MAAMC,WAkD9BgI,EAAqB5Q,EAAcA,EAAYrB,KAAI,SAACrC,GACtD,OACI,wBAAQuU,MAAOvU,EAAK2D,KAApB,SAAyC3D,EAAKG,IAAfH,EAAKG,OAEvC,KAEC6R,EAAchL,EAAU,sDAAgB,KACxCiL,EAAYnK,EAAQ,uCAAW,KAE/BuC,EAAiBQ,EAAuB,UAAY,KAEpDP,EAAeQ,EAAqB,QAAU,KAE9CyB,EAAW,qBAAK9L,UAAU,QAAQ+L,QAASlB,EAAhC,SAAwC,qBAAK3K,KAAI,UAAKqF,EAAL,cAElE,OACI,cAACyG,GAAA,EAAD,CAAOlB,OAAQA,EAAQD,OAAQA,EAAQ7K,UAAU,eAAjD,SACI,eAACmM,GAAA,EAAD,CAAMzM,GAAG,kBAAT,UACI,eAACuM,GAAA,EAAD,CAAapB,OAAQA,EAAQqB,MAAOJ,EAApC,+DAAyDgG,EAAzD,OACA,eAAC1F,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,cAAX,8DACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,OACLxD,GAAG,cACHgS,aAAa,OACbjF,SAAUjB,OAGlB,eAACa,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,gBAAX,4CACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,SACLxD,GAAG,gBACHgS,aAAa,SACbjF,SAAUjB,OAGlB,eAACa,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,qBAAX,8DACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,cACLxD,GAAG,qBACHgS,aAAa,cACbjF,SAAUjB,OAGlB,eAACa,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,eAAX,gFACA,cAACC,GAAA,EAAD,CACIvF,OAAO,UACPnJ,KAAK,OACLoF,KAAK,QACLxD,GAAG,eACH+M,SAAUjB,OAGlB,eAACa,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,oBAAX,oEACA,eAACC,GAAA,EAAD,CACI1O,KAAK,SACLoF,KAAK,aACLxD,GAAG,oBACH+M,SAAUjB,EACVuI,UAAQ,EALZ,UAOKnK,EACAiK,EACAhK,WAIb,eAAC6C,GAAA,EAAD,WACI,wBAAQC,UAAQ,EAACZ,QAAS,YA1HrB,SAACiI,GAClB5C,GAAS,GACTD,GAAW,GAEX,IAAM8C,EAAO7S,SAASC,cAAc2S,GAC9BnH,EAAW,IAAIC,SAASmH,GAE1BlH,EAAU,EAERmF,EADUuC,GAAaA,EAAWtR,MACVsR,EAAWtR,MAAMwG,OAAS,EAExD,IAAK,IAAIqD,KAAOuH,EACPA,EAAYvH,IACbH,EAASe,OAAOZ,GAInByH,GAAevC,GAChBrF,EAASe,OAAO,SAlBS,qBAqBVf,EAASK,QArBC,IAqB7B,2BAAoC,0BAChCH,IAtByB,8BAyBb,IAAZA,GACAoE,GAAW,GAEXtG,KAEApE,EAAc0G,IAAd,mBAA8B0E,GAAWhF,GACpC9D,MAAK,WACFoI,GAAW,GAEXjD,IACArD,OAEH1B,OAAM,SAACC,GACJ+H,GAAW,GACXC,GAAS,GAET5J,QAAQC,IAAI2B,MAkFRkL,CAAa,qBADjB,8DAGC/C,EACAC,aC3CfhI,GAAc,WAChB,OACI,qBAAKxJ,UAAU,eAAf,SACI,cAAC,GAAD,OAKNyJ,GAAY,WACd,OACI,qBAAKzJ,UAAU,aAAf,oBAcOuE,gBARS,SAACC,GACrB,MAAO,CACHpB,SAAUoB,EAAMpB,SAChBoM,kBAAmBhL,EAAMgL,kBACzBC,gBAAiBjL,EAAMiL,mBAIS9K,EAAzBJ,EA7IO,SAAC,GAAqG,IAApGnB,EAAmG,EAAnGA,SAAU9E,EAAyF,EAAzFA,eAAgBkR,EAAyE,EAAzEA,kBAAmBC,EAAsD,EAAtDA,gBAAsD,KAArCjR,iBAAqC,EAAnBC,cACpEgH,oBAAS,IAD8E,mBAChH4M,EADgH,KACtGC,EADsG,OAErF7M,oBAAS,GAF4E,mBAEhH8M,EAFgH,KAErGC,EAFqG,OAGjF/M,oBAAS,GAHwE,mBAGhHgN,EAHgH,KAGnGC,EAHmG,OAKzFjN,qBALyF,mBAKhHoM,EALgH,KAKvGc,EALuG,OAMrFlN,qBANqF,mBAMhHqM,EANgH,KAMrGc,EANqG,OAQzFnN,oBAAS,GARgF,mBAQhHqD,EARgH,KAQvG2E,EARuG,KAUjHS,EAAgB,kBAAMT,GAAY3E,IAElCiK,EAAiB,kBAAMT,GAAaD,IACpCW,EAAkB,kBAAMR,GAAcD,IACtCU,EAAoB,kBAAMP,GAAgBD,IAEhDvR,qBAAU,WAUN5C,EAAe0E,EAAGI,YAEnB,CAAC0F,IAEJ,IAYM6L,EAAevR,EAAWA,EAASxB,KAAI,SAAArC,GACzC,IAAMqV,EAAiB,GAUvB,OARArV,EAAKgE,WAAWjE,SAAQ,SAAAuV,GACpB7R,EAAGC,YAAY3D,SAAQ,SAAAwV,GACfD,IAAOC,EAAWpV,IAClBkV,EAAeG,KAAKD,EAAW5R,YAMvC,sBAAmBlD,UAAU,mBAA7B,UACI,qBAAKA,UAAU,0CAAf,SAA0DT,EAAKG,KAC/D,qBAAKM,UAAU,wDAAf,SAAwET,EAAK2D,OAC7E,qBAAKlD,UAAU,oEAAf,SAAoF4U,EAAezS,KAAK,QACxG,sBAAKnC,UAAU,2BAAf,UACI,qBACI+L,QAAS,kBA9BN,SAACxM,GACpBoT,EAAWpT,EAAKG,IAChBkT,EAAarT,EAAK2D,MAClB8P,IA2B+BG,CAAe5T,IAC9BS,UAAU,wBAFd,SAII,qBAAKE,KAAI,UAAKqF,EAAL,aAEb,qBACIwG,QAAS,kBA9BJ,SAACxM,GACtBoT,EAAWpT,EAAKG,IAChBkT,EAAarT,EAAK2D,MAClB+P,IA2B+BG,CAAiB7T,IAChCS,UAAU,0BAFd,SAII,qBAAKE,KAAI,UAAKqF,EAAL,oBAfXhG,EAAKG,OAoBlB,KAECkK,EAAiB4F,EAAoB,cAAC,GAAD,IAAiB,KAEtD3F,EAAe4F,EAAkB,cAAC,GAAD,IAAe,KAEtD,OACI,qCACI,sBAAKzP,UAAU,aAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,uBAAf,gBACA,qBAAKA,UAAU,0DAAf,8DACA,qBAAKA,UAAU,sEAAf,uEAEH4J,EACA+K,EACA9K,KAEL,wBAAQ7J,UAAU,gBAAgB+L,QAASgH,EAA3C,yGACA,cAAC,GAAD,CACIjI,OAAQuH,EACRxH,OAAQkI,EACR7E,cAAeA,IAEnB,cAAC,GAAD,CACIpD,OAAQyH,EACR1H,OAAQmI,EACR9E,cAAeA,EACf2D,QAASA,EACTC,UAAWA,IAEf,cAAC,GAAD,CACIhH,OAAQ2H,EACR5H,OAAQoI,EACR/E,cAAeA,EACf2D,QAASA,EACTC,UAAWA,EACXhK,IAAG,oBC0HJvD,gBARS,SAACC,GACrB,MAAO,CACHvB,YAAauB,EAAMvB,YACnBmH,qBAAsB5F,EAAM4F,qBAC5BC,mBAAoB7F,EAAM6F,sBAIM1F,EAAzBJ,EApOa,SAAC,GAAyF,IAAxFtB,EAAuF,EAAvFA,YAAamH,EAA0E,EAA1EA,qBAAsBC,EAAoD,EAApDA,mBAAoBS,EAAgC,EAAhCA,OAAQD,EAAwB,EAAxBA,OAASiG,EAAe,EAAfA,UAC5F9F,EAAkBC,OAAOC,OAAO,CAClChI,KAAM,GACNI,YAAa,GACbG,KAAM,GACNE,KAAM,GACNC,MAAO,GACPF,QAAS,GACTW,QAAS,GACTd,WAAY,KATiG,EAYlEkC,mBAASuF,GAZyD,mBAY1GgK,EAZ0G,KAY1FC,EAZ0F,OAavExP,mBAAS,MAb8D,mBAa1GyP,EAb0G,KAa3FC,EAb2F,OAenF1P,oBAAS,GAf0E,mBAe1Gc,EAf0G,KAejG4K,EAfiG,OAgBvF1L,oBAAS,GAhB8E,mBAgB1G4B,EAhB0G,KAgBnG+J,EAhBmG,OAkB/E3L,oBAAS,GAlBsE,mBAkB1GgO,EAlB0G,KAkB/FC,EAlB+F,KAoB3GlI,EAAe,SAACC,GAClB,IAAMC,EAASD,EAAEC,OAEI,SAAjB,CAACA,EAAOxI,OACRiS,EAAiB,CACbhS,MAAOuI,EAAOC,QAItBsJ,EAAqB,6BACdD,GADa,mBAEftJ,EAAOxI,KAAOwI,EAAOE,MAAMC,WAI9B8H,EAAkB,SAACC,EAAWhI,GAEhC,OAAQgI,GACJ,IAAK,QACIhI,GACD8H,GAAa,GAEjB,MACJ,QACgC,IAAxB9H,EAAMC,OAAOlC,QACb+J,GAAa,KAyDvBG,EAA4C,IAAvB5Q,EAAY0G,OAAgB1G,EAAYrB,KAAI,SAACrC,GACpE,OACI,wBAAQuU,MAAOvU,EAAK2D,KAApB,SAAyC3D,EAAKG,IAAfH,EAAKG,OAEvC,KAECkK,EAAiBQ,EAAuB,UAAY,KAEpDP,EAAeQ,EAAqB,QAAU,KAE9CkH,EAAchL,EAAU,sDAAgB,KACxCiL,EAAYnK,EAAQ,uCAAW,KAC/BoK,EAAiBgC,EAA8C,KAAlC,kKAE7B3H,EAAW,qBAAK9L,UAAU,QAAQ+L,QAASlB,EAAhC,SAAwC,qBAAK3K,KAAI,UAAKqF,EAAL,cAElE,OACI,cAACyG,GAAA,EAAD,CAAOlB,OAAQA,EAAQD,OAAQA,EAAQ7K,UAAU,eAAjD,SACI,eAACmM,GAAA,EAAD,CAAMzM,GAAG,qBAAT,UACI,cAACuM,GAAA,EAAD,CAAapB,OAAQA,EAAQqB,MAAOJ,EAApC,2HACA,eAACM,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,UAAX,8DACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,OACLxD,GAAG,UACH+M,SAAUjB,EACVkG,aAAa,YAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,iBAAX,8DACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,cACLxD,GAAG,iBACH+M,SAAUjB,EACVkG,aAAa,mBAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,WAAX,gFACA,cAACC,GAAA,EAAD,CACIvF,OAAO,UACPnJ,KAAK,OACLoF,KAAK,QACLxD,GAAG,WACH+M,SAAUjB,OAGlB,eAACa,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,UAAX,sCACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,OACLxD,GAAG,UACH+M,SAAUjB,EACVkG,aAAa,YAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,UAAX,4CACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,OACLxD,GAAG,UACH+M,SAAUjB,EACVkG,aAAa,YAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,WAAX,sCACA,cAACC,GAAA,EAAD,CACI1O,KAAK,SACLoF,KAAK,QACLxD,GAAG,WACH+M,SAAUjB,EACVkG,aAAa,aAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,UAAX,4CACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,UACLxD,GAAG,UACH+M,SAAUjB,EACVkG,aAAa,eAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,WAAX,oEACA,eAACC,GAAA,EAAD,CACI1O,KAAK,SACLoF,KAAK,aACLxD,GAAG,WACHqU,UAAQ,EAJZ,UAMKnK,EACAiK,EACAhK,WAIb,eAAC6C,GAAA,EAAD,WACI,wBAAQC,UAAQ,EAACZ,QAAS,YA5JrB,SAACiI,GAClB5C,GAAS,GACTD,GAAW,GAEX,IAAM8C,EAAO7S,SAASC,cAAc2S,GAC9BnH,EAAW,IAAIC,SAASmH,GAE9BP,GAAa,GAEb,IAAM0B,EAAsBF,EAAgBA,EAAc/R,MAAMwG,OAAS,KAEzE,GAAKuL,GAAmBE,GAAwBvI,EAASqD,IAAI,cAKtD,CACHrD,EAASsH,IAAI,OAAQa,EAAe9R,MACpC2J,EAASsH,IAAI,cAAea,EAAe1R,aAC3CuJ,EAASsH,IAAI,QAASe,EAAc/R,MAAM,IAC1C0J,EAASsH,IAAI,OAAQa,EAAevR,MACpCoJ,EAASsH,IAAI,OAAQa,EAAerR,MACpCkJ,EAASsH,IAAI,QAASa,EAAepR,OACrCiJ,EAASsH,IAAI,UAAWa,EAAetR,SACvCmJ,EAASsH,IAAI,UAAWa,EAAe3Q,SARpC,qBAUcwI,EAASuH,WAVvB,IAUH,2BAAqC,CAAC,IAA7BC,EAA4B,QACjCV,EAAgBU,EAAK,GAAIA,EAAK,KAX/B,8BAcCZ,EACAhN,EAAcoC,KAAK,qBAAsBgE,GACpC9D,MAAK,WACFoI,GAAW,GACXL,IACAjG,OAEH1B,OAAM,SAAAC,GACH+H,GAAW,GACXC,GAAS,GAET5J,QAAQC,IAAI2B,OAGpB+H,GAAW,GACXQ,YAAW,kBAAM+B,GAAa,KAAO,WAjCzCvC,GAAW,GACXuC,GAAa,GAEb/B,YAAW,kBAAM+B,GAAa,KAAO,KA8IzBY,CAAa,wBADjB,8DAGC/C,EACAC,EACAC,aCINlN,gBATS,SAACC,GACrB,MAAO,CACHvB,YAAauB,EAAMvB,YACnBmH,qBAAsB5F,EAAM4F,qBAC5BC,mBAAoB7F,EAAM6F,sBAKM1F,EAAzBJ,EAzNc,SAAC,GAA8G,IAA7GtB,EAA4G,EAA5GA,YAAcmH,EAA8F,EAA9FA,qBAAsBC,EAAwE,EAAxEA,mBAAoBS,EAAoD,EAApDA,OAAQD,EAA4C,EAA5CA,OAAQgH,EAAoC,EAApCA,QAAUC,EAA0B,EAA1BA,UAAWhB,EAAe,EAAfA,UAClH9F,EAAkBC,OAAOC,OAAO,CAClChI,KAAM,GACNI,YAAa,GACbG,KAAM,GACNE,KAAM,GACNC,MAAO,GACPF,QAAS,GACTW,QAAS,GACTd,WAAY,KATuH,EAYxFkC,mBAASuF,GAZ+E,mBAYhIgK,EAZgI,KAYhHC,EAZgH,OAa7FxP,mBAAS,MAboF,mBAahIyP,EAbgI,KAajHC,EAbiH,OAezG1P,oBAAS,GAfgG,mBAehIc,EAfgI,KAevH4K,EAfuH,OAgB7G1L,oBAAS,GAhBoG,mBAgBhI4B,EAhBgI,KAgBzH+J,EAhByH,KAkBjI5F,EAAe,SAACC,GAClB,IAAMC,EAASD,EAAEC,OAGG,SAAjB,CAACA,EAAOxI,OACPiS,EAAiB,CACbhS,MAAOuI,EAAOC,QAIA,WAAlB,CAACD,EAAOE,QACRqJ,EAAqB,6BACdD,GADa,mBAEftJ,EAAOxI,MAAQwI,EAAOE,MAAMC,UAIrCrE,QAAQC,IAAIiE,EAAOE,OACnBpE,QAAQC,WAAWiE,EAAOE,OAE1BqJ,EAAqB,6BACdD,GADa,mBAEftJ,EAAOxI,KAAOwI,EAAOE,MAAMC,WAoD9BgI,EAAqB5Q,EAAcA,EAAYrB,KAAI,SAACrC,GACtD,OACI,wBAAQuU,MAAOvU,EAAK2D,KAApB,SAAyC3D,EAAKG,IAAfH,EAAKG,OAEvC,KAEC6R,EAAchL,EAAU,sDAAgB,KACxCiL,EAAYnK,EAAQ,uCAAW,KAE/BuC,EAAiBQ,EAAuB,UAAY,KAEpDP,EAAeQ,EAAqB,QAAU,KAE9CyB,EAAW,qBAAK9L,UAAU,QAAQ+L,QAASlB,EAAhC,SAAwC,qBAAK3K,KAAI,UAAKqF,EAAL,cAElE,OACI,cAACyG,GAAA,EAAD,CAAOlB,OAAQA,EAAQD,OAAQA,EAAQ7K,UAAU,eAAjD,SACI,eAACmM,GAAA,EAAD,CAAMzM,GAAG,sBAAT,UACI,eAACuM,GAAA,EAAD,CAAapB,OAAQA,EAAQqB,MAAOJ,EAApC,+DAAyDgG,EAAzD,OACA,eAAC1F,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,cAAX,8DACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,OACLxD,GAAG,cACH+M,SAAUjB,EACVkG,aAAa,YAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,qBAAX,8DACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,cACLxD,GAAG,qBACH+M,SAAUjB,EACVkG,aAAa,mBAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,eAAX,gFACA,cAACC,GAAA,EAAD,CACIvF,OAAO,UACPnJ,KAAK,OACLoF,KAAK,QACLxD,GAAG,eACH+M,SAAUjB,OAGlB,eAACa,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,cAAX,sCACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,OACLxD,GAAG,cACH+M,SAAUjB,EACVkG,aAAa,YAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,cAAX,4CACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,OACLxD,GAAG,cACH+M,SAAUjB,EACVkG,aAAa,YAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,eAAX,sCACA,cAACC,GAAA,EAAD,CACI1O,KAAK,SACLoF,KAAK,QACLxD,GAAG,eACH+M,SAAUjB,EACVkG,aAAa,aAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,cAAX,4CACA,cAACC,GAAA,EAAD,CACI1O,KAAK,OACLoF,KAAK,UACLxD,GAAG,cACH+M,SAAUjB,EACVkG,aAAa,eAGrB,eAACrF,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAOC,IAAI,oBAAX,oEACA,eAACC,GAAA,EAAD,CACI1O,KAAK,SACLoF,KAAK,aACLxD,GAAG,oBACHqU,UAAQ,EAJZ,UAMKnK,EACAiK,EACAhK,WAIb,eAAC6C,GAAA,EAAD,WACI,wBAAQC,UAAQ,EAACZ,QAAS,YAzJrB,SAACiI,GAClB5C,GAAS,GACTD,GAAW,GAEX,IAAM8C,EAAO7S,SAASC,cAAc2S,GAC9BnH,EAAW,IAAIC,SAASmH,GAE1BlH,EAAU,EAERmF,EADUgD,GAAgBA,EAAc/R,MAChB+R,EAAc/R,MAAMwG,OAAS,EAE3D,IAAK,IAAIqD,KAAOgI,EAEPA,EAAehI,IAChBH,EAASe,OAAOZ,GAInBkI,GAAkBhD,GACnBrF,EAASe,OAAO,SAnBS,qBAuBVf,EAASK,QAvBC,IAuB7B,2BAAoC,0BAChCH,IAxByB,8BA2Bb,IAAZA,GACAoE,GAAW,GAEXtG,KAEApE,EAAc0G,IAAd,sBAAiC0E,GAAWhF,GACvC9D,MAAK,WACF+H,IACAK,GAAW,GAEXtG,OAEH1B,OAAM,SAAAC,GACH+H,GAAW,GACXC,GAAS,GAET5J,QAAQC,IAAI2B,MA+GRkL,CAAa,yBADjB,8DAGC/C,EACAC,aCtEfhI,GAAc,WAChB,OACI,qBAAKxJ,UAAU,eAAf,SACI,cAAC,GAAD,OAKNyJ,GAAY,WACd,OACI,qBAAKzJ,UAAU,aAAf,oBAcOuE,gBARS,SAACC,GACrB,MAAO,CACHhB,YAAagB,EAAMhB,YACnBiB,qBAAsBD,EAAMC,qBAC5BC,mBAAoBF,EAAME,sBAIMC,EAAzBJ,EA/JU,SAAC,GAAuH,IAAtHf,EAAqH,EAArHA,YAAatF,EAAwG,EAAxGA,kBAA0DuG,GAA8C,EAArFrG,oBAAqF,EAAhEC,iBAAgE,EAA9CoG,sBAAsBC,EAAwB,EAAxBA,mBAAwB,EAC5Ge,oBAAS,GADmG,mBACrI4M,EADqI,KAC3HC,EAD2H,OAE1G7M,oBAAS,GAFiG,mBAErI8M,EAFqI,KAE1HC,EAF0H,OAGtG/M,oBAAS,GAH6F,mBAGrIgN,EAHqI,KAGxHC,EAHwH,OAK9GjN,qBAL8G,mBAKrIoM,EALqI,KAK5Hc,EAL4H,OAM1GlN,qBAN0G,mBAMrIqM,EANqI,KAM1Hc,EAN0H,OAQ5GnN,oBAAS,GARmG,mBAQrIoN,EARqI,KAQ3HC,EAR2H,KAUtIhC,EAAY,kBAAMgC,GAAY,IAE9BC,EAAiB,kBAAMT,GAAaD,IACpCW,EAAkB,kBAAMR,GAAcD,IACtCU,EAAoB,kBAAMP,GAAgBD,IAEhDvR,qBAAU,YACqB,IAAvBsC,EAAYmG,QAAgBkJ,IAa5B3U,EAAkB8E,EAAGQ,eAI1B,CAACqP,IAEJ,IAYMwC,EAAyC,IAAvB7R,EAAYmG,OAAenG,EAAY5B,KAAI,SAACrC,GAChE,IAAMqV,EAAiB,GAEvBrV,EAAKgE,WAAWjE,SAAQ,SAAAuV,GACpB7R,EAAGC,YAAY3D,SAAQ,SAAAwV,GACfD,IAAOC,EAAWpV,IAClBkV,EAAeG,KAAKD,EAAW5R,YAK3C,IAAMO,EAAO,IAAIqB,KAAKvF,EAAKkE,MACrBsB,EAAW,CACbC,IAAKvB,EAAKwB,UACVd,MAAOD,EAAaT,EAAK2B,YACzBC,KAAM5B,EAAK6B,eAGf,OACI,sBAAmBtF,UAAU,mBAA7B,UACI,qBAAKA,UAAU,0CAAf,SAA0DT,EAAKG,KAC/D,qBAAKM,UAAU,2DAAf,SAA2ET,EAAK2D,OAChF,qBAAKlD,UAAU,uEAAf,SAAuF4U,EAAezS,KAAK,QAC3G,sBAAKnC,UAAU,2DAAf,UAA2E+E,EAASC,IAApF,IAA0FD,EAASZ,MAAnG,IAA2GY,EAASM,KAAK,uBAAM9F,EAAKoE,QACpI,sBAAK3D,UAAU,6DAAf,UAA6ET,EAAKqE,MAAlF,0BACA,sBAAK5D,UAAU,2BAAf,UACI,qBACI+L,QAAS,kBAvCN,SAACxM,GACpBoT,EAAWpT,EAAKG,IAChBkT,EAAarT,EAAK2D,MAClB8P,IAoC+BG,CAAe5T,IAC9BS,UAAU,wBAFd,SAII,qBAAKE,KAAI,UAAKqF,EAAL,aAEb,qBACIwG,QAAS,kBAvCJ,SAACxM,GACtBoT,EAAWpT,EAAKG,IAChBkT,EAAarT,EAAK2D,MAClB+P,IAoC+BG,CAAiB7T,IAChCS,UAAU,0BAFd,SAII,qBAAKE,KAAI,UAAKqF,EAAL,oBAjBXhG,EAAKG,OAsBlB,KAECkK,EAAiBnF,EAAuB,cAAC,GAAD,IAAiB,KAEzDoF,EAAenF,EAAqB,cAAC,GAAD,IAAe,KAEzD,OACI,qCACI,sBAAK1E,UAAU,aAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,uBAAf,gBACA,qBAAKA,UAAU,6DAAf,8DACA,qBAAKA,UAAU,yEAAf,oEACA,qBAAKA,UAAU,6DAAf,sCACA,qBAAKA,UAAU,+DAAf,uEAEH4J,EACAyL,EACAxL,KAEL,wBAAQ7J,UAAU,iBAAiB+L,QAASgH,EAA5C,+GACA,cAAC,GAAD,CACIjI,OAAQuH,EACRxH,OAAQkI,EACRjC,UAAWA,IAEf,cAAC,GAAD,CACIhG,OAAQyH,EACR1H,OAAQmI,EACRlC,UAAWA,EACXe,QAASA,EACTC,UAAWA,IAEf,cAAC,GAAD,CACIhH,OAAQ2H,EACR5H,OAAQoI,EACRnC,UAAWA,EACXe,QAASA,EACTC,UAAWA,EACXhK,IAAG,uBC5EJwN,GAlDM,WAAO,IAAD,EACW7P,mBAAS,KADpB,mBAChBiJ,EADgB,KACLC,EADK,KAGjB9D,EAAS,SAAA+D,GACRF,IAAcE,GAAKD,EAAaC,IAGvC,OACI,sBAAK5O,UAAU,gBAAf,UACI,eAAC6O,GAAA,EAAD,CAAK7O,UAAU,cAAc8O,MAAI,EAAjC,UACI,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACIhP,UAAWiP,KAAW,CAAEC,OAAsB,MAAdR,IAChC3C,QAAS,WAAQlB,EAAO,MAF5B,sEAOJ,cAACkE,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACIhP,UAAWiP,KAAW,CAAEC,OAAsB,MAAdR,IAChC3C,QAAS,WAAQlB,EAAO,MAF5B,gEAOJ,cAACkE,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACIhP,UAAWiP,KAAW,CAAEC,OAAsB,MAAdR,IAChC3C,QAAS,WAAQlB,EAAO,MAF5B,6DAQR,eAACsE,GAAA,EAAD,CAAYT,UAAWA,EAAvB,UACI,cAACU,GAAA,EAAD,CAASC,MAAM,IAAf,SACI,cAAC,GAAD,MAEJ,cAACD,GAAA,EAAD,CAASC,MAAM,IAAf,SACI,cAAC,GAAD,MAEJ,cAACD,GAAA,EAAD,CAASC,MAAM,IAAf,SACI,cAAC,GAAD,aCLLkG,GAvCD,WAAO,IAAD,EACkB9P,mBAAS,KAD3B,mBACTiJ,EADS,KACEC,EADF,KAGV9D,EAAS,SAAA+D,GACRF,IAAcE,GAAKD,EAAaC,IAGvC,OACI,sBAAK5O,UAAU,yBAAf,UACI,eAAC6O,GAAA,EAAD,CAAK7O,UAAU,aAAa8O,MAAI,EAAhC,UACI,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACIhP,UAAWiP,KAAW,CAAEC,OAAsB,MAAdR,IAChC3C,QAAS,WAAQlB,EAAO,MAF5B,mIAOJ,cAACkE,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACIhP,UAAWiP,KAAW,CAAEC,OAAsB,MAAdR,IAChC3C,QAAS,WAAQlB,EAAO,MAF5B,qHAQR,eAACsE,GAAA,EAAD,CAAYnP,UAAU,qBAAqB0O,UAAWA,EAAtD,UACI,cAACU,GAAA,EAAD,CAASC,MAAM,IAAf,SACI,cAAC,GAAD,MAEJ,cAACD,GAAA,EAAD,CAASC,MAAM,IAAf,SACI,cAAC,GAAD,aCtBL9K,gBANS,SAACC,GACrB,MAAO,CACH5F,WAAY4F,EAAM5F,cAIc+F,EAAzBJ,EAnBG,SAAC,GAAyB,IAAxB7F,EAAuB,EAAvBA,kBAMhB,OALAwC,qBAAU,WACNxC,GAAkB,KAEnB,IAGC,qBAAKsB,UAAU,aAAf,SACI,cAAC,GAAD,SCFGwV,GAVI,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,QAE7B,OACI,qBAAK1V,UAAU,cAAf,SACKyV,EAAWC,MCyLTC,GAjLD,SAAC,GAA+B,IAA9B9K,EAA6B,EAA7BA,OAAQ9L,EAAqB,EAArBA,gBAAqB,EACX0G,oBAAS,GADE,mBAClCc,EADkC,KACzB4K,EADyB,OAEf1L,oBAAS,GAFM,mBAElC4B,EAFkC,KAE3B+J,EAF2B,KAInCpG,EAAkBC,OAAOC,OAAO,CAClCjH,MAAO,GACP2R,SAAU,KAGRC,EAAUC,cATyB,EAWNrQ,mBAASuF,GAXH,mBAWlC6B,EAXkC,KAWxBkJ,EAXwB,OAaLtQ,mBAASuF,GAbJ,mBAalCyK,EAbkC,KAatBO,EAbsB,OAeLvQ,oBAAS,GAfJ,mBAelCwQ,EAfkC,KAetBC,EAfsB,OAgBPzQ,oBAAS,GAhBF,mBAgBlC0Q,EAhBkC,KAgBvBC,EAhBuB,OAiBP3Q,oBAAS,GAjBF,mBAiBlC4L,EAjBkC,KAiBvBC,EAjBuB,KAmBnC+E,EAAgB,SAACC,GAAwB,IAAjBC,EAAgB,wDACtC3C,EAAY0C,EAAMpT,KAClB0I,EAAQ0K,EAAM1K,MAEd4K,EAAgBP,EAChBQ,EAAmBN,EAEvB,OAAQvC,GACJ,IAAK,QACD4C,EAAgB5K,EAAM8K,MAAM,wCAC5BR,EAAcM,GAEVD,IACAP,EAAc,6BACPP,GADM,IAETxR,MAAOuS,EAAgB,GAAK,6GAG5BA,EACAF,EAAM7U,UAAUkM,OAAO,aAEvB2I,EAAM7U,UAAUjC,IAAI,cAI5B,MACJ,IAAK,WACDiX,EAAmB7K,EAAMjC,QAAU,EACnCyM,EAAaK,GAETF,IACAP,EAAc,6BACPP,GADM,IAETG,SAAWa,EAAmB,GAAK,sIAGnCN,EACAG,EAAM7U,UAAUkM,OAAO,aAEvB2I,EAAM7U,UAAUjC,IAAI,cASpC8R,EAAakF,GAAiBC,IAG5BE,EAAc,SAAClL,GACjB,IAAMC,EAASD,EAAEC,OAEjB2K,EAAc3K,GAAQ,GAEtBqK,EAAe,6BACRlJ,GADO,mBAETnB,EAAOxI,KAAOwI,EAAOE,MAAMC,WAI9B+K,EAAa,SAACnL,GAChB,IAAMC,EAASD,EAAEC,OAEjB2K,EAAc3K,GAEdqK,EAAe,6BACRlJ,GADO,mBAETnB,EAAOxI,KAAOwI,EAAOE,MAAMC,WA0C9B0F,EAAchL,EAAU,sDAAgB,KACxCiL,EAAYnK,EAAQ,uCAAW,KAErC,OACI,eAAC8E,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,cAACG,GAAA,EAAD,CACI1O,KAAK,QACLoF,KAAK,QACLxD,GAAG,aACHmX,OAAQD,EACRE,QAASH,EACTjF,aAAa,QACbqF,YAAY,mCAEhB,cAAC,GAAD,CAAYrB,QAAS,QAASD,WAAYA,OAE9C,eAACpJ,GAAA,EAAD,WACI,cAACG,GAAA,EAAD,CACI1O,KAAK,WACLoF,KAAK,WACLxD,GAAG,gBACHgS,aAAa,mBACbmF,OAAQD,EACRE,QAASH,EACTI,YAAY,yCAEhB,cAAC,GAAD,CAAYrB,QAAS,WAAYD,WAAYA,UAIrD,eAAC/I,GAAA,EAAD,WACI,wBACQ5O,KAAK,SACLiO,QAzEC,SAACN,GAClBA,EAAEmB,iBAEFwE,GAAS,GACTD,GAAW,GAEPE,GACA5K,EACKoC,KAAK,SAAU,CACZ5E,MAAO4I,EAAS5I,MAChB2R,SAAU/I,EAAS+I,WAEtB7M,MAAK,SAACiO,GACHjQ,aAAakC,QAAQ,eAAgB+N,EAAIhP,KAAKgB,QAC9CjC,aAAakC,QAAQ,gBAAiB+N,EAAIhP,KAAKc,SAE/CrC,EAAcyC,SAASrC,QAAvB,cACI,UAAYE,aAAaC,QAAQ,gBACrC6O,EAAQd,KAAK,KAEb5D,GAAW,GACXpS,GAAgB,GAChB8L,OAEH1B,OAAM,SAACC,GACJ5B,QAAQC,IAAI2B,GAEZ+H,GAAW,GACXC,GAAS,GAETO,YAAW,WACPP,GAAS,KACV,SA0CCzE,UAAW0E,EAHnB,4CAOA,sBAAMrR,UAAU,aAAaiX,MAAO,CAACC,QAAQ,GAAD,OAAK1F,EAAY,GAAK,SAAlE,SAA8EA,IAC9E,sBAAMxR,UAAU,eAAeiX,MAAO,CAACC,QAAQ,GAAD,OAAK3F,EAAc,GAAK,SAAtE,SAAkFA,WCiDnF4F,GA3NE,SAAC,GAA+B,IAA9BtM,EAA6B,EAA7BA,OAAQ9L,EAAqB,EAArBA,gBAAqB,EACd0G,oBAAS,GADK,mBACrCc,EADqC,KAC5B4K,EAD4B,OAElB1L,oBAAS,GAFS,mBAErC4B,EAFqC,KAE9B+J,EAF8B,OAIN3L,mBAAS,MAJH,mBAIrC2R,EAJqC,KAIxBC,EAJwB,KAMtCxB,EAAUC,cAEV9K,EAAkBC,OAAOC,OAAO,CAClCjH,MAAO,GACP2R,SAAU,GACV0B,cAAe,KAXyB,EAcR7R,mBAASuF,GAdD,mBAcrCyK,EAdqC,KAczBO,EAdyB,OAgBRvQ,oBAAS,GAhBD,mBAgBrCwQ,EAhBqC,KAgBzBC,EAhByB,OAiBVzQ,oBAAS,GAjBC,mBAiBrC0Q,EAjBqC,KAiB1BC,EAjB0B,OAkBV3Q,oBAAS,GAlBC,mBAkBrC4L,EAlBqC,KAkB1BC,EAlB0B,OAoBT7L,mBAASuF,GApBA,mBAoBrC6B,EApBqC,KAoB3BkJ,EApB2B,KAsBtCM,EAAgB,SAACC,GAAwB,IAAjBC,EAAgB,wDACtC3C,EAAY0C,EAAMpT,KAClB0I,EAAQ0K,EAAM1K,MAEd4K,EAAgBP,EAChBQ,EAAmBN,EAEvB,OAAQvC,GACJ,IAAK,QACD4C,EAAgB5K,EAAM8K,MAAM,wCAC5BR,EAAcM,GAEVD,IACAP,EAAc,6BACPP,GADM,IAETxR,MAAOuS,EAAgB,GAAK,6GAG5BA,EACAF,EAAM7U,UAAUkM,OAAO,aAEvB2I,EAAM7U,UAAUjC,IAAI,cAI5B,MACJ,IAAK,WACDiX,EAAmB7K,EAAMjC,QAAU,EACnCyM,EAAaK,GAETF,IACAP,EAAc,6BACPP,GADM,IAETG,SAAWa,EAAmB,GAAK,sIAGnCN,EACAG,EAAM7U,UAAUkM,OAAO,aAEvB2I,EAAM7U,UAAUjC,IAAI,cASpC8R,EAAamF,GAAoBD,IAG/BG,EAAc,SAAClL,GACjB,IAAMC,EAASD,EAAEC,OAEjB2K,EAAc3K,GAAQ,GAEH,iBAAfA,EAAOxI,MAA2BwI,EAAOE,QAAUiB,EAAS+I,UAC5DyB,GAAe,GACf3L,EAAOjK,UAAUkM,OAAO,cAEF,iBAAfjC,EAAOxI,OACdmU,GAAe,GACf3L,EAAOjK,UAAUjC,IAAI,cAGzBuW,EAAe,6BACRlJ,GADO,mBAETnB,EAAOxI,KAAOwI,EAAOE,MAAMC,WAI9B+K,EAAa,SAACnL,GAChB,IAAMC,EAASD,EAAEC,OAEjB2K,EAAc3K,GAEK,iBAAfA,EAAOxI,MAA2BwI,EAAOE,QAAUiB,EAAS+I,SAC5DyB,GAAe,GAGO,iBAAf3L,EAAOxI,MACdmU,GAAe,GAInBtB,EAAe,6BACRlJ,GADO,mBAETnB,EAAOxI,KAAOwI,EAAOE,MAAMC,WAkD9B0L,EAA4B,OAAhBH,GAA8BA,EAAP,KAA4B,qBAAKpX,UAAU,cAAf,sHAE/DuR,EAAchL,EAAU,sDAAgB,KACxCiL,EAAYnK,EAAQ,uCAAW,KAErC,OACI,eAAC8E,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,cAACG,GAAA,EAAD,CACI1O,KAAK,QACLoF,KAAK,QACLxD,GAAG,cACHgS,aAAa,QACbmF,OAAQD,EACRE,QAASH,EACTI,YAAY,mCAEhB,cAAC,GAAD,CAAYrB,QAAS,QAASD,WAAYA,OAE9C,eAACpJ,GAAA,EAAD,WACI,cAACG,GAAA,EAAD,CACI1O,KAAK,WACLoF,KAAK,WACLxD,GAAG,cACHgS,aAAa,mBACbmF,OAAQD,EACRE,QAASH,EACTI,YAAY,yCAEhB,cAAC,GAAD,CAAYrB,QAAS,WAAYD,WAAYA,OAEjD,eAACpJ,GAAA,EAAD,WACI,cAACG,GAAA,EAAD,CACI1O,KAAK,WACLoF,KAAK,gBACLxD,GAAG,gBACHgS,aAAa,mBACbmF,OAAQD,EACRE,QAASH,EACTI,YAAY,4GAEfQ,QAGT,eAAC7K,GAAA,EAAD,WACI,wBACI5O,KAAK,SACLiO,QA9FK,SAACN,GAClBA,EAAEmB,iBAEFwE,GAAS,GACTD,GAAW,GAEX,IAAMqG,EAAY,IAAI1K,SAElBsK,GAAe/F,IACfmG,EAAUrD,IAAI,QAAStH,EAAS5I,OAChCuT,EAAUrD,IAAI,WAAYtH,EAAS+I,UACnC4B,EAAUrD,IAAI,UAAW,GAEzB1N,EAAcoC,KAAK,iBAAkB2O,GAChCzO,MAAK,WACFtC,EAAcoC,KAAK,SAAU2O,GACxBzO,MAAK,SAAAiO,GACFjQ,aAAakC,QAAQ,eAAgB+N,EAAIhP,KAAKgB,QAC9CjC,aAAakC,QAAQ,gBAAiB+N,EAAIhP,KAAKc,SAE/CrC,EAAcyC,SAASrC,QAAvB,cACI,UAAYE,aAAaC,QAAQ,gBACrC6O,EAAQd,KAAK,KAEb5D,GAAW,GACXpS,GAAgB,GAChB8L,OAEH1B,OAAM,SAAAC,GACH5B,QAAQC,IAAI2B,GACZ+H,GAAW,GACXC,GAAS,SAGpBjI,OAAM,SAAAC,GACH5B,QAAQC,IAAI2B,GACZ+H,GAAW,GACXC,GAAS,GAETO,YAAW,WACPP,GAAS,KACV,UAsDHzE,UAAW0E,IAAc+F,EAH7B,0HAOA,sBAAMpX,UAAU,aAAaiX,MAAO,CAACC,QAAQ,GAAD,OAAK1F,EAAY,GAAK,SAAlE,SAA8EA,IAC9E,sBAAMxR,UAAU,eAAeiX,MAAO,CAACC,QAAQ,GAAD,OAAK3F,EAAc,GAAK,SAAtE,SAAkFA,WC3JnFhN,gBANS,SAACC,GACrB,MAAO,CACHvF,eAAgBuF,EAAMvF,kBAIU0F,EAAzBJ,EAvDI,SAAC,GAAuC,IAAtCuG,EAAqC,EAArCA,OAAQD,EAA6B,EAA7BA,OAAQ9L,EAAqB,EAArBA,gBAAqB,EACpB0G,mBAAS,KADW,mBAC/CiJ,EAD+C,KACpCC,EADoC,KAGhD8I,EAAY,SAAA7I,GACXF,IAAcE,GAAKD,EAAaC,IAGjC9C,EAAW,qBAAK9L,UAAU,QAAQ+L,QAASlB,EAAhC,SAAwC,qBAAK3K,KAAI,UAAKqF,EAAL,cAElE,OACI,eAACyG,GAAA,EAAD,CAAOlB,OAAQA,EAAQD,OAAQA,EAAQ7K,UAAU,eAAjD,UACI,cAACiM,GAAA,EAAD,CAAapB,OAAQA,EAAQqB,MAAOJ,EAApC,SACI,eAAC+C,GAAA,EAAD,CAAKC,MAAI,EAAT,UACI,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACIhP,UAAWiP,KAAW,CAAEC,OAAsB,MAAdR,IAChC3C,QAAS,WAAQ0L,EAAU,MAF/B,wCAOJ,cAAC1I,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACIhP,UAAWiP,KAAW,CAAEC,OAAsB,MAAdR,IAChC3C,QAAS,WAAQ0L,EAAU,MAF/B,uFASZ,eAACtI,GAAA,EAAD,CAAYT,UAAWA,EAAvB,UACI,cAACU,GAAA,EAAD,CAASC,MAAM,IAAf,SACI,cAAC,GAAD,CACIxE,OAAQA,EACR9L,gBAAiBA,MAGzB,cAACqQ,GAAA,EAAD,CAASC,MAAM,IAAf,SACI,cAAC,GAAD,CACIxE,OAAQA,EACR9L,gBAAiBA,eC8B1BwF,gBANS,SAACC,GACrB,MAAO,CACHvF,eAAgBuF,EAAMvF,kBAIU0F,EAAzBJ,EAhFK,SAAC,GAA+C,IAA9CmT,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,WAAY5Y,EAAqB,EAArBA,gBACpC8W,EAAUC,cAD+C,EAGjCrQ,oBAAS,GAHwB,mBAGxDc,EAHwD,KAG/C4K,EAH+C,KAKzDrF,EAAW,qBAAK9L,UAAU,QAAQ+L,QAAS4L,EAAhC,SAA4C,qBAAKzX,KAAI,UAAKqF,EAAL,cA4ChEgM,EAAchL,EAAU,sDAAgB,KAE9C,OACI,eAACyF,GAAA,EAAD,CACIlB,OAAQ4M,EACR7M,OAAQ8M,EACR3X,UAAU,eAHd,UAMI,cAACiM,GAAA,EAAD,CAAapB,OAAQ8M,EAAYzL,MAAOJ,EAAxC,4CAGA,cAACM,GAAA,EAAD,uEAGA,eAACM,GAAA,EAAD,WACI,wBAAQX,QA1DC,WACjB,IAAM5D,EAAepB,aAAaC,QAAQ,iBAE1CmK,GAAW,GAEPhJ,EACA1B,EAAcoC,KAAd,qCAAiDV,GAAgB,CAC7DyP,cAAezP,IAEdY,MAAK,WACFhC,aAAasC,WAAW,gBACxBtC,aAAasC,WAAW,iBAExB5C,EAAcyC,SAASrC,QAAvB,cAAkD,KAClD9H,GAAgB,GAChBoS,GAAW,GAEXwG,IAEA9B,EAAQd,KAAK,KACb/O,OAAO+B,SAASuB,YAEnBH,OAAM,SAAAC,GACHrC,aAAasC,WAAW,gBACxBtC,aAAasC,WAAW,iBAExB5C,EAAcyC,SAASrC,QAAvB,cAAkD,KAClD9H,GAAgB,GAChBoS,GAAW,GAEXwG,IAEA9B,EAAQd,KAAK,KACb/O,OAAO+B,SAASuB,SAEhB9B,QAAQC,IAAI,oBAAqB2B,MAGzC5B,QAAQC,IAAI,YAoBR,2DAGA,sBAAMzH,UAAU,eAAeiX,MAAO,CAACC,QAAQ,GAAD,OAAK3F,EAAc,GAAK,SAAtE,SAAkFA,aC7EnF,OAA0B,2CCA1B,OAA0B,2CCkJnCsG,I,OAAW,SAAC,GAAqC,IAApChN,EAAmC,EAAnCA,OAAQiN,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,WAClC,OACI,yBAAShM,QAASlB,EAAS7K,UAAS,0BAAqB8X,GAAzD,2CAEI,qBAAKpX,IAAKqX,EAAY7V,IAAI,oBAKhC8V,GAAY,SAAC,GAA6B,IAA5BL,EAA2B,EAA3BA,WACVM,EADqC,EAAfH,UACF,SAAW,SAErC,OACI,qBAAM/L,QAAS4L,EAAa3X,UAAS,cAArC,SACI,qBAAKE,KAAI,UAAKqF,EAAL,YAAc0S,EAAd,aAKfC,GAAW,SAAC,GAA6B,IAA5BJ,EAA2B,EAA3BA,UAAWK,EAAgB,EAAhBA,WAC1B,OACI,wBAAQnY,UAAS,0BAAqB8X,GAAtC,SACI,cAAC,IAAD,CAAM/L,QAASoM,EAAYnY,UAAW8X,EAAW7X,GAAG,SAApD,6EAKNmY,GAAS,SAAC,GAA6B,IAA5BN,EAA2B,EAA3BA,UAAWK,EAAgB,EAAhBA,WACxB,OACI,wBAAQnY,UAAS,0BAAqB8X,GAAtC,SACI,cAAC,IAAD,CAAM/L,QAASoM,EAAYnY,UAAW8X,EAAW7X,GAAG,QAApD,gGAKZ,SAASoY,KAEL,IAAMC,EAAQlX,SAASmX,cAAc,OACrCD,EAAMrB,MAAMuB,WAAa,SACzBF,EAAMrB,MAAMwB,SAAW,SACvBH,EAAMrB,MAAMyB,gBAAkB,YAC9BtX,SAASuX,KAAKC,YAAYN,GAE1B,IAAMO,EAAQzX,SAASmX,cAAc,OACrCD,EAAMM,YAAYC,GAElB,IAAMC,EAAkBR,EAAMS,YAAcF,EAAME,YAIlD,OAFAT,EAAMU,WAAWC,YAAYX,GAEtBQ,EAIX,IAOevU,gBAPS,SAACC,GACrB,MAAO,CACH5F,WAAY4F,EAAM5F,WAClBK,eAAgBuF,EAAMvF,kBAIU0F,EAAzBJ,EAjMA,SAAC,GAAkC,IAAjC3F,EAAgC,EAAhCA,WAAYK,EAAoB,EAApBA,eAAoB,EAEjBwG,oBAAS,GAFQ,mBAEtCqF,EAFsC,KAE9B2D,EAF8B,OAGThJ,oBAAS,GAHA,mBAGtCiS,EAHsC,KAG1BwB,EAH0B,OAILzT,oBAAS,GAJJ,mBAItC0T,EAJsC,KAIxBC,EAJwB,OAKb3T,oBAAS,GALI,mBAKtC4T,EALsC,KAK5BC,EAL4B,KAOvCxB,EAAYlZ,EAAa,aAAe,GACxC2a,EAAkB3a,EAAa,YAAc,GAE7CmZ,EAAanZ,GAA+Bya,EAAlBG,GAA+CC,GAEzE5O,EAAS,kBAAM4D,GAAW3D,IAC1B6M,EAAa,kBAAMuB,GAAexB,IAexCxW,qBAAU,YAXY,WAClB,IAAMmF,EAAcjF,SAASkF,gBAAgBD,YACvCqT,EAAiBrB,KAGnBiB,EADAjT,EAAcqT,EAAiB,KAQnCC,KACD,IAEH,IAAMC,EAAa,WACf,IAAMC,EAAOzY,SAASC,cAAc,oBAC9BsX,EAAOvX,SAASuX,KAEtBA,EAAKlX,UAAUoJ,OAAO,aArBCuO,GAAiBD,GAuBxCU,EAAKpY,UAAUoJ,OAAO,UAElB8N,EAAKlX,UAAUoO,SAAS,aACxB8I,EAAK1B,MAAM6C,aAAezB,KAAsB,KAEhDM,EAAK1B,MAAM6C,aAAe,IAa5B3B,EAAa,WACf,IAAM9R,EAAcjF,SAASkF,gBAAgBD,YACvCqT,EAAiBrB,KAGnBhS,GAFejF,SAASuX,KAAKlX,UAAUoO,SAAS,aAEpB,EAAI6J,GAAkB,KAClDE,KAMFG,EAAqB9a,EAEvB,cAAC,GAAD,CAAW0Y,WAAYA,EAAYG,UAAWA,IAD9C,cAAC,GAAD,CAAUjN,OAAQA,EAAQiN,UAAWA,EAAWC,WAAYA,IAG1DiC,EACU,qCACI,cAAC,GAAD,CAAU7B,WAAYA,EAAYL,UAAWA,IAC7C,cAAC,GAAD,CAAQK,WAAYA,EAAYL,UAAWA,OAGzDmC,EAAed,EAAe,SAAW,GAE/C,OACI,yBAAQpN,QAAS,SAACN,GAAD,OAlCK,SAACA,GACvB,IAAMC,EAASD,EAAEC,OAAOgC,QAAQ,oBAC1BwM,EAAezO,EAAEC,OAAOgC,QAAQ,WAEjChC,IAAUyN,GAAiBe,GAC5BN,IA6BoBO,CAAkB1O,IAAIzL,UAAS,iBAAYuZ,GAAnE,UACI,sBAAKvZ,UAAU,iCAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,cAAC,IAAD,CAAMA,UAAW8X,EAAW7X,GAAG,mBAA/B,wBAEJ,sBAAKD,UAAU,kBAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,cAAC,IAAD,CAAM+L,QAASoM,EAAYlY,GAAG,mBAA9B,wBAEJ,qBAAKD,UAAU,kBAAf,SACI,qBAAIA,UAAU,YAAd,UACI,oBAAIA,UAAU,4BAAd,SACI,cAAC,IAAD,CAAM+L,QAASoM,EAAYnY,UAAW8X,EAAY7X,GAAG,mBAArD,SACI,kFAGR,oBAAID,UAAU,YAAd,SACI,cAAC,IAAD,CAAM+L,QAASoM,EAAYnY,UAAW8X,EAAY7X,GAAG,eAArD,SACI,wFAGR,oBAAID,UAAU,YAAd,SACI,cAAC,IAAD,CAAM+L,QAASoM,EAAYnY,UAAW8X,EAAY7X,GAAG,eAArD,SACI,8FAGR,oBAAID,UAAU,YAAd,SACI,cAAC,IAAD,CAAM+L,QAASoM,EAAYnY,UAAW8X,EAAY7X,GAAG,SAArD,SACI,kFAKhB,sBAAKD,UAAU,kCAAf,UACKga,EACAD,QAGT,sBAAK/Z,UAAS,iBAAY8X,EAAZ,YAAyBmC,GAAgBlO,QAAS6N,EAAhE,UACI,sBAAM5Z,UAAU,uBAChB,sBAAMA,UAAU,mDAChB,sBAAMA,UAAU,kDAChB,sBAAMA,UAAU,4BAGxB,cAAC,GAAD,CAAY8K,OAAQA,EAAQD,OAAQA,IACpC,cAAC,GAAD,CAAa6M,WAAYA,EAAYC,WAAYA,UCnH9CpT,gBANS,SAACC,GACrB,MAAO,KAK6BG,EAAzBJ,EArBM,SAAC,GAAyB,IAAxB7F,EAAuB,EAAvBA,kBAMnB,OALAwC,qBAAU,WACNxC,GAAkB,KAEnB,IAGC,qBAAKsB,UAAU,iBAAf,SACI,qBAAKA,UAAU,mB,UC0ErBoa,I,OAAa,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,WAAYrS,EAA0B,EAA1BA,KAAM/I,EAAoB,EAApBA,eAC7BwE,EAAO,IAAIqB,KAAKkD,EAAKvE,MAErBsB,EAAW,CACbC,IAAKvB,EAAKwB,UACVZ,QAASC,EAAoBb,EAAK0B,UAClChB,MAAOD,EAAaT,EAAK2B,aAG7B,OACI,qCACI,sBAAKpF,UAAU,aAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKU,IAAKsH,EAAK7E,MAAOjB,IAAK8F,EAAK9E,SAEpC,sBAAKlD,UAAU,4BAAf,UACI,oBAAIA,UAAU,0BAAd,SAAyCgI,EAAK9E,OAC9C,sBAAKlD,UAAU,mBAAf,UAAmC+E,EAASC,IAA5C,IAAkDD,EAASZ,MAA3D,KAAoEY,EAASV,QAA7E,MAAyF2D,EAAKrE,QAC9F,qBAAK3D,UAAU,sBAAf,SAAsCgI,EAAKtE,UAC3C,sBAAK1D,UAAU,0BAAf,UAA0CgI,EAAKpE,MAA/C,YACA,wBAAQ+I,UAAW1N,EAAgBe,UAAU,0BAA7C,iFACCqa,QAGT,sBAAKra,UAAU,UAAf,UACI,qBAAKA,UAAU,uBAAf,4HAGA,qBAAKA,UAAU,gBAAf,SACKgI,EAAK1E,sBAQpBgX,GAAgB,SAAC,GAA4E,IAA3Exa,EAA0E,EAA1EA,MAAOya,EAAmE,EAAnEA,UAAWC,EAAwD,EAAxDA,UAAW9a,EAA6C,EAA7CA,GAAI+a,EAAyC,EAAzCA,WAAY9a,EAA6B,EAA7BA,aAAc+a,EAAe,EAAfA,UAAe,EAEhEjV,oBAAS,GAFuD,mBAEvFc,EAFuF,KAE9E4K,EAF8E,OAGpE1L,oBAAS,GAH2D,mBAGvF4B,EAHuF,KAGhF+J,EAHgF,OAIhE3L,oBAAS,GAJuD,mBAIvFkV,EAJuF,KAI9EC,EAJ8E,KAMxFjO,IAAa7M,EAAQ,GA4BrByR,EAAchL,EAAU,4DAAiB,KACzCiL,EAAYnK,EAAQ,iGAAwB,KAE5CwT,EAAcF,EAAU,sGAAwB,KAEtD,OACI,sBAAK3a,UAAU,WAAf,UACI,wBACIA,UAAU,gBACV2M,SAAUA,EACVZ,QApCS,WAEZY,IACDiO,GAAW,GACXxJ,GAAS,GACTD,GAAW,GAEX1K,EAAc0G,IAAd,mBAA8BzN,EAA9B,YAAoCI,IAC/BiJ,MAAK,WACFoI,GAAW,GACXyJ,GAAW,GACXjb,EAAa+a,EAAW,GAExBD,IAEA9I,YAAW,kBAAMiJ,GAAW,KAAQ,QAEvCzR,OAAM,SAAAC,GACH+H,GAAW,GACXC,GAAS,GAET5J,QAAQC,IAAI,gBAAiB2B,QAYrC,gHAOA,sBAAKpJ,UAAU,oBAAf,UACI,cAAC8a,GAAA,EAAD,CAAQ/O,QAASwO,EAAW5N,SAAUA,EAAU3M,UAAU,iBAA1D,eACA,qBAAKA,UAAU,kBAAf,SAAkCF,IAClC,cAACgb,GAAA,EAAD,CAAQ/O,QAASyO,EAAWxa,UAAU,iBAAtC,kBAEHuR,EACAC,EACAqJ,MAKPE,GAAiB,WACnB,OACI,qBAAK/a,UAAU,kBAAf,8SAYOuE,gBANS,SAACC,GACrB,MAAO,CACHkW,UAAWlW,EAAMkW,aAIe/V,EAAzBJ,EA1LQ,SAAC,GAA6D,IAA5DyW,EAA2D,EAA3DA,aAAc/b,EAA6C,EAA7CA,eAAgBU,EAA6B,EAA7BA,aAAc+a,EAAe,EAAfA,UAAe,EACpCjV,mBAAS,MAD2B,mBACzEuP,EADyE,KACzDiG,EADyD,OAGtDxV,mBAAS,GAH6C,mBAGzE3F,EAHyE,KAGlEob,EAHkE,KAchFha,qBAAU,WACN8B,EAAGQ,YAAYlE,SAAQ,SAAAC,GACfA,EAAKG,MAAQsb,GACbC,EAAkB1b,QAU3B,IAEH,IAAM8a,EAAapb,EACf,cAAC,GAAD,CACIwb,WA1BW,kBAAMS,EAAS,IA2B1Bpb,MAAOA,EACPya,UA1BU,WACVza,EAAQ,GACRob,EAASpb,EAAQ,IAyBjB0a,UAtBU,kBAAMU,EAASpb,EAAQ,IAuBjCJ,GAAIsb,EACJN,UAAWA,EACX/a,aAAcA,IAElB,cAAC,GAAD,IAEEwb,EAAanG,EAAiB,cAAC,GAAD,CAAY/V,eAAgBA,EAAgBob,WAAYA,EAAYrS,KAAMgN,IAAoB,KAoBlI,OACI,qCACI,qBAAKhV,UAAU,uBAAf,SACI,qBAAKU,IAAKsU,EAAiBA,EAAe7R,MAAQ,KAAMjB,IAAK8S,EAAiBA,EAAe9R,KAAO,SAExG,qBAAKlD,UAAU,YAAf,SACKmb,UClDF5W,gBAPS,SAACC,GACrB,MAAO,CACH5F,WAAY4F,EAAM5F,WAClBK,eAAgBuF,EAAMvF,kBAIU0F,EAAzBJ,EAtBY,SAAC,GAAyC,IAAxC7F,EAAuC,EAAvCA,kBAAmBO,EAAoB,EAApBA,eAC5CiC,qBAAU,WACNxC,GAAkB,KAEnB,IAJ6D,IAMzDgB,EAAM0Q,cAAN1Q,GAEP,OACI,qBAAKM,UAAU,kBAAf,SACI,cAAC,GAAD,CAAgBf,eAAgBA,EAAgB+b,aAActb,SC4G3D6E,I,OAAAA,aANS,SAACC,GACrB,MAAO,CACHkW,UAAWlW,EAAMkW,aAIe/V,EAAzBJ,EApHF,SAAC,GAA+B,IAA9B5E,EAA6B,EAA7BA,aAAc+a,EAAe,EAAfA,UAAe,EACVjV,mBAAS,IADC,mBACjC2V,EADiC,KACxBC,EADwB,OAEf5V,mBAAS,IAFM,mBAEjC6V,EAFiC,KAE1BC,EAF0B,OAII9V,oBAAS,GAJb,mBAIjC+V,EAJiC,KAIjBC,EAJiB,OAKAhW,oBAAS,GALT,mBAKjCiW,EALiC,KAKnBC,EALmB,OAOVlW,oBAAS,GAPC,mBAOjCqD,EAPiC,KAOxB2E,EAPwB,KASlCS,EAAgB,kBAAMT,GAAY3E,IAExC5H,qBAAU,WACNuF,EAAcmV,IAAI,6BACb7S,MAAK,SAAAiO,GACEA,EAAIhP,KAAK2B,OAAS,GACdqN,EAAIhP,KAAK,GAAGvH,MAAMkJ,OAAS,GAC3B0R,EAAWrE,EAAIhP,KAAK,GAAGvH,OACvB8a,EAASvE,EAAIhP,KAAK,MAMtBqT,EAAW,IACXE,EAAS,QAGhBpS,OAAM,SAAAC,GAAG,OAAI5B,QAAQC,IAAI2B,QAC/B,CAACN,IAEJ,IAqCM+S,EAAqBL,EAAiB,4DAAiB,KACvDM,EAAmBJ,EAAe,uCAAW,KAE7CK,EAAgBX,EAAQzR,OAAS,EAAIyR,EAAQxZ,KAAI,SAAArC,GAAS,IAAD,EAChCA,EAAK4b,WAAzBjY,EADoD,EACpDA,KAAMO,EAD8C,EAC9CA,KAAME,EADwC,EACxCA,KAEnB,OACI,sBAAmB3D,UAAU,WAA7B,UACI,qBAAKA,UAAU,iBAAf,SAAiCkD,IACjC,qBAAKlD,UAAU,iBAAf,SAAiCyD,IACjC,qBAAKzD,UAAU,iBAAf,SAAiC2D,IACjC,qBAAK3D,UAAU,qBAAf,SAAqCT,EAAKyc,WAC1C,sBAAKhc,UAAU,kBAAf,UAAkCT,EAAK0c,MAAvC,YACA,cAACnB,GAAA,EAAD,CAAQ/O,QAAS,kBAlDPrM,EAkD0BH,EAAKG,QA/CjD+G,EAAcmH,OAAd,eAA6BlO,EAA7B,YACKqJ,MAAK,WACF0S,GAAkB,GAClB9b,EAAa+a,GAAY,GAEzBxM,OAEH/E,OAAM,SAAAC,GACH5B,QAAQC,IAAI2B,MAXH,IAAC1J,GAkDoCM,UAAU,mBAAmBiY,MAAM,SAAjF,iBANM1Y,EAAKG,OASlB,+DAEL,OACI,qBAAKM,UAAU,OAAf,SACI,cAACmK,GAAA,EAAD,CAAWnK,UAAU,kBAArB,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,kBAAf,SACK+b,IAEL,sBAAK/b,UAAU,oBAAf,UACI,sBAAKA,UAAU,mBAAf,yDAA4Csb,EAAMY,OAAlD,YACA,cAACpB,GAAA,EAAD,CACI/O,QAlDF,WAClB4P,GAAgB,GAChBF,GAAkB,GAElBhV,EAAc0G,IAAI,gBACbpE,MAAK,WACF0S,GAAkB,GAElB9b,EAAa,EAAG,GAEhB0b,EAAW,IACXE,EAAS,IACTrN,OAEH/E,OAAM,SAAAC,GACH5B,QAAQC,IAAI2B,GAEZqS,GAAkB,GAClBE,GAAgB,OAiCJhP,SAA6B,IAAnByO,EAAQzR,OAFtB,8DAMCkS,EACAC,gBCtFVvX,gBANS,WACpB,MAAO,KAK6BI,EAAzBJ,EAlBE,SAAC,GAAyB,IAAxB7F,EAAuB,EAAvBA,kBAOf,OALAwC,qBAAU,WACNxC,GAAkB,KAEnB,IAGC,cAAC,GAAD,OCIOyd,GAdC,SAAC,GAAiB,IAAhBzB,EAAe,EAAfA,UACR5a,EAAsB,IAAd4a,EAAkB,KAAOA,EAEjC5Q,EAAU/C,aAAaC,QAAQ,gBACjC,cAAC8T,GAAA,EAAD,UAAQ,eAAC,IAAD,CAAM7a,GAAG,QAAT,wDAA0BH,OAChC,KAEN,OACI,qBAAKE,UAAU,WAAf,SACK8J,KCqDEsS,I,cA5DK,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EACH5W,mBAAS,IADN,mBACtB6W,EADsB,KACfC,EADe,OAGC9W,oBAAS,GAHV,mBAGtBc,EAHsB,KAGb4K,EAHa,OAIH1L,oBAAS,GAJN,mBAItB4B,EAJsB,KAIf+J,EAJe,KAM7BlQ,qBAAU,WACNkQ,GAAS,GACTD,GAAW,GAEX1K,EAAcmV,IAAd,8BAAyCS,IACpCtT,MAAK,SAACiO,GACH7F,GAAW,GAEXoL,EAASvF,EAAIhP,SAEhBmB,OAAM,SAAAC,GACH5B,QAAQC,IAAI2B,GAEZ+H,GAAW,GACXC,GAAS,QAElB,IAEH,IAAMoL,EAA4B,IAAjBF,EAAM3S,OAAe2S,EAAM1a,KAAI,SAAArC,GAAS,IAAD,EACxBA,EAAKkd,QAA1BxY,EAD6C,EAC7CA,MAAOH,EADsC,EACtCA,WAEd,OACI,sBAAmB9D,UAAU,YAA7B,UACI,qBAAKA,UAAU,gBAAf,SAAgCT,EAAKG,KACrC,qBAAKM,UAAU,mBAAf,SAAmCiE,IACnC,qBAAKjE,UAAU,kBAAf,SAAkC8D,IAClC,qBAAK9D,UAAU,sBAAf,SAAsCT,EAAKyc,WAC3C,qBAAKhc,UAAU,oBAAf,SAAoCT,EAAK2c,WALnC3c,EAAKG,OAQlB,KAEC6R,EAAchL,EAAU,sDAAgB,KACxCiL,EAAYnK,EAAQ,uCAAW,KAC/BqV,EAAaF,GAAajW,GAAYc,EAA2B,KAAnB,wCAEpD,OACI,sBAAKrH,UAAU,eAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,mBAAf,gBACA,qBAAKA,UAAU,sBAAf,4CACA,qBAAKA,UAAU,qBAAf,gCACA,qBAAKA,UAAU,yBAAf,6CACA,qBAAKA,UAAU,uBAAf,uEAEHuR,EACAiL,EACAhL,EACAkL,OC1BEnY,gBAPS,SAACC,GACrB,MAAO,KAM6BG,EAAzBJ,EAxBS,SAAC,GAAyB,IAAxB7F,EAAuB,EAAvBA,kBACtBwC,qBAAU,WACNxC,GAAkB,KAEnB,IAJ0C,IAMtCgB,EAAM0Q,cAAN1Q,GAEP,OACI,qBAAKM,UAAU,oBAAf,SACI,cAACmK,GAAA,EAAD,UACI,cAAC,GAAD,CAAakS,MAAO3c,WCoErB6E,gBAPS,SAACC,GACrB,MAAO,CACHvF,eAAgBuF,EAAMvF,eACtByb,UAAWlW,EAAMkW,aAIe/V,EAAzBJ,EAnEH,SAAC,GAAgE,IAA/DtF,EAA8D,EAA9DA,eAAgBF,EAA8C,EAA9CA,gBAAiBY,EAA6B,EAA7BA,aAAc+a,EAAe,EAAfA,UAkCzD,OAjCAxZ,qBAAU,WACF6F,aAAaC,QAAQ,iBACrBjI,GAAgB,GAEhB0H,EAAcmV,IAAI,6BACb7S,MAAK,SAAAiO,GACEA,EAAIhP,KAAK,IAAMgP,EAAIhP,KAAK,GAAGvH,MAAMkJ,OAAS,EAC1ChK,EAAa+a,EAAW1D,EAAIhP,KAAK,GAAGvH,MAAMkJ,QAE1ChK,EAAa,EAAG,OAI5BZ,GAAgB,GAGpB,IAAM4d,EAASvb,SAASC,cAAc,QAChCub,EAAYC,iBAAiBF,GAAQG,SACrCC,EAAe3b,SAASkF,gBAAgBD,YAG9C,GAAI0W,EAAe,KAAM,CACrB,IAAMC,EAAeD,EAAa,KAClCJ,EAAO1F,MAAM6F,SAAb,UAA2BE,EAAaJ,EAAxC,MAEApV,QAAQC,IAAIuV,MAMjB,CAAC/d,IAGA,eAAC,IAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,CAASyb,UAAWA,IACpB,qBAAK1a,UAAU,UAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOid,OAAK,EAACC,KAAK,mBAAmBC,UAAWC,IAChD,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,eAAeC,UAAWE,KAC5C,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,eAAeC,UAAWG,KAC5C,cAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,SAASC,UAAWI,KACtC,cAAC,IAAD,CAAON,OAAK,EAACC,KAAK,QAAQC,UAAWK,KACrC,cAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,mBAAmBC,UAAWM,KAChD,cAAC,IAAD,CAAOR,OAAK,EAACC,KAAI,gBAAmBC,UAAWO,KAC/C,cAAC,IAAD,CAAOT,OAAK,EAACC,KAAK,mBAAmBC,UAAWQ,KAChD,cAAC,IAAD,CAAOV,OAAK,EAACC,KAAK,SAASC,UAAWS,KACtC,cAAC,IAAD,CAAOX,OAAK,EAACC,KAAK,QAAQC,UAAWU,KACrC,cAAC,IAAD,CAAOZ,OAAK,EAACC,KAAK,oBAAoBC,UAAWW,KACjD,cAAC,IAAD,CAAOX,UAAWY,UAG1B,cAAC,EAAD,U,SC5ENC,GAAe,CACjB/a,YAAa,GACbO,YAAa,GACbJ,SAAU,GACVgH,sBAAsB,EACtBC,oBAAoB,EACpBmF,mBAAmB,EACnBC,iBAAiB,EACjBhL,sBAAsB,EACtBC,oBAAoB,EACpB9F,YAAY,EACZgS,eAAgB,GAChB3R,eAAgB,KAChB0Q,QAAS,KACT+K,UAAW,MA+FAuD,GA5FC,WAAmC,IAAlCzZ,EAAiC,uDAAzBwZ,GAAcE,EAAW,uCAC9C,OAAQA,EAAOpgB,MACX,IAAK,sBACD,OAAO,6BACA0G,GADP,IAEI5F,WAAYsf,EAAOtf,aAE3B,IAAK,qBACD,OAAO,6BACA4F,GADP,IAEIvB,YAAaib,EAAOngB,QACpBqM,sBAAsB,EACtBC,oBAAoB,IAE5B,IAAK,uBACD,OAAO,6BACA7F,GADP,IAEI6F,oBAAoB,EACpBD,sBAAsB,IAE9B,IAAK,oBACD,OAAO,6BACA5F,GADP,IAEI4F,sBAAsB,EACtBnH,YAAa,KACboH,oBAAoB,IAE5B,IAAK,qBACD,OAAO,6BACA7F,GADP,IAEIhB,YAAa0a,EAAOngB,QACpB0G,sBAAsB,EACtBC,oBAAoB,IAE5B,IAAK,uBACD,OAAO,6BACAF,GADP,IAEIE,oBAAoB,EACpBD,sBAAsB,IAE9B,IAAK,oBACD,OAAO,6BACAD,GADP,IAEIhB,YAAa,KACbiB,sBAAsB,EACtBC,oBAAoB,IAE5B,IAAK,kBACD,OAAO,6BACAF,GADP,IAEIpB,SAAU8a,EAAOngB,QACjByR,mBAAmB,EACnBC,iBAAiB,IAEzB,IAAK,oBACD,OAAO,6BACAjL,GADP,IAEIiL,iBAAiB,EACjBD,mBAAmB,IAE3B,IAAK,iBACD,OAAO,6BACAhL,GADP,IAEIpB,SAAU,KACVoM,mBAAmB,EACnBC,iBAAiB,IAEzB,IAAK,sBACD,OAAO,6BACAjL,GADP,IAEIoM,eAAgBsN,EAAOngB,UAE/B,IAAK,sBACD,OAAO,6BACAyG,GADP,IAEIvF,eAAgBif,EAAOjf,iBAE/B,IAAK,eACD,OAAO,6BACAuF,GADP,IAEImL,QAASuO,EAAOngB,UAExB,IAAK,iBACD,OAAO,6BACAyG,GADP,IAEIkW,UAAWwD,EAAOpe,QAE1B,QACI,OAAO0E,ICpGJ2Z,GAFDC,aAAYH,ICO1BI,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACM,qBAAKne,UAAU,kBAAf,SACI,cAAC,GAAD,QAGVoB,SAASmd,eAAe,U","file":"static/js/main.be0b90cb.chunk.js","sourcesContent":["const collectionsLoaded = (newCollections) => {\n    return {\n        type: 'COLLECTIONS_LOADED',\n        payload: newCollections\n    }\n};\n\nconst collectionsRequsted = () => {\n    return {\n        type: 'COLLECTIONS_REQUSTED'\n    }\n};\n\nconst collectionsError = () => {\n    return {\n        type: 'COLLECTIONS_ERROR'\n    }\n};\n\nconst exhibitionsLoaded = (newExhibitions) => {\n    return {\n        type: 'EXHIBITIONS_LOADED',\n        payload: newExhibitions\n    }\n};\n\nconst exhibitionsRequsted = () => {\n    return {\n        type: 'EXHIBITIONS_REQUSTED'\n    }\n};\n\nconst exhibitionsError = () => {\n    return {\n        type: 'EXHIBITIONS_ERROR'\n    }\n};\n\nconst picturesLoaded = (newPictures) => {\n    return {\n        type: 'PICTURES_LOADED',\n        payload: newPictures\n    }\n};\n\nconst picturesRequsted = () => {\n    return {\n        type: 'PICTURES_REQUSTED'\n    }\n};\n\nconst picturesError = () => {\n    return {\n        type: 'PICTURES_ERROR'\n    }\n};\n\nconst toggleHeaderColor = (isDarkHeader) => {\n    return {\n        type: 'TOGGLE_HEADER_COLOR',\n        darkHeader: isDarkHeader\n    }\n};\n\nconst setCurrentPicture = (newPicture) => {\n    return {\n        type: 'SET_CURRENT_PICTURE',\n        payload: newPicture\n    }\n};\n\nconst setAutorization = (isAuto) => {\n    return {\n        type: 'SET_IS_AUTORIZATION',\n        isAutorization: isAuto\n    }\n};\n\nconst setLikesId = (newLikes) => {\n    const newLikesId = new Set();\n\n    if (newLikes) {\n        newLikes.forEach(item => {\n            newLikesId.add(item.picture.id);\n        });\n    }\n\n    return {\n        type: 'SET_LIKES_ID',\n        payload: newLikesId,\n    }\n};\n\nconst setCartCount = (oldCount, newCount) => {\n    const count = oldCount + newCount;\n    \n    return {\n        type: 'SET_CART_COUNT',\n        count: count\n    }\n};\n\nexport {\n    collectionsLoaded,\n    exhibitionsLoaded,\n    picturesLoaded,\n    toggleHeaderColor,\n    setCurrentPicture,\n    collectionsError,\n    picturesError,\n    exhibitionsError,\n    collectionsRequsted,\n    exhibitionsRequsted,\n    picturesRequsted,\n    setAutorization,\n    setLikesId,\n    setCartCount,\n};","import React from 'react';\nimport { Link} from 'react-router-dom';\n\nimport './footer.scss';\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <div className='container'>\n                <div className=\"footer__flex-wrapper\">\n                    <div className=\"footer__logo\">\n                        <div className=\"footer__logo-name title\">\n                            <Link to='/galartus_front/'>Galartus</Link>            \n                        </div>\n                        <div className=\"footer__logo-year\">2021</div>\n                    </div>\n                    <div className=\"footer__nav\">\n                        <ul className=\"footer__nav-list\">\n                            <li className=\"footer__nav-link\">\n                                <Link to='/exhibitions'>\n                                    <span>Выставки</span> \n                                </Link>\n                            </li>\n                            <li className=\"footer__nav-link\">\n                                <Link to='/collections'>\n                                    <span>Коллекции</span> \n                                </Link>\n                            </li>\n                            <li className=\"footer__nav-link\">\n                                <Link to='/about'>\n                                    <span>О музее</span>  \n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"footer__contacts\">\n                        <div className=\"footer__contacts-title title\">Контакты</div>\n                        <ul className=\"footer__contacts-list\">\n                            <li className=\"footer__contacts-item\">Казань, Карла Маркса, 57</li>\n                            <li className=\"footer__contacts-item\">\n                               <a href=\"tel:+78432234540\">+7 (843) 223-45-40</a> \n                            </li>\n                            <li className=\"footer__contacts-item\">\n                               <a href=\"mailto:info@gallartus.ru\">info@gallartus.ru</a> \n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );  \n};\n\nexport default Footer;\n\n\n/* <footer className='footer'>\n            <Navbar \n                className='footer__navbar navbar' \n                expand='lg' \n                dark \n                color='dark'\n            >\n                <Container>\n                    <NavbarBrand href='/' className='navbar__logo'>Галартус</NavbarBrand>\n                    <Nav className='ml-auto navbar__nav'>\n                        <NavItem className='navbar__item'>\n                            <Link to='/'>Главная страница</Link>\n                        </NavItem>\n                        <NavItem className='navbar__item'>\n                            <Link to='/exhibitions'>Выставки</Link>\n                        </NavItem>\n                        <NavItem className='navbar__item'>\n                            <Link to='/collections'>Коллекция</Link>\n                        </NavItem>\n                        <NavItem className='navbar__item'>\n                            <Link to='/about'>О музее</Link>\n                        </NavItem>              \n                    </Nav>\n                </Container>\n            </Navbar>\n            <Container>\n                <div className=\"footer__info\">                  \n                    <h4><a href=\"tel:+78005553535\">8-800-555-35-35</a></h4>\n                    <h4><a href=\"mailto:qweqr@muzia.su\">qweqr@muzia.su</a></h4>                             \n                </div>\n            </Container>\n            \n        </footer> */","export default __webpack_public_path__ + \"static/media/img.c70e6aa6.jpg\";","export default __webpack_public_path__ + \"static/media/2.6c2b2625.jpg\";","export default __webpack_public_path__ + \"static/media/3.c200cf7c.jpg\";","import React, { useEffect } from 'react';\nimport SwiperCore, { Autoplay, Keyboard, Navigation, Pagination} from 'swiper';\nimport {Swiper, SwiperSlide} from 'swiper/react';\n\nimport './slider.scss';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\n\nimport image1 from './imgs/img.jpg';\nimport image2 from './imgs/2.jpg';\nimport image3 from './imgs/3.jpg';\n\nSwiperCore.use([Navigation, Pagination, Keyboard, Autoplay]);\n\nconst items = [\n    {\n      src: image1,\n      altText: 'Slide 1',\n      title: `Легендарная коллекция Сандро Боттичелли`,\n      text: 'Метафора дает бессознательный биографический метод. Коллективное бессознательное изящно представляет собой постмодернизм.',\n      id: 1\n    },\n    {\n        src: image2,\n        altText: 'Slide 2',\n        title: 'Магическое искусство Сальвадора Дали',\n        text: 'Художественная ментальность готично просветляет ритм. Экспрессионизм монотонно аккумулирует ожидания.',\n        id: 2\n    },\n    {\n        src: image3,\n        altText: 'Slide 3',\n        title: `Мультимедийная выставка «‎Ожившие полотна Айвазовского»‎`,\n        text: 'Метафора дает бессознательный биографический метод. Коллективное бессознательное изящно представляет собой постмодернизм.',\n        id: 3\n    }\n];\n\nconst Slider = () => {\n    useEffect(() => {\n        const slider = document.querySelector('.slider');\n        const pagination = slider.querySelector('.swiper-pagination');\n        const paginationBullet = slider.querySelectorAll('.swiper-pagination-bullet');\n\n        pagination.classList.add('slider__pagination');\n        paginationBullet.forEach(bullet => bullet.classList.add('slider__pagination-bullet'));\n        \n    }, []);\n\n    const slides = items.map((item) => {\n        const titleWords = item.title.split(' ');\n        const firstWords = titleWords.slice(0, 2);\n        const lastWords = titleWords.slice(2);\n\n        return (\n            <SwiperSlide className='slider__item' key={item.id}>\n                <img src={item.src} alt={item.altText}/>\n                <div className='slider__flex-wrapper container'>\n                    <div className=\"slider__title\">\n                        {firstWords.join(' ')}\n                        <br/>\n                        {lastWords.join(' ')}\n                    </div>\n                    <div className=\"slider__text\">{item.text}</div>\n                </div>\n            </SwiperSlide>\n        );\n    });\n\n    return (\n        <Swiper \n            className='slider'\n            navigation={{\n                prevEl: '.slider__prev',\n                nextEl: '.slider__next'\n            }}\n            pagination={{clickable: true}}\n            keyboard={{\n                enabled: true,\n                onlyInViewport: true\n            }}\n            loop={true}\n            autoplay={{\n                delay: 10000,\n                disableOnInteraction: true\n            }}\n            speed={500}\n        >\n            {slides}\n            <div className='slider__control-wrapper container'>\n                <div className=\"slider__next\">\n\n                </div>\n                <div className=\"slider__prev\">\n                    \n                </div>\n            </div>\n        </Swiper>\n    );\n};\n\nexport default Slider;","import collection1 from './images/collections/1.jpg';\r\nimport collection2 from './images/collections/2.jpg';\r\nimport collection3 from './images/collections/3.png';\r\nimport collection4 from './images/collections/4.png';\r\nimport collection5 from './images/collections/5.png';\r\nimport collection6 from './images/collections/6.png';\r\n\r\nimport picture1 from './images/pictures/1.png';\r\nimport picture2 from './images/pictures/2.png';\r\nimport picture3 from './images/pictures/3.png';\r\nimport picture4 from './images/pictures/4.png';\r\nimport picture5 from './images/pictures/5.png';\r\nimport picture6 from './images/pictures/6.png';\r\nimport picture7 from './images/pictures/7.png';\r\nimport picture8 from './images/pictures/8.jpg';\r\n\r\nimport exh1 from './images/exhibitions/1.jpg';\r\nimport exh2 from './images/exhibitions/2.jpg';\r\nimport exh3 from './images/exhibitions/3.jpg';\r\nimport exh4 from './images/exhibitions/4.png';\r\n\r\nimport userImg from './images/user/user.jpg';\r\n\r\nconst db = {\r\n    collections: [\r\n        {\r\n            id: 1,\r\n            name: \"Живопись\",\r\n            image: collection1,\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Шедевры\",\r\n            image: collection2,\r\n        },\r\n            {\r\n            id: 3,\r\n            name: \"Графика\",\r\n            image: collection3,\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Скульптура\",\r\n            image: collection4,\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Портреты\",\r\n            image: collection5,\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Пейзажи\",\r\n            image: collection6,\r\n        },\r\n    ],\r\n\r\n    pictures: [\r\n        {\r\n            id: 1,\r\n            name: 'Богатыри',\r\n            author: 'В.М. Васнецов ',\r\n            description: 'Картина Виктора Михайловича Васнецова \"Богатыри\" по праву считается настоящим народным шедевром и символом отечественного искусства. Создавалась картина во второй половине XIX века, когда среди русских художников была очень популярна тема народной культуры, русского фольклора. Для многих художников это увлечение оказалось кратковременным, но у Васнецова народная фольклорная тематика стала основой всего творчества.',\r\n            image: picture1,\r\n            categories: [\r\n                1,\r\n                2,\r\n            ]\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Пейзаж с двумя девушками',\r\n            author: 'М. Диф',\r\n            description: 'Картина Виктора Михайловича Васнецова \"Богатыри\" по праву считается настоящим народным шедевром и символом отечественного искусства. Создавалась картина во второй половине XIX века, когда среди русских художников была очень популярна тема народной культуры, русского фольклора. Для многих художников это увлечение оказалось кратковременным, но у Васнецова народная фольклорная тематика стала основой всего творчества.',\r\n            image: picture2,\r\n            categories: [\r\n                1,\r\n            ]\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Белый ангел',\r\n            author: 'А. Зайцев',\r\n            description: 'Картина Виктора Михайловича Васнецова \"Богатыри\" по праву считается настоящим народным шедевром и символом отечественного искусства. Создавалась картина во второй половине XIX века, когда среди русских художников была очень популярна тема народной культуры, русского фольклора. Для многих художников это увлечение оказалось кратковременным, но у Васнецова народная фольклорная тематика стала основой всего творчества.',\r\n            image: picture3,\r\n            categories: [\r\n                1,\r\n            ]\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Лесные фиалки и незабудки',\r\n            author: 'И.И. Левитан',\r\n            description: 'Картина Виктора Михайловича Васнецова \"Богатыри\" по праву считается настоящим народным шедевром и символом отечественного искусства. Создавалась картина во второй половине XIX века, когда среди русских художников была очень популярна тема народной культуры, русского фольклора. Для многих художников это увлечение оказалось кратковременным, но у Васнецова народная фольклорная тематика стала основой всего творчества.',\r\n            image: picture4,\r\n            categories: [\r\n                1,\r\n            ]\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Пшеничное поле с восходящим солнцем',\r\n            author: 'В. Ван Гог',\r\n            description: 'Картина Виктора Михайловича Васнецова \"Богатыри\" по праву считается настоящим народным шедевром и символом отечественного искусства. Создавалась картина во второй половине XIX века, когда среди русских художников была очень популярна тема народной культуры, русского фольклора. Для многих художников это увлечение оказалось кратковременным, но у Васнецова народная фольклорная тематика стала основой всего творчества.',\r\n            image: picture5,\r\n            categories: [\r\n                1,\r\n                2,\r\n            ]\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Возвращение в четверг',\r\n            author: 'П. Сандерс',\r\n            description: 'Картина Виктора Михайловича Васнецова \"Богатыри\" по праву считается настоящим народным шедевром и символом отечественного искусства. Создавалась картина во второй половине XIX века, когда среди русских художников была очень популярна тема народной культуры, русского фольклора. Для многих художников это увлечение оказалось кратковременным, но у Васнецова народная фольклорная тематика стала основой всего творчества.',\r\n            image: picture6,\r\n            categories: [\r\n                1,\r\n                2,\r\n            ]\r\n        },\r\n        {\r\n            id: 7,\r\n            name: 'Амуры',\r\n            author: 'Ф. Буше',\r\n            description: 'Картина Виктора Михайловича Васнецова \"Богатыри\" по праву считается настоящим народным шедевром и символом отечественного искусства. Создавалась картина во второй половине XIX века, когда среди русских художников была очень популярна тема народной культуры, русского фольклора. Для многих художников это увлечение оказалось кратковременным, но у Васнецова народная фольклорная тематика стала основой всего творчества.',\r\n            image: picture7,\r\n            categories: [\r\n                1,\r\n            ]\r\n        },\r\n        {\r\n            id: 8,\r\n            name: 'Рождение Венеры',\r\n            author: 'Сандро Ботичелли',\r\n            description: 'Картина Виктора Михайловича Васнецова \"Богатыри\" по праву считается настоящим народным шедевром и символом отечественного искусства. Создавалась картина во второй половине XIX века, когда среди русских художников была очень популярна тема народной культуры, русского фольклора. Для многих художников это увлечение оказалось кратковременным, но у Васнецова народная фольклорная тематика стала основой всего творчества.',\r\n            image: picture8,\r\n            categories: [\r\n                1, 2\r\n            ]\r\n        },\r\n    ],\r\n    exhibitions: [\r\n        {\r\n            id: 1,\r\n            image: exh1,\r\n            name: '«‎Магические картины»‎ Пабло Пикасcо',\r\n            date: '2021-11-01',\r\n            address: 'ул. Нижняя Сыромятническая, 10',\r\n            time: '14:00',\r\n            description: 'Весьма существенно следующее: прекрасное диссонирует биографический метод. Типическое, так или иначе, монотонно выстраивает бессознательный художественный талант. Развивая эту тему, героическое просветляет непосредственный фабульный каркас, таким образом, все перечисленные признаки архетипа и мифа подтверждают, что действие механизмов мифотворчества сродни механизмам художественно-продуктивного мышления.',\r\n            price: 1250,\r\n            categories: [\r\n                1,\r\n                6,\r\n            ]\r\n        },\r\n        {\r\n            id: 2,\r\n            image: exh2,\r\n            name: '10 великих художников Эпохи Возрождения',\r\n            date: '2021-11-06',\r\n            address: 'ул. Шейнкмана, 12',\r\n            time: '11:00',\r\n            description: 'Весьма существенно следующее: прекрасное диссонирует биографический метод. Типическое, так или иначе, монотонно выстраивает бессознательный художественный талант. Развивая эту тему, героическое просветляет непосредственный фабульный каркас, таким образом, все перечисленные признаки архетипа и мифа подтверждают, что действие механизмов мифотворчества сродни механизмам художественно-продуктивного мышления.',\r\n            price: 1200,\r\n            categories: [\r\n                1,\r\n            ]\r\n        },\r\n        {\r\n            id: 3,\r\n            image: exh3,\r\n            name: 'Эпоха модерна',\r\n            date: '2021-11-18',\r\n            address: 'ул. Кремлевская, 2',\r\n            time: '13:00',\r\n            description: 'Весьма существенно следующее: прекрасное диссонирует биографический метод. Типическое, так или иначе, монотонно выстраивает бессознательный художественный талант. Развивая эту тему, героическое просветляет непосредственный фабульный каркас, таким образом, все перечисленные признаки архетипа и мифа подтверждают, что действие механизмов мифотворчества сродни механизмам художественно-продуктивного мышления.',\r\n            price: 800,\r\n            categories: [\r\n                1,\r\n                3,\r\n                4,\r\n            ]\r\n        },\r\n        {\r\n            id: 4,\r\n            image: exh4,\r\n            name: 'Русское искусство второй половины XIX – начала XX века',\r\n            date: '2021-11-28',\r\n            address: 'ул. Кремлевская, 2',\r\n            time: '12:00',\r\n            description: 'Весьма существенно следующее: прекрасное диссонирует биографический метод. Типическое, так или иначе, монотонно выстраивает бессознательный художественный талант. Развивая эту тему, героическое просветляет непосредственный фабульный каркас, таким образом, все перечисленные признаки архетипа и мифа подтверждают, что действие механизмов мифотворчества сродни механизмам художественно-продуктивного мышления.',\r\n            price: 1100,\r\n            categories: [\r\n                1,\r\n                2,\r\n            ]\r\n        },\r\n    ],\r\n    user: [\r\n        {\r\n            id: 22,\r\n            first_name: 'Иван',\r\n            last_name: 'Иванов',\r\n            birthday: '1986-01-17',\r\n            email: 'example@mail.com',\r\n            image: userImg\r\n        },\r\n    ],\r\n};\r\n\r\nexport default db;","export default __webpack_public_path__ + \"static/media/1.3a4c0a6a.jpg\";","export default __webpack_public_path__ + \"static/media/2.f1c38a54.jpg\";","export default __webpack_public_path__ + \"static/media/3.d1778719.png\";","export default __webpack_public_path__ + \"static/media/4.9512fbbf.png\";","export default __webpack_public_path__ + \"static/media/5.4314a868.png\";","export default __webpack_public_path__ + \"static/media/6.c5dd142d.png\";","export default __webpack_public_path__ + \"static/media/1.1adec309.png\";","export default __webpack_public_path__ + \"static/media/2.952d06dd.png\";","export default __webpack_public_path__ + \"static/media/3.8d72fcd3.png\";","export default __webpack_public_path__ + \"static/media/4.3652ebb0.png\";","export default __webpack_public_path__ + \"static/media/5.97b9fb9f.png\";","export default __webpack_public_path__ + \"static/media/6.362571b5.png\";","export default __webpack_public_path__ + \"static/media/7.e6e2c4e9.png\";","export default __webpack_public_path__ + \"static/media/8.dabeaa8e.jpg\";","export default __webpack_public_path__ + \"static/media/1.8c9b418e.jpg\";","export default __webpack_public_path__ + \"static/media/2.f1c38a54.jpg\";","export default __webpack_public_path__ + \"static/media/3.3a4c0a6a.jpg\";","export default __webpack_public_path__ + \"static/media/4.860400f0.png\";","export default __webpack_public_path__ + \"static/media/user.4a06f635.jpg\";","const setMonthName = (month) => {\n    switch (month) {\n        case 0:\n            return 'января';\n        case 1:\n            return 'февраля';\n        case 2:\n            return 'марта';\n        case 3:\n            return 'апреля';\n        case 4:\n            return 'мая';\n        case 5:\n            return 'июня';\n        case 6:\n            return 'июля';\n        case 7:\n            return 'августа';\n        case 8:\n            return 'сентября';\n        case 9:\n            return 'октября';\n        case 10:\n            return 'ноября';\n        case 11:\n            return 'декабря';\n        default:\n            return 'не корректный месяц';\n    }\n};\n\nconst setWeekdayName = (weekday) => {\n    switch (weekday) {\n        case 0:\n            return 'воскресенье';\n        case 1:\n            return 'понедельник';\n        case 2:\n            return 'вторник';\n        case 3:\n            return 'среда';\n        case 4:\n            return 'четверг';\n        case 5:\n            return 'пятница';\n        case 6:\n            return 'суббота';\n        default:\n            return 'не корректный день недели';\n    }\n};\n\nconst setShortWeekdayName = (weekday) => {\n    switch (weekday) {\n        case 0:\n            return 'вс';\n        case 1:\n            return 'пн';\n        case 2:\n            return 'вт';\n        case 3:\n            return 'ср';\n        case 4:\n            return 'чт';\n        case 5:\n            return 'пт';\n        case 6:\n            return 'сб';\n        default:\n            return 'не корректный день недели';\n    }\n};\n\nconst transformDate = (date) => {\n    if (date) {\n        const dateArr = date.split('-'),\n              newStr = `${dateArr[2]}.${dateArr[1]}.${dateArr[0]}`;\n\n        return newStr;\n    } else {\n        return;\n    }\n    \n};\n\nexport {\n    setMonthName,\n    setWeekdayName,\n    setShortWeekdayName,\n    transformDate,\n};","export default __webpack_public_path__ + \"static/media/icons.72cecd40.svg\";","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport './comingEvents.scss';\n\nimport * as actions from '../../actions/actions';\nimport db from '../../db';\nimport * as transformDate from '../../dateTransform/dateTransform';\n\nimport icons from '../../icons/icons.svg';\n\nconst ComingEvents = ({exhibitionsLoaded, exhibitions}) => {\n\n    useEffect(() => {\n        exhibitionsLoaded(db.exhibitions);\n    });\n\n    const cards = exhibitions.map((item, i) => {\n        const date = new Date(item.date);\n\n        const dateData = {\n            day: date.getDate(),\n            weekday: transformDate.setWeekdayName(date.getDay()),\n            month: transformDate.setMonthName(date.getMonth()),\n            year: date.getFullYear(),\n        };\n\n        if (i < 3) {\n            return (\n                <Link to={`/exhibitions/${item.id}`} key={item.id} className=\"exhibition-card exhibition-card--xl\">\n                    <img \n                        src={item.image} \n                        alt={item.name} \n                        className='exhibition-card__img'\n                    />    \n                    <div className=\"exhibition-card__rectangle\"></div>\n                    <div className=\"exhibition-card__header\">\n                        <div className=\"exhibition-card__date-block\">\n                            <div className=\"exhibition-card__date-number\">\n                                {dateData.day}\n                            </div>\n                            <div className=\"exhibition-card__date\">\n                                <div className=\"exhibition-card__month\">\n                                    {dateData.month}\n                                </div>\n                                <div className=\"exhibition-card__weekday\">\n                                    {dateData.weekday}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"exhibition-card__location\">\n                            <div className=\"exhibition-card__address\">\n                                {item.address}\n                            </div>\n                            <div className=\"exhibition-card__time\">\n                                {item.time.slice(0, 5)}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"exhibition-card__footer\">\n                        <div className=\"exhibition-card__title\">\n                            {item.name}\n                        </div>\n                        <svg className=\"exhibition-card__arrow\">\n                            <use href={`${icons}#arrow`}></use>\n                        </svg>\n                    </div>\n                </Link>\n            );\n        } else {\n            return null;\n        }\n        \n    });\n    \n    return (\n        <div className=\"coming-events\">\n            <div className='container'>\n                <h2 className=\"coming-events__title title page-title\">\n                    Ближайшие мероприятия\n                </h2>\n                <div className=\"coming-events__grid\">\n                    {cards}\n                </div>   \n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        exhibitions: state.exhibitions,\n        isLoadingExhibitions: state.isLoadingExhibitions,\n        isErrorExhibitions: state.isErrorExhibitions\n    }\n};\n\nexport default connect(mapStateToProps, actions)(ComingEvents);","import React, { useState, useEffect, useLayoutEffect } from 'react';\nimport './map.scss';\n\nconst Map = () => {\n    const [isBr, setIsBr] = useState(true);\n    \n    const [size, setSize] = useState([0, 0]);\n    \n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        \n        window.addEventListener('resize', updateSize);\n        updateSize();\n    \n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n\n    useEffect(() => {\n        const clientWidth = document.documentElement.clientWidth;\n\n        if (clientWidth < 768) {\n            setIsBr(false);\n        } else {\n            setIsBr(true);\n        }\n    }, [size]);\n    \n\n    return (\n        <div className=\"map\">\n            <div className='container'>\n                <div className=\"map__flex-wrapper\">\n                    <div className=\"map__contacts\">\n                        <div className=\"map__title title\">\n                            Наши \n                            {isBr ? <br/> : ' '}\n                            контакты\n                        </div>\n                        <div className=\"map__info\">\n                            <div className=\"map__info-item\">\n                                Казань, Карла Маркса, 57\n                            </div>\n                            <div className=\"map__info-item\">\n                                <a href=\"tel:+78432234540\">+7 (843) 223-45-40</a>\n                            </div>\n                            <div className=\"map__info-item\">\n                                <a href=\"mailto:info@gallartus.ru\">info@gallartus.ru</a>     \n                            </div>\n                            <div className=\"map__info-item\">\n                                Факс: +7 843 223-40-40\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"map__frame\">\n                        <iframe title='map' src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2242.867002300653!2d49.13377195193049!3d55.795547280469485!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x415ead6cef895d73%3A0x2d9ec991f30a540f!2z0YPQuy4g0JrQsNGA0LvQsCDQnNCw0YDQutGB0LAsIDU3LCDQmtCw0LfQsNC90YwsINCg0LXRgdC_LiDQotCw0YLQsNGA0YHRgtCw0L0sIDQyMDAxNQ!5e0!3m2!1sru!2sru!4v1620655192330!5m2!1sru!2sru\" loading=\"lazy\"></iframe>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Map;","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport * as actions from '../actions/actions';\nimport Slider from '../components/slider/slider';\nimport ComingEvents from '../components/comingEvents/comingEvents';\nimport Map from '../components/map/map';\n\nconst MainPage = ({toggleHeaderColor}) => {\n    useEffect(() => {\n        toggleHeaderColor(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <>\n            <Slider/>\n            <ComingEvents/>   \n            <Map/> \n        </>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        darkHeader: state.darkHeader\n    }\n};\n\nexport default connect(mapStateToProps, actions)(MainPage);","import axios from 'axios';\n\nconst baseURL = 'http://217.66.18.54:8000/';\n\nconst axiosInstance = axios.create({\n\tbaseURL: baseURL,\n\ttimeout: 30000,\n\theaders: {\n\t\tAuthorization: localStorage.getItem('access_token') ?\n\t\t\t'Bearer ' + localStorage.getItem('access_token') :\n\t\t\tnull,\n\t\t'Content-Type': 'application/json',\n\t\taccept: 'application/json',\n\t},\n});\n\naxiosInstance.interceptors.response.use(\n\t(response) => {\n\t\treturn response;\n\t},\n\tasync function (error) {\n\t\tconst originalRequest = error.config;\n\n\t\tif (typeof error.response === 'undefined') {\n            console.log(error.status);\n            console.log(error.response.status);\n\t\t\talert(\n\t\t\t\t'Ошибка сервера/сети. Приносим свои извинения, мы исправим это в ближайшее время'\n\t\t\t);\n\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tif (\n\t\t\terror.response.status === 401 &&\n\t\t\toriginalRequest.url === baseURL + 'token/refresh/'\n\t\t) {\n\t\t\twindow.location.href = '/';\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tif (\n\t\t\terror.response.data.code === 'token_not_valid' &&\n\t\t\terror.response.status === 401 &&\n\t\t\terror.response.statusText === 'Unauthorized'\n\t\t) {\n\t\t\tconst refreshToken = localStorage.getItem('refresh_token');\n\n\t\t\tif (refreshToken) {\n\t\t\t\tconst tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\n\n                console.log(`tokenParts = ${JSON.stringify(tokenParts) }`);\n\n\t\t\t\t// exp date in token is expressed in seconds, while now() returns milliseconds:\n\t\t\t\tconst now = Math.ceil(Date.now() / 1000);\n\t\t\t\tconsole.log(`TokenParts.exp = ${tokenParts.exp}`);\n                \n\t\t\t\tif (tokenParts.exp > now) {\n\t\t\t\t\treturn axiosInstance\n\t\t\t\t\t\t.post('/token/refresh/', {\n\t\t\t\t\t\t\trefresh: refreshToken\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then((response) => {\n                            console.log(`Response - ${JSON.stringify(response) }`);\n                            console.log(`response.data.access = ${response.data.access}`);\n                            console.log(`response.data.refresh = ${response.data.refresh}`);\n\n\t\t\t\t\t\t\tlocalStorage.setItem('access_token', response.data.access);\n\t\t\t\t\t\t\tlocalStorage.setItem('refresh_token', response.data.refresh);\n\n\t\t\t\t\t\t\taxiosInstance.defaults.headers['Authorization'] =\n\t\t\t\t\t\t\t\t'Bearer ' + response.data.access;\n\t\t\t\t\t\t\toriginalRequest.headers['Authorization'] =\n\t\t\t\t\t\t\t\t'Bearer ' + response.data.access;\n\n                            console.log(`originalRequest = ${JSON.stringify(originalRequest) }`);\n\n\t\t\t\t\t\t\treturn axiosInstance(originalRequest);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tconsole.log(err);\n\n                            localStorage.removeItem('access_token');\n                            localStorage.removeItem('refresh_token');\n        \n                            axiosInstance.defaults.headers['Authorization'] = null;\n\n                            window.location.href = '/';\n                            window.location.reload();\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Refresh token is expired', tokenParts.exp, now);\n\n                    localStorage.removeItem('access_token');\n                    localStorage.removeItem('refresh_token');\n\n\t\t\t\t\twindow.location.href = '/';\n                    window.location.reload();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log('Refresh token not available.');\n\t\t\t\twindow.location.href = '/';\n\t\t\t}\n\t\t}\n\n\t\t// specific error handling done elsewhere\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport default axiosInstance;","import React from 'react';\n\nconst Spinner = () => {\n    return (\n        <div className=\"spinner\">\n            Loading!!\n        </div>\n    );\n};\n\nexport default Spinner;","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport './exhibitionsList.scss';\n\nimport * as actions from '../../actions/actions';\nimport axiosInstance from '../../axios';\nimport Spinner from '../spinner/spinner';\nimport * as transformDate from '../../dateTransform/dateTransform';\nimport icons from '../../icons/icons.svg';\nimport db from '../../db';\n\nconst ExhibitionsList = ({exhibitionsLoaded, exhibitionsError, exhibitions, isLoadingExhibitions, isErrorExhibitions, exhibitionsRequsted}) => {\n\n    useEffect(() => {\n\n        /* if (exhibitions.length === 0) {\n            exhibitionsRequsted();\n        \n            axiosInstance.get('exhibitions')\n                .then(res => {\n                    exhibitionsLoaded(res.data);\n                })\n                .catch(() => exhibitionsError());\n        } */\n\n        exhibitionsLoaded(db.exhibitions);\n        \n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const setItemsContent = (items) => {\n        if (items.length === 0) {\n            return (\n                <p>Тут пусто(</p>\n            );\n        } else {\n            return (\n                items.map((item) => {\n\n                    const date = new Date(item.date);\n\n                    const dateData = {\n                        day: date.getDate(),\n                        weekday: transformDate.setWeekdayName(date.getDay()),\n                        month: transformDate.setMonthName(date.getMonth()),\n                        year: date.getFullYear(),\n                    };\n\n                    return (\n                        <Link to={`/exhibitions/${item.id}`} key={item.id} className=\"exhibition-card\">\n                            <img \n                                src={item.image} \n                                alt={item.name} \n                                className='exhibition-card__img'\n                            />    \n                            <div className=\"exhibition-card__rectangle\"></div>\n                            <div className=\"exhibition-card__header\">\n                                <div className=\"exhibition-card__date-block\">\n                                    <div className=\"exhibition-card__date-number\">\n                                        {dateData.day}\n                                    </div>\n                                    <div className=\"exhibition-card__date\">\n                                        <div className=\"exhibition-card__month\">\n                                            {dateData.month}\n                                        </div>\n                                        <div className=\"exhibition-card__weekday\">\n                                            {dateData.weekday}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"exhibition-card__location\">\n                                    <div className=\"exhibition-card__address\">\n                                        {item.address}\n                                    </div>\n                                    <div className=\"exhibition-card__time\">\n                                        {item.time.slice(0, 5)}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"exhibition-card__footer\">\n                                <div className=\"exhibition-card__title\">\n                                    {item.name}\n                                </div>\n                                <svg className=\"exhibition-card__arrow\">\n                                    <use href={`${icons}#arrow`}></use>\n                                </svg>\n                            </div>\n                        </Link>\n                    );\n                })\n            );    \n        }\n    };\n\n    const exhibitionsCards = exhibitions ? setItemsContent(exhibitions) : null;\n\n    const loadingContent = isLoadingExhibitions ? <LoadingCard/> : null;\n\n    const errorContent = isErrorExhibitions ? <ErrorCard/> : null;\n\n    const content = !isLoadingExhibitions && !isErrorExhibitions ? exhibitionsCards : null;\n\n    return (\n        <div className=\"exhibitions\">\n            <div className='container'>\n                <div className=\"exhibitions__title title page-title\">\n                    Выставки музея\n                </div>\n                <div className=\"exhibitions__flex-wrapper\">\n                    {loadingContent}\n                    {content}\n                    {errorContent}\n                </div>    \n            </div>\n        </div>\n    );\n};\n\nconst LoadingCard = () => {\n    return (\n        <div className=\"loading-card\">\n            <Spinner/>\n        </div>\n    );\n};\n\nconst ErrorCard = () => {\n    return (\n        <div className=\"error-card\">\n            Error\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        exhibitions: state.exhibitions,\n        isLoadingExhibitions: state.isLoadingExhibitions,\n        isErrorExhibitions: state.isErrorExhibitions\n    }\n};\n\nexport default connect(mapStateToProps, actions)(ExhibitionsList);","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport * as actions from '../actions/actions';\nimport ExhibitionsList from '../components/exhibitionsList/exhibitionsList';\n\n\nconst ExhibitionsPage = ({toggleHeaderColor}) => {\n    useEffect(() => {\n        toggleHeaderColor(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (      \n        <ExhibitionsList/>  \n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        darkHeader: state.darkHeader,\n    }\n};\n\nexport default connect(mapStateToProps, actions)(ExhibitionsPage);","export default __webpack_public_path__ + \"static/media/about-img.978595df.jpg\";","import React, { useEffect } from 'react';\nimport SwiperCore, { Autoplay, Keyboard, Navigation, Pagination} from 'swiper';\nimport {Swiper, SwiperSlide} from 'swiper/react';\n\nimport './about-slider.scss';\n\nimport image from './img/about-img.jpg';\nimport icons from '../../../icons/icons.svg'; \n\nSwiperCore.use([Navigation, Pagination, Keyboard, Autoplay]);\n\nconst aboutImgs = [\n    {\n        id: 1,\n        src: image,\n        name: 'name',\n    },\n    {\n        id: 2,\n        src: image,\n        name: 'name',\n    },\n    {\n        id: 3,\n        src: image,\n        name: 'name',\n    },\n    {\n        id: 4,\n        src: image,\n        name: 'name',\n    },\n];\n\nconst AboutSlider = () => {\n    useEffect(() => {\n        const slider = document.querySelector('.about-slider');\n        const pagination = slider.querySelector('.swiper-pagination');\n        const paginationBullet = slider.querySelectorAll('.swiper-pagination-bullet');\n\n        pagination.classList.add('about-slider__pagination');\n        paginationBullet.forEach(bullet => bullet.classList.add('about-slider__pagination-bullet'));\n    }, []);\n\n    const slides = aboutImgs.map((item) => {\n        return (\n            <SwiperSlide className='about-slider__item' key={item.id}>\n                <img src={item.src} alt={item.name}/>\n            </SwiperSlide>\n        )\n    });\n\n    return (\n        <Swiper \n            className='about-slider'\n            navigation={{\n                prevEl: '.about-slider__prev',\n                nextEl: '.about-slider__next'\n            }}\n            pagination={{clickable: true}}\n            keyboard={{\n                enabled: true,\n                onlyInViewport: true\n            }}\n            loop={false}\n            autoplay={{\n                delay: 10000,\n                disableOnInteraction: true\n            }}\n            speed={500}\n        >\n            {slides}\n            \n            <svg className='about-slider__next'>\n                <use href={`${icons}#arrow`}></use>\n            </svg>\n            <svg className='about-slider__prev'>\n                <use href={`${icons}#arrow`}></use>\n            </svg>\n        </Swiper>\n    )\n};\n\nexport default AboutSlider;","import React from 'react';\n\nimport './about-text.scss';\n\nconst AboutText = () => {\n    return (\n        <div className=\"about-text\">\n            <h2 className=\" about-text__title title page-title\">\n                О музее\n            </h2>\n            <div className=\"about-text__text\">\n                Весьма существенно следующее: прекрасное диссонирует биографический метод. Типическое, так или иначе, монотонно выстраивает бессознательный художественный талант. Развивая эту тему, героическое просветляет непосредственный фабульный каркас, таким образом, все перечисленные признаки архетипа и мифа подтверждают, что действие механизмов мифотворчества сродни механизмам мышления.\n            </div>\n        </div>\n    )\n};\n\nexport default AboutText;","import React from 'react';\n\nimport './about-info.scss';\n\nimport AboutSlider from './aboutSlider/aboutSlider';\nimport AboutText from './aboutText/aboutText';\n\nconst AboutInfo = () => {\n    return (\n        <div className=\"about-info\">\n            <AboutSlider/>\n            <AboutText/>\n        </div>\n    )\n};\n\nexport default AboutInfo;","import React, {useEffect} from 'react';\nimport { Container } from 'reactstrap';\nimport {connect} from 'react-redux';\n\nimport '../styles/pages/aboutPage.scss';\n\nimport * as actions from '../actions/actions';\nimport AboutInfo from '../components/aboutInfo/aboutInfo';\nimport Map from '../components/map/map';\n\nconst AboutPage = ({toggleHeaderColor}) => {\n    useEffect(() => {\n        toggleHeaderColor(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    \n    return (    \n        <div className=\"about\">\n            <Container>\n                <AboutInfo/>\n            </Container>\n            <Map/>\n        </div>     \n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        darkHeader: state.darkHeader\n    }\n};\n\nexport default connect(mapStateToProps, actions)(AboutPage);","import React, { useEffect } from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport Masonry from 'react-masonry-css';\n\nimport './collections.scss';\n\nimport * as actions from '../../actions/actions';\nimport axiosInstance from '../../axios';\nimport Spinner from '../spinner/spinner';\nimport icons from '../../icons/icons.svg';\n\nimport db from '../../db';\n\nconst Collections = ({ \n    collectionsLoaded, \n    collections, \n    collectionsRequsted,  \n    isLoadingCollections, \n    isErrorCollcetions, \n    collectionsError\n}) => {\n\n    useEffect(() => {\n\n        /* if (collections.length === 0) {\n            collectionsRequsted();\n\n            axiosInstance.get('categories')\n                .then(res => {\n                    collectionsLoaded(res.data);\n                })\n                .catch(() => collectionsError() );\n        } */\n\n        collectionsLoaded(db.collections);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const setItemsContent = (items) => {\n        if (items.length === 0) {\n            return (\n                <p>Тут пусто(</p>\n            );\n        } else {\n            return (\n                items.map((item) => {\n                    return (\n                        <Link to={`/collections/${item.id}`} className='collection-card' key={item.id}>   \n                            <div className=\"collection-card__img\">\n                                <img src={item.image} alt={item.name}/>                       \n                            </div> \n                            <div className=\"collection-card__title title\">\n                                {item.name}\n                                <svg className=\"collection-card__arrow\">\n                                    <use href={`${icons}#arrow`}></use>\n                                </svg>\n                            </div>                      \n                        </Link>\n                    );\n                })\n            );\n            \n        }\n    };\n    \n\n    const collectionsCards = collections ? setItemsContent(collections) : null;\n    \n    const loadingContent = isLoadingCollections ? <LoadingCard/> : null;\n\n    const errorContent = isErrorCollcetions ? <ErrorCard/> : null;\n\n    const content = !isLoadingCollections && !isErrorCollcetions ? collectionsCards : null;\n\n    const breakpoints ={\n        default: 3,\n        1100: 2,\n        700: 1,\n    };\n\n    return (\n        <Masonry \n            breakpointCols={breakpoints}\n            className=\"collection__grid\"\n            columnClassName=\"collection__grid_column\"\n        >\n            {loadingContent}\n            {content}\n            {errorContent}\n        </Masonry>\n    );\n};\n\nconst LoadingCard = () => {\n    return (\n        <div className=\"loading-card\">\n            <Spinner/>\n        </div>\n    );\n};\n\nconst ErrorCard = () => {\n    return (\n        <div className=\"error-card\">\n            Error\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        collections: state.collections,\n        isLoadingCollections: state.isLoadingCollections,\n        isErrorCollcetions: state.isErrorCollcetions,\n    }\n};\n\nexport default connect(mapStateToProps, actions)(Collections);","import React, {useEffect} from 'react';\nimport { Container, ButtonGroup, Button } from 'reactstrap';\nimport {connect} from 'react-redux';\n\nimport * as actions from '../actions/actions';\nimport Collcetions from '../components/collections/collections';\n\nconst AllCollectionsPage = ({toggleHeaderColor}) => {\n    useEffect(() => {\n        toggleHeaderColor(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (    \n        <div className='collection'>\n            <Container>\n                <h2 className=\"collection__title title page-title\">Коллекции</h2>\n                <Collcetions/>\n            </Container>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        darkHeader: state.darkHeader\n    }\n};\n\nexport default connect(mapStateToProps, actions)(AllCollectionsPage);","import React, { useState } from 'react';\nimport {\n    Modal, \n    ModalHeader, \n    ModalBody, \n    ModalFooter, \n    Form, \n    FormGroup, \n    Label, \n    Input,\n} from 'reactstrap';\n\nimport axiosInstance from '../../../axios';\nimport icons from '../../../icons/icons.svg';\n\nconst EditUserModal = ({toggle, isOpen, userId, refresh}) => {\n    const initialFormData = Object.freeze({\n        first_name: '',\n        lastNameEdit: '',\n        birthday: '',\n    });\n\n    const [editData, updateEditData] = useState(initialFormData);\n    const [editImg, setEditImg] = useState(null)\n\n    const handleChange = (e) => {\n        const target = e.target;\n        // eslint-disable-next-line \n        if ([target.name] == 'image') {\n            setEditImg({\n                image: target.files,\n            });\n        }\n\n        updateEditData({\n            ...editData,\n            [target.name]: target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        let counter = 0;\n\n        for (let key in editData) {\n            if (editData[key]) {\n                formData.append(key, editData[key]);\n            }\n        }\n\n        if (editImg && !(editImg.image.length === 0)) {\n            formData.append('image', editImg.image[0]);\n        }\n\n        for (let [name] of formData.keys()) {\n            counter++;\n        }\n        \n        if (counter === 0) {\n            toggle();\n        } else {\n            axiosInstance.put(`users/${userId}`, formData)\n                .then(() => {\n                    refresh();\n                    toggle();\n                });\n        }\n\n        \n    };\n\n    const closeBtn = <svg className='close' onClick={toggle}><use href={`${icons}#close`}></use></svg>;\n\n    return (\n        <Modal toggle={toggle} isOpen={isOpen} className='custom-modal'>\n            <ModalHeader toggle={toggle} close={closeBtn}>\n                Редактирование\n            </ModalHeader>\n            <Form>\n                <ModalBody>\n                    <FormGroup>\n                        <Label for='firstNameEdit'>Имя</Label>\n                        <Input \n                            type='text'\n                            name='first_name'\n                            id='firstNameEdit'\n                            onChange={handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for='lastNameEdit'>Фамилия</Label>\n                        <Input \n                            type='text'\n                            name='last_name'\n                            id='lastNameEdit'\n                            onChange={handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for='birthdayEdit'>День рождения</Label>\n                        <Input \n                            type='date'\n                            name='birthday'\n                            id='birthdayEdit'\n                            onChange={handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for='imageEdit'>Фотография</Label>\n                        <Input \n                            id='imageEdit'\n                            accept='image/*'\n                            type='file'\n                            name='image'\n                            onChange={handleChange}\n                        />\n                    </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <button\n                        disabled\n                        onClick={handleSubmit}\n                    >\n                        Сохранить\n                    </button>\n                </ModalFooter>\n            </Form>\n        </Modal>\n    );\n};\n\nexport default EditUserModal;","import React, { useEffect, useState } from 'react';\nimport { Button } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport Masonry from 'react-masonry-css';\n\nimport './userLikes.scss';\n\nimport axiosInstance from '../../../axios';\nimport icons from '../../../icons/icons.svg';\n\nconst UserLikes = () => {\n    const [likes, setLikes] = useState([]);\n\n    const [refresh, setRefresh] = useState(false);\n\n    const toggleRefresh = () => setRefresh(!refresh);\n\n    useEffect(() => {\n        /* axiosInstance.get('likes')\n            .then(res => {\n                if (res.data) {\n\n                    setLikes(res.data);\n                }\n            } )\n            .catch((err) => console.log(err)); */\n    }, []);\n\n    const handleDelete = (e, itemId) => {\n        const target = e.target.closest('.picture-card');\n\n        target.remove();\n\n        axiosInstance.delete(`likes/${itemId}/delete`)\n            .then(() =>{\n                toggleRefresh();\n            })\n            .catch((err) => console.log(err));\n    };\n\n    const breakpoints ={\n        default: 3,\n        1100: 2,\n        700: 1,\n    };\n\n\n    const likesCards = likes.length > 0 ? likes.map(item => {\n        return (\n            <div key={item.id} className='picture-card picture-card--xs'>\n                <Link to={`/pictures/${item.picture.id}`} className='picture-card__content'>\n                    <div className=\"picture-card__img\">\n                        <img src={item.picture.image} alt={item.picture.name} />\n                    </div>\n                    \n                    <div className=\"picture-card__title title\">\n                        <div className=\"picture-card__name\">\n                            {item.picture.author} \"{item.picture.name}\"\n                        </div>\n                        <svg className=\"picture-card__arrow\">\n                            <use href={`${icons}#arrow`}></use>\n                        </svg>\n                    </div>\n                </Link>\n                <LikeIcon \n                    itemId={item.picture.id} \n                    handleDelete={handleDelete}  \n                />\n            </div>\n        );\n    }) : <h3>Пусто</h3>;\n\n    return (\n        <Masonry \n            breakpointCols={breakpoints}\n            className=\"likes__grid\"\n            columnClassName=\"likes__grid_column\"\n        >\n            {likesCards}\n        </Masonry>\n        \n    );\n};\n\nconst LikeIcon = ({handleDelete, itemId}) => {\n    return (\n        <svg onClick={(e) => handleDelete(e, itemId)} className={`picture-card__like-btn active-like`}>\n            <use href={`${icons}#like`}></use>\n        </svg>\n    )\n};\n\nexport default UserLikes;","import React, { useEffect, useState } from 'react';\nimport {Link} from 'react-router-dom';\n\nimport axiosInstance from '../../../axios';\nimport * as transformDate from '../../../dateTransform/dateTransform';\n\nconst UserReccomendation = () => {\n    const [recommendations, setRecommendations] = useState([]);\n\n    useEffect(() => {\n        /* axiosInstance.get('users/recommendation')\n            .then(res => setRecommendations(res.data))\n            .catch(err => console.log(err)); */\n    }, []);\n\n    const recommendationsCards = recommendations.length > 0 ? recommendations.map(item => {\n        const date = new Date(item.date);\n\n        const dateData = {\n            day: date.getDate(),\n            weekday: transformDate.setWeekdayName(date.getDay()),\n            month: transformDate.setMonthName(date.getMonth()),\n            year: date.getFullYear(),\n        };\n\n        return (\n            <Link to={`/exhibitions/${item.id}`} key={item.id} className=\"exhibition-card exhibition-card--xs\">\n                <img \n                    src={item.image} \n                    alt={item.name} \n                    className='exhibition-card__img'\n                />\n                <div className=\"exhibition-card__rectangle\"></div>\n                <div className=\"exhibition-card__header\">\n                    <div className=\"exhibition-card__date-block\">\n                        <div className=\"exhibition-card__date-number\">\n                            {dateData.day}\n                        </div>\n                        <div className=\"exhibition-card__date\">\n                            <div className=\"exhibition-card__month\">\n                                {dateData.month}\n                            </div>\n                            <div className=\"exhibition-card__weekday\">\n                                {dateData.weekday}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"exhibition-card__location\">\n                        <div className=\"exhibition-card__address\">\n                            {item.address}\n                        </div>\n                        <div className=\"exhibition-card__time\">\n                            {item.time.slice(0, 5)}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"exhibition-card__footer\">\n                    <div className=\"exhibition-card__title\">\n                        {item.name}\n                    </div>\n                </div>\n            </Link>\n        );\n    }) : <h3>Пусто</h3>\n\n    return (\n        <div className=\"exhibitions__flex-wrapper\">\n            {recommendationsCards}\n        </div>        \n    );\n};\n\nexport default UserReccomendation;","export default __webpack_public_path__ + \"static/media/no-avatar.572020fd.jpg\";","import React, {useState, useEffect} from 'react';\nimport {\n        Container, \n        Card, \n        Nav, \n        NavItem, \n        NavLink, \n        TabContent, \n        TabPane, \n        Row, \n        Col,\n        Button\n    } from 'reactstrap';\nimport classnames from 'classnames';\n\nimport './userAccount.scss';\n\nimport axiosInstance from '../../axios';\nimport EditUserModal from './editUserModal/editUserModal';\nimport UserLikes from './userLikes/userLikes';\nimport UserReccomendation from './userRecommendation/userRecommendation';\nimport { transformDate } from '../../dateTransform/dateTransform';\nimport db from '../../db';\nimport avatar from '../../images/user/no-avatar.jpg';\n\nconst UserAccount = () => {\n    const [userInfo, setUserInfo] = useState(null);\n    const [isOpen, setIsOpen] = useState(false);\n\n    const [activeTab, setActiveTab] = useState('1');\n\n    const [refresh, setRefresh] = useState();\n\n    const toggleRefresh = () => setRefresh(!refresh);\n\n    const toggle = tab => {\n        if(activeTab !== tab) setActiveTab(tab);\n    };\n\n    const toggleEditModal = () => setIsOpen(!isOpen);\n\n    useEffect(() => {\n        /* axiosInstance.get(`users/`)\n            .then(res => {\n                setUserInfo(res.data[0]);\n            }); */\n        setUserInfo(db.user[0]);\n    }, [refresh]);\n\n    const content = userInfo ? \n    <UserCard \n        isOpen={isOpen} \n        user={userInfo} \n        toggle={toggleEditModal}\n        toggleRefresh={toggleRefresh}\n    /> : \n    <EmptyData/>;\n    \n    return (\n        <div className=\"user-account\">\n            <div className='container'>\n                <div className=\"user-account__wrapper\">\n                    {content}\n                    <div className=\"tabs-wrapper\">\n                        <Nav tabs className='custom-tabs'>\n                            <NavItem>\n                                <NavLink\n                                    className={classnames({ active: activeTab === '1' })}\n                                    onClick={() => { toggle('1'); }}\n                                >\n                                    Мне понравилось\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink\n                                    className={classnames({ active: activeTab === '2' })}\n                                    onClick={() => { toggle('2'); }}\n                                >\n                                    Подборка выставок\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                        <TabContent activeTab={activeTab}>\n                            <TabPane tabId=\"1\">\n                                <UserLikes/>\n                            </TabPane>\n                            <TabPane tabId=\"2\">\n                                <UserReccomendation/>\n                            </TabPane>\n                        </TabContent>\n                    </div>    \n                </div>\n                \n            </div>\n            \n        </div>\n    );   \n};\n\nconst UserCard = ({user, toggle, isOpen, toggleRefresh}) => {\n    const birthday = transformDate(user.birthday)\n\n    return (\n        <div className='user'>\n            <div className=\"user__header\">\n                <img src={user.image ? user.image : avatar} alt={user.first_name} />\n            </div>\n            <div className=\"user__body\">\n                <h2 className=\"user__name title\">{user.first_name} {user.last_name}</h2>\n                <h3 className=\"user__birthday\">{birthday}</h3>\n                <div className=\"user__mail\">{user.email}</div>\n            </div>\n            <div className=\"user__footer\">\n                <button onClick={toggle} className=\"user__edit\">Редактировать</button>\n            </div>\n            <EditUserModal refresh={toggleRefresh} userId={user.id} isOpen={isOpen} toggle={toggle}/>\n        </div>\n    );\n    \n};\n\nconst EmptyData = () => {\n    return (\n        <p>Нет данных о пользователе...</p>\n    );\n}\n\nexport default UserAccount;","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport * as actions from '../actions/actions';\nimport UserAccount from '../components/userAccount/userAccount';\n\nconst UserPage = ({toggleHeaderColor}) => {\n    useEffect(() => {\n        toggleHeaderColor(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (    \n        <UserAccount/>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        darkHeader: state.darkHeader,\n    }\n};\n\nexport default connect(mapStateToProps, actions)(UserPage);","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport Masonry from 'react-masonry-css';\n\nimport './collectionsPictures.scss';\n\nimport axiosInstance from '../../axios';\nimport * as actions from '../../actions/actions';\nimport Spinner from '../spinner/spinner';\nimport icons from '../../icons/icons.svg';\n\nimport db from '../../db';\n\nconst CollectionsPictures = ({pictures, picturesLoaded, collectionId, picturesError, picturesRequsted, isLoadingPictures, isErrorPictures, isAutorization, setLikesId, likesId}) => {\n\n    useEffect(() => {\n        /* picturesRequsted();\n\n        if (localStorage.getItem('access_token')) { \n            axiosInstance.get('likes')\n                .then((res) => {\n                    setLikesId(res.data);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }  */\n\n        /* axiosInstance.get(`pictures?categories=${collectionId}`)\n            .then(res => {\n                picturesLoaded(res.data);\n            })\n            .catch(() => {\n                picturesError();    \n            });\n\n        return function cleanup() {\n            picturesLoaded([]);\n        } */\n\n        picturesLoaded(db.pictures);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleLike = (itemId, e) => {\n        const target = e.target.closest('.picture-card__like-btn');\n\n        if (target.classList.contains('active-like')) {\n            target.classList.remove('active-like');\n\n            axiosInstance.delete(`likes/${itemId}/delete`)\n                .catch((err) => {\n                    console.log(err);\n                    target.classList.add('active-like');\n                });\n        } else {\n            const formData = new FormData();\n\n            if (itemId) {\n                formData.append('picture', itemId);\n            }\n\n            target.classList.add('active-like');\n\n            axiosInstance.post('likes/create', formData)\n                .catch(() =>{\n                    console.log('Error');\n                    target.classList.remove('active-like');\n                });\n        }\n    };\n\n    const filterPictures = pictures ? pictures.filter((item) => {\n        return item.categories.includes(collectionId);\n    }) : null;\n\n    const picturesCards = filterPictures && filterPictures.length !== 0 ?  pictures.map((item) => {\n        let likeClass = '';\n\n        if (likesId && likesId.size !== 0) {\n            likeClass = likesId.has(item.id) ? 'active-like' : '';\n        }\n\n        const likeBtn = isAutorization ? <LikeIcon \n                                            itemId={item.id} \n                                            handleLike={handleLike}  \n                                            likeClass={likeClass}\n                                        /> : null;\n\n        return (\n            <div key={item.id} className='picture-card'>\n                <Link to={`/pictures/${item.id}`} className='picture-card__content'>\n                    <div className=\"picture-card__img\">\n                        <img src={item.image} alt={item.name} />\n                    </div>\n                    \n                    <div className=\"picture-card__title title\">\n                        <div className=\"picture-card__name\">\n                            {item.author} \"{item.name}\"\n                        </div>\n                        <svg className=\"picture-card__arrow\">\n                            <use href={`${icons}#arrow`}></use>\n                        </svg>\n                    </div>\n                </Link>\n                {likeBtn}\n            </div>  \n        );\n        \n    }) : <EmptyData/>;\n\n    const loadingContent = isLoadingPictures ? <LoadingCard/> : null;\n\n    const errorContent = isErrorPictures ? <ErrorCard/> : null;\n\n    const content = !isLoadingPictures \n                    && !isErrorPictures ? picturesCards : null;\n\n    const breakpoints ={\n        default: 3,\n        1100: 2,\n        700: 1,\n    };\n\n    return (\n        <Masonry\n            breakpointCols={breakpoints}\n            className=\"pictures__grid\"\n            columnClassName=\"pictures__grid_column\"\n        > \n            {loadingContent}\n            {content}\n            {errorContent}\n        </Masonry>\n    );\n};\n\nconst LikeIcon = ({likeClass, handleLike, itemId}) => {\n    return (\n        <svg onClick={(e) => handleLike(itemId, e)} className={`picture-card__like-btn ${likeClass}`}>\n            <use href={`${icons}#like`}></use>\n        </svg>\n    )\n};\n\nconst EmptyData = () => {\n    return (\n        <div className=\"empty-data\">\n            Пусто\n        </div>\n    )\n};\n\nconst LoadingCard = () => {\n    return (\n        <div className=\"loading-card\">\n            <Spinner/>\n        </div>\n    );\n};\n\nconst ErrorCard = () => {\n    return (\n        <div className=\"error-card\">\n            Error\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        pictures: state.pictures,\n        isLoadingPictures: state.isLoadingPictures,\n        isErrorPictures: state.isErrorPictures,\n        currentCollection: state.currentCollection,\n        likesId: state.likesId,\n        isAutorization: state.isAutorization,\n    }\n};\n\nexport default connect(mapStateToProps, actions)(CollectionsPictures);","import React, {useState, useEffect} from 'react';\nimport {Container} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {useParams} from 'react-router-dom';\n\nimport * as actions from '../actions/actions';\nimport CollectionsPictures from '../components/collectionsPictures/collectionsPictures';\nimport axiosInstance from '../axios';\n\nimport db from '../db';\n\nimport '../styles/pages/collectionPage.scss';\n\nconst CollectionPage = ({toggleHeaderColor}) => {\n    const {id} = useParams();\n\n    const [collectionName, setCollectionName] = useState(null);\n\n    useEffect(() => {\n        toggleHeaderColor(true);\n\n        /* axiosInstance.get(`categories?id=${id}`)\n            .then(res => {\n                if (res.data[0]) {\n                    setCollectionName(res.data[0].name);\n                } else {\n                    setCollectionName(null);\n                }\n            })\n            .catch(err => {\n                setCollectionName(null);\n                console.log(err);\n            }); */\n\n        /* if (collections.length === 0) {\n            collectionsLoaded(db.collections);\n        }   */\n\n        db.collections.forEach(item => {\n            if (item.id === +id) {\n                setCollectionName(item.name);\n            }\n        });\n\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"collection-page\">\n            <Container>\n                <h2 className=\"pictures__title title page-title\">{collectionName}</h2>\n                <CollectionsPictures collectionId={+id}/>            \n            </Container>        \n        </div>      \n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        darkHeader: state.darkHeader,\n    }\n};\n\nexport default connect(mapStateToProps, actions)(CollectionPage);","import React, { useState, useEffect } from 'react';\r\n\r\nimport './pictureInfo.scss';\r\n\r\nimport db from '../../db';\r\n\r\nconst PictureInfo = ({pictureId}) => {\r\n    const [picture, setPicture] = useState(null);\r\n\r\n    useEffect(() => {\r\n        db.pictures.forEach(item => {\r\n            if (item.id === +pictureId) {\r\n                setPicture(item);\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const pictureInfo = picture ? <Picture item={picture}/> : null;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {pictureInfo}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Picture = ({item}) => {\r\n    return (\r\n        <div key={item.id} className=\"picture-info\">\r\n            <div className=\"picture-info__img\">\r\n                <img src={item.image} alt={item.name}/>\r\n            </div>\r\n            <div className=\"picture-info__info\">\r\n                <div className=\"picture-info__title title page-title\">\r\n                    <h2 className=\"picture-info__name\">{item.author.trim()}</h2>\r\n                    <h3 className=\"picture-info__author\">«{item.name.trim()}»</h3>\r\n                </div>\r\n                <div className=\"picture-info__descr\">\r\n                    {item.description}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PictureInfo;","import React, {useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport '../styles/pages/itemPage.scss';\n\nimport * as actions from '../actions/actions';\nimport axiosInstance from '../axios';\nimport PictureInfo from '../components/pictureInfo/pictureInfo';\n\nconst ItemPage = ({toggleHeaderColor, setCurrentPicture, currentPicture}) => {\n    const {id} = useParams();\n\n    useEffect(() => {\n        toggleHeaderColor(true);\n\n        /* axiosInstance.get(`pictures?id=${id}`)\n            .then(res => {\n                setCurrentPicture(res.data);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n        \n        return function cleanup() {\n            setCurrentPicture([]);\n        }    */ \n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n    return (   \n        <div className=\"item-page\">\n            <PictureInfo pictureId={id}/>\n        </div>          \n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        darkHeader: state.darkHeader,\n        currentPicture: state.currentPicture\n    }\n};\n\nexport default connect(mapStateToProps, actions)(ItemPage);","import React, { useEffect } from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport './adminPayment.scss';\n\nimport * as actions from '../../../actions/actions';\nimport axiosInstance from '../../../axios';\n\nconst AdminPayment = ({exhibitions, exhibitionsRequsted, exhibitionsLoaded, exhibitionsError}) => {\n    \n    useEffect(() => {\n        /* if (exhibitions.length === 0) {\n            exhibitionsRequsted();\n\n            axiosInstance.get('exhibitions')\n                .then(res => {\n                    exhibitionsLoaded(res.data);\n                })\n                .catch((err) => {\n                    console.log(err);\n\n                    exhibitionsError();\n                });\n        } */\n    }, []);\n\n    const exhibitionsList = exhibitions.length !== 0 ? exhibitions.map((item) => {\n        return (\n            <Link to={`/payment-list/${item.id}`} key={item.id} className=\"payment-card\">\n                <div className=\"payment-card__id\">{item.id}</div>\n                <div className=\"payment-card__name\">{item.name}</div>\n                <div className=\"payment-card__price\">{item.price}</div>\n                <div className=\"payment-card__date\">\n                    {item.date}\n                </div>\n            </Link>\n        )\n    }) : null;\n\n    /* <div className=\"admin-payment\">\n            <div className=\"admin-payment__title\">\n                <div className=\"admin-payment__id\">ID</div>\n                <div className=\"admin-payment__name\">Name</div>\n                <div className=\"admin-payment__price\">Price</div>\n                <div className=\"admin-payment__date\">Date</div>\n            </div>\n            {exhibitionsList}\n        </div> */\n\n    return (\n        \n        <p>Заглушка</p>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        exhibitions: state.exhibitions,\n        isLoadingExhibitions: state.isLoadingExhibitions,\n        isErrorExhibitions: state.isErrorExhibitions\n    }\n};\n\nexport default connect(mapStateToProps, actions)(AdminPayment);","import React, {useState} from 'react';\nimport {\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n} from 'reactstrap';\n\nimport axiosInstance from '../../../../axios';\nimport icons from '../../../../icons/icons.svg';\n\nconst AddModalCollcetions = ({isOpen, toggle, setUpdate}) => {\n    const initialFormData = Object.freeze({\n        name: '',\n    });\n\n    const [collectionData, updateCollcetionData] = useState(initialFormData);\n    const [collectionImg, setCollectionImg] = useState(null);\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const [formValid, setFormValid] = useState(true);\n\n    // eslint-disable-next-line eqeqeq\n\n    const handleChange = (e) => {\n        const target = e.target;\n        // eslint-disable-next-line \n        if([target.name] == 'image') {\n            setCollectionImg({\n                image: target.files,\n            });\n        }\n\n        updateCollcetionData({\n            ...collectionData,\n            [target.name]: target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        setError(false);\n        setLoading(true);\n\n        let formData = new FormData();\n\n        if (!collectionImg) {\n            setLoading(false);\n            setFormValid(false);\n\n            setTimeout(() => setFormValid(true), 5000);\n        } else {\n            if ((collectionData.name.trim().length !== 0) && (collectionImg.image.length !== 0)) {\n                setFormValid(true);\n\n                formData.append('name', collectionData.name);\n                formData.append('image', collectionImg.image[0]);\n\n                axiosInstance.post(`categories/create`, formData)\n                    .then(() => {\n                        setLoading(false);\n\n                        setUpdate();\n                        toggle();\n                    })\n                    .catch(err => {\n                        setLoading(false);\n                        setError(true);\n\n                        console.log(err);\n                    });\n            } else {\n                setLoading(false);\n                setFormValid(false);\n\n                setTimeout(() => setFormValid(true), 5000);\n            }    \n        }\n    };\n\n    const loadingText = loading ? 'Загрузка...' : null;\n    const errorText = error ? 'Ошибка' : null;\n    const formErrorText = !formValid ? 'Необходимо заполнить все поля' : null;\n\n    const closeBtn = <svg className='close' onClick={toggle}><use href={`${icons}#close`}></use></svg>;\n\n    return (\n        <Modal isOpen={isOpen} toggle={toggle} className='custom-modal'>\n            <Form id='addCollcetionForm'>\n                <ModalHeader toggle={toggle} close={closeBtn}>Добавление коллекции</ModalHeader>\n                <ModalBody>\n                    <FormGroup>\n                        <Label for=\"addName\">Название</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"name\" \n                            id=\"addName\"\n                            onChange={handleChange}\n                            autoComplete='name'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exampleImage\">Изображение</Label>\n                        <Input \n                            accept='image/*'\n                            type=\"file\" \n                            name=\"image\" \n                            id=\"exampleImage\"\n                            onChange={handleChange} \n                        />\n                    </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <button \n                        onClick={handleSubmit}\n                        disabled\n                    >\n                        Добавить\n                    </button>\n                    {loadingText}\n                    {errorText}\n                    {formErrorText}\n                </ModalFooter>\n            </Form>\n        </Modal>\n    );\n};\n\nexport default AddModalCollcetions;","import React, { useState } from 'react';\nimport {\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n} from 'reactstrap';\n\nimport axiosInstance from '../../../../axios';\nimport icons from '../../../../icons/icons.svg';\n\nconst EditModalCollcetions = ({ isOpen, toggle, modalId, modalName, setUpdate}) => {\n    const initialFormData = Object.freeze({\n        name: '',\n    });\n\n    const [collectionData, updateCollectionData] = useState(initialFormData);\n    const [formImg, setFormImg] = useState(null);\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const handleChange = (e) => {\n        const target = e.target;\n        // eslint-disable-next-line \n        if ([target.name] == 'image') {\n            setFormImg({\n                image: target.files,\n            })\n        }\n\n        updateCollectionData({\n            ...collectionData,\n            [target.name]: target.value.trim(),\n        });\n    };\n\n    const handleSubmit = () => {\n        setError(false);\n        setLoading(true);\n\n        const formData = new FormData();\n        \n        const isImage = formImg ? formImg.image : null;\n        const imageLength = isImage ? formImg.image.length : 0;\n        let counter = 0;\n\n        for (let key in collectionData) {\n            if(collectionData[key]) {\n                formData.append(key, collectionData[key]);\n            }\n        }\n\n        if (formImg && imageLength) {\n            formData.append('image', formImg.image[0]);\n        }\n        // eslint-disable-next-line \n        for (let [name] of formData.keys()) {\n            counter++;\n        }\n\n        if (counter === 0) {\n            setLoading(false);\n\n            toggle();\n        } else {\n            axiosInstance.put(`categories/${modalId}`, formData)\n                .then(() => {\n                    setLoading(false);\n\n                    setUpdate();\n                    toggle();\n                })\n                .catch((err) => {\n                    setLoading(false);\n                    setError(true);\n\n                    console.log(err);\n                });\n        }     \n    };\n\n    const loadingText = loading ? 'Загрузка...' : null;\n    const errorText = error ? 'Ошибка' : null;\n\n    const closeBtn = <svg className='close' onClick={toggle}><use href={`${icons}#close`}></use></svg>;\n\n    return (\n        <Modal isOpen={isOpen} toggle={toggle} className='custom-modal'>\n            <Form id='editCollcetionForm'>\n                <ModalHeader toggle={toggle} close={closeBtn}>Изменеие \"{modalName}\"</ModalHeader>\n                <ModalBody>\n                    <FormGroup>\n                        <Label for=\"addName\">Название</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"name\" \n                            id=\"addName\"\n                            autoComplete='name'\n                            onChange={handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exampleImage\">Изображение</Label>\n                        <Input \n                            accept='image/*'\n                            type=\"file\" \n                            name=\"image\" \n                            id=\"exampleImage\" \n                            onChange={handleChange}\n                        />\n                    </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <button disabled onClick={handleSubmit}>Изменить</button>\n                    {loadingText}\n                    {errorText}\n                </ModalFooter>\n            </Form>\n        </Modal>\n    );\n};\n\nexport default EditModalCollcetions;","import React, {useState} from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n} from 'reactstrap';\n\nimport axiosInstance from '../../../axios';\nimport icons from '../../../icons/icons.svg';\n\nconst DeleteModal = ({isOpen, url, toggle, modalId, modalName, setUpdate, toggleRefresh}) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const handleSubmit = () => {\n        setError(false);\n        setLoading(true);\n\n        axiosInstance.delete(`${url}${modalId}/delete`)\n            .then(() => {\n                setLoading(false);\n\n                if (setUpdate) {\n                    setUpdate();\n                }\n        \n                if (toggleRefresh) {\n                    toggleRefresh();\n                }\n\n                toggle();\n            })\n            .catch((err) => {\n                setLoading(false);\n                setError(true);\n\n                if (err.response) {\n\t\t\t\t\tconsole.log(err.response.data);\n\t\t\t\t\tconsole.log(err.response.status);\n\t\t\t\t\tconsole.log(err.response.headers);\n\t\t\t\t}\n            });\n            \n    };\n\n    const loadingText = loading ? 'Загрузка...' : null;\n    const errorText = error ? 'Ошибка' : null;\n\n    const closeBtn = <svg className='close' onClick={toggle}><use href={`${icons}#close`}></use></svg>;\n\n    return (\n        <Modal isOpen={isOpen} toggle={toggle} className='custom-modal'>\n            <ModalHeader toggle={toggle} close={closeBtn}>Удаление</ModalHeader>\n            <ModalBody>\n                Удалить \"{modalName}\"?\n            </ModalBody>\n            <ModalFooter>\n                <button disabled onClick={handleSubmit}>Удалить</button>\n                {loadingText}\n                {errorText}\n            </ModalFooter>  \n        </Modal>\n    );\n};\n\nexport default DeleteModal;","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {Button} from 'reactstrap';\n\nimport * as actions from '../../../../actions/actions';\nimport axiosInstance from '../../../../axios';\nimport AddModalCollcetions from './addModalCollcetions';\nimport EditModalCollcetions from './editModalCollcetions';\nimport DeleteModal from '../deleteModal';\nimport Spinner from '../../../spinner/spinner';\nimport db from '../../../../db';\nimport icons from '../../../../icons/icons.svg';\n\nconst AdminCollections = ({collections, collectionsLoaded, isErrorCollcetions, isLoadingCollections, collectionsRequsted, collectionsError}) => {\n    const [addModal, setAddModal] = useState(false);\n    const [editModal, setEditModal] = useState(false);\n    const [deleteModal, setDeleteModal] = useState(false);\n\n    const [modalId, setModalId] = useState();\n    const [modalName, setModalName] = useState();\n\n    const [isUpdate, setIsUpdate] = useState(false);\n\n    const setUpdate = () => setIsUpdate(true);\n\n    const toggleAddModal = () => setAddModal(!addModal);\n    const toggleEditModal = () => setEditModal(!editModal);\n    const toggleDeleteModal = () => setDeleteModal(!deleteModal);\n\n    useEffect(() => {\n        if (collections.length === 0 || isUpdate) {\n            /* collectionsRequsted();\n\n            axiosInstance.get('categories')\n                .then(res => {\n                    collectionsLoaded(res.data);\n                    setIsUpdate(false);\n                })\n                .catch(() => {\n                    collectionsError();\n                    setIsUpdate(false);\n                }); */\n                collectionsLoaded(db.collections);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isUpdate]);\n\n    const handleClikEdit = (item) => {\n        setModalId(item.id);\n        setModalName(item.name);\n        toggleEditModal(); \n    };\n\n    const handleClikDelete = (item) => {\n        setModalId(item.id);\n        setModalName(item.name);\n        toggleDeleteModal(); \n    };\n\n    const collectionsList = collections.length !== 0 ? collections.map((item) => {\n        return (\n            <div key={item.id} className=\"admin-list__item\">\n                <div className=\"admin-list__item-id admin-list__item-id--collections\">{item.id}</div>\n                <div className=\"admin-list__item-name admin-list__item-name--collections\">{item.name}</div>\n                <div className=\"admin-list__item-control\">\n                    <svg \n                        onClick={() => handleClikEdit(item)} \n                        className=\"admin-list__item-edit\"\n                    >\n                        <use href={`${icons}#edit`}></use>\n                    </svg>\n                    <svg \n                        onClick={() => handleClikDelete(item)} \n                        className=\"admin-list__item-delete\"\n                    >\n                        <use href={`${icons}#delete`}></use>\n                    </svg>\n                </div>\n            </div>\n        );\n    }) : null;\n\n    const loadingContent = isLoadingCollections ? <LoadingCard/> : null;\n\n    const errorContent = isErrorCollcetions ? <ErrorCard/> : null;\n\n    return (\n        <>     \n            <div className=\"admin-list\">\n                <div className=\"admin-list__titles\">\n                    <div className=\"admin-list__id-title admin-list__id-title--collections\">ID</div>\n                    <div className=\"admin-list__name-title admin-list__name-title--collections\">Название</div>\n                </div>\n                {loadingContent}\n                {collectionsList}\n                {errorContent}\n            </div>\n            <button className='admin-add-btn' onClick={toggleAddModal}>Добавить коллекцию</button>\n            <AddModalCollcetions \n                isOpen={addModal} \n                toggle={toggleAddModal} \n                setUpdate={setUpdate}\n            />\n            <EditModalCollcetions \n                isOpen={editModal}\n                toggle={toggleEditModal} \n                setUpdate={setUpdate}\n                modalId={modalId}\n                modalName={modalName}\n            />\n            <DeleteModal\n                isOpen={deleteModal} \n                toggle={toggleDeleteModal}\n                setUpdate={setUpdate} \n                modalId={modalId}\n                modalName={modalName}\n                url={`categories/`}\n            />\n        </>\n        \n    );\n};\n\nconst LoadingCard = () => {\n    return (\n        <div className=\"loading-card\">\n            <Spinner/>\n        </div>\n    );\n};\n\nconst ErrorCard = () => {\n    return (\n        <div className=\"error-card\">\n            Error\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        collections: state.collections,\n        isLoadingCollections: state.loadingCollections,\n        isErrorCollcetions: state.isErrorCollcetions\n    }\n};\n\nexport default connect(mapStateToProps, actions)(AdminCollections);","import React, {useState} from 'react';\nimport {\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n} from 'reactstrap';\nimport {connect} from 'react-redux';\n\nimport axiosInstance from '../../../../axios';\nimport * as actions from '../../../../actions/actions';\nimport icons from '../../../../icons/icons.svg';\n\nconst AddModalPictures = ({collections, isLoadingCollections, isErrorCollcetions, isOpen, toggle, toggleRefresh}) => {\n\n    const initialFormData = Object.freeze({\n        name: '',\n        author: '',\n        description: '',\n        categories: [],\n    });\n\n    const [picturesData, updatePicturesData] = useState(initialFormData);\n    const [picturesImg, setPicturesImg] = useState(null);\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const [validForm, setValidForm] = useState(true);\n\n    const handleChange = (e) => {\n        const target = e.target;\n        // eslint-disable-next-line \n        if ([target.name] == 'image') {\n            setPicturesImg({\n                image: target.files,\n            });\n        }\n\n        updatePicturesData({\n            ...picturesData,\n            [target.name]: target.value.trim(),\n        });\n        \n    };\n\n    const checkValidation = (fieldName, value) => {\n\n        switch (fieldName){\n            case 'image': \n                if (!value) {\n                    setValidForm(false);\n                }\n                break;\n            default:\n                if (value.trim().length === 0) {\n                    setValidForm(false);\n                }\n                break;\n        }\n\n    };\n\n    const handleSubmit = (formId) => {\n        setError(false);\n        setLoading(true);\n\n        const form = document.querySelector(formId);\n        const formData = new FormData(form);\n\n        setValidForm(true);\n\n        const picturesImgLength = picturesImg ? picturesImg.image.length : null;\n\n        if (!picturesImg || !picturesImgLength || !formData.has('categories')) {\n            setLoading(false);\n            setValidForm(false); \n    \n            setTimeout(() => setValidForm(true), 5000);\n        } else {\n            formData.set('name', picturesData.name);\n            formData.set('author', picturesData.author);\n            formData.set('description', picturesData.description);\n            formData.set('image', picturesImg.image[0]);\n\n            for (let pair of formData.entries()) {\n                checkValidation(pair[0], pair[1]);\n            }\n\n            if (validForm) {\n                axiosInstance.post('pictures/create', formData)\n                .then(() => {\n                    setLoading(false);\n                    toggleRefresh();\n                    toggle();\n                })\n                .catch(err => {\n                    setLoading(false);\n                        setError(true);\n\n                        console.log(err);\n                });\n            } else {\n                setLoading(false);\n\n                setTimeout(() => setValidForm(true), 5000);\n            }\n        }\n    };\n\n    const collectionsOptions = collections ? collections.map((item) => {\n        return (\n            <option label={item.name} key={item.id}>{item.id}</option>\n        );\n    }) : null;\n\n    const loadingContent = isLoadingCollections ? 'Loading' : null;\n\n    const errorContent = isErrorCollcetions ? 'Error' : null;\n\n    const loadingText = loading ? 'Загрузка...' : null;\n    const errorText = error ? 'Ошибка' : null;\n    const formErrorText = !validForm ? 'Необходимо заполнить все поля' : null;\n\n    const closeBtn = <svg className='close' onClick={toggle}><use href={`${icons}#close`}></use></svg>;\n\n    return (\n        <Modal isOpen={isOpen} toggle={toggle} className='custom-modal'>\n            <Form id='addPictureForm'>\n                <ModalHeader toggle={toggle} close={closeBtn}>Добавление картины</ModalHeader>\n                <ModalBody>\n                <FormGroup>\n                    <Label for=\"picName\">Название</Label>\n                    <Input \n                        type=\"text\" \n                        name=\"name\" \n                        id=\"addName\"\n                        onChange={handleChange}\n                        autoComplete='name'\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"picAuthor\">Автор</Label>\n                    <Input \n                        type=\"text\" \n                        name=\"author\" \n                        id=\"picAuthor\"\n                        onChange={handleChange}\n                        autoComplete='author'\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"picDescription\">Описание</Label>\n                    <Input \n                        type=\"text\" \n                        name=\"description\" \n                        id=\"picDescription\"\n                        onChange={handleChange}\n                        autoComplete='description'\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"picImage\">Изображение</Label>\n                    <Input \n                        accept='image/*'\n                        type=\"file\" \n                        name=\"image\" \n                        id=\"picImage\"\n                        onChange={handleChange} \n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Label for='picCategories'>Категории</Label>\n                    <Input \n                        type=\"select\" \n                        name=\"categories\" \n                        id=\"picCategories\"\n                        multiple\n                        onChange={handleChange}\n                    >\n                        {loadingContent}\n                        {collectionsOptions} \n                        {errorContent}\n                    </Input>\n                </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <button disabled onClick={() => handleSubmit('#addPictureForm')}>Добавить</button>\n                    {loadingText}\n                    {errorText}\n                    {formErrorText}\n                </ModalFooter>\n            </Form>\n        </Modal>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        collections: state.collections,\n        isLoadingCollections: state.isLoadingCollections,\n        isErrorCollcetions: state.isErrorCollcetions\n    }\n};\n\nexport default connect(mapStateToProps, actions)(AddModalPictures);","import React, { useState} from 'react';\nimport {\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n} from 'reactstrap';\nimport {connect} from 'react-redux';\n\nimport axiosInstance from '../../../../axios';\nimport * as actions from '../../../../actions/actions';\nimport icons from '../../../../icons/icons.svg';\n\nconst EditModalPictures = ({ collections, isLoadingCollections, isErrorCollcetions, isOpen, toggle, modalId, toggleRefresh, modalName}) => {\n\n    const initialFormData = Object.freeze({\n        name: '',\n        author: '',\n        description: '',\n    });\n\n    const [pictureData, updatePictureData] = useState(initialFormData);\n    const [pictureImg, setPictureImg] = useState(null);\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const handleChange = (e) => {\n        const target = e.target;\n        // eslint-disable-next-line \n        if([target.name] == 'image') {\n            setPictureImg({\n                image: target.files\n            });\n        }\n\n        updatePictureData({\n            ...pictureData,\n            [target.name]: target.value.trim()\n        });\n    };\n\n    const handleSubmit = (formId) => {\n        setError(false);\n        setLoading(true);\n\n        const form = document.querySelector(formId);\n        const formData = new FormData(form);\n\n        let counter = 0;\n        const isImage = pictureImg ? pictureImg.image : null;\n        const imageLength = isImage ? pictureImg.image.length : 0;\n\n        for (let key in pictureData) {\n            if (!pictureData[key]) {\n                formData.delete(key);\n            }\n        }\n\n        if (!pictureImg || !imageLength) {\n            formData.delete('image');\n        }\n        // eslint-disable-next-line \n        for (let [name] of formData.keys()) {\n            counter++;\n        }\n\n        if (counter === 0) {\n            setLoading(false);\n\n            toggle();\n        } else {\n            axiosInstance.put(`pictures/${modalId}`, formData)\n                .then(() => {\n                    setLoading(false);\n\n                    toggleRefresh();\n                    toggle();\n                })\n                .catch((err) => {\n                    setLoading(false);\n                    setError(true);\n\n                    console.log(err);\n                });\n        }\n    };\n\n    const collectionsOptions = collections ? collections.map((item) => {\n        return (\n            <option label={item.name} key={item.id}>{item.id}</option>\n        );\n    }) : null;\n\n    const loadingText = loading ? 'Загрузка...' : null;\n    const errorText = error ? 'Ошибка' : null;\n\n    const loadingContent = isLoadingCollections ? 'Loading' : null;\n\n    const errorContent = isErrorCollcetions ? 'Error' : null;\n\n    const closeBtn = <svg className='close' onClick={toggle}><use href={`${icons}#close`}></use></svg>;\n\n    return (\n        <Modal isOpen={isOpen} toggle={toggle} className='custom-modal'>\n            <Form id='editPictureForm'>\n                <ModalHeader toggle={toggle} close={closeBtn}>Изменеие \"{modalName}\"</ModalHeader>\n                <ModalBody>\n                    <FormGroup>\n                        <Label for=\"picEditName\">Название</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"name\" \n                            id=\"addEditName\"\n                            autoComplete='name'\n                            onChange={handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"picEditAuthor\">Автор</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"author\" \n                            id=\"picEditAuthor\"\n                            autoComplete='author'\n                            onChange={handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"picEditDescription\">Описание</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"description\" \n                            id=\"picEditDescription\"\n                            autoComplete='description'\n                            onChange={handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"picEditImage\">Изображение</Label>\n                        <Input \n                            accept='image/*'\n                            type=\"file\" \n                            name=\"image\" \n                            id=\"picEditImage\"\n                            onChange={handleChange} \n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for='picEditCategories'>Категории</Label>\n                        <Input \n                            type=\"select\" \n                            name=\"categories\" \n                            id=\"picEditCategories\"\n                            onChange={handleChange}\n                            multiple\n                        >\n                            {loadingContent}\n                            {collectionsOptions}  \n                            {errorContent}\n                        </Input>\n                    </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <button disabled onClick={() => {\n                        handleSubmit('#editPictureForm');\n                    }}>Изменить</button>\n                    {loadingText}\n                    {errorText}\n                </ModalFooter>\n            </Form>\n        </Modal>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        collections: state.collections,\n        isLoadingCollections: state.isLoadingCollections,\n        isErrorCollcetions: state.isErrorCollcetions\n    }\n};\n\nexport default connect(mapStateToProps, actions)(EditModalPictures);","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {Button} from 'reactstrap';\n\nimport * as actions from '../../../../actions/actions';\nimport axiosInstance from '../../../../axios';\nimport AddModalPictures from './addModalPictures';\nimport EditModalPictures from './editModalPictures';\nimport DeleteModal from '../deleteModal';\nimport Spinner from '../../../spinner/spinner';\nimport db from '../../../../db';\nimport icons from '../../../../icons/icons.svg';\n\nconst AdminPictures = ({pictures, picturesLoaded, isLoadingPictures, isErrorPictures, picturesRequsted, picturesError}) => {\n    const [addModal, setAddModal] = useState(false);\n    const [editModal, setEditModal] = useState(false);\n    const [deleteModal, setDeleteModal] = useState(false);\n\n    const [modalId, setModalId] = useState();\n    const [modalName, setModalName] = useState();\n\n    const [refresh, setRefresh] = useState(false);\n\n    const toggleRefresh = () => setRefresh(!refresh);\n\n    const toggleAddModal = () => setAddModal(!addModal);\n    const toggleEditModal = () => setEditModal(!editModal);\n    const toggleDeleteModal = () => setDeleteModal(!deleteModal);\n\n    useEffect(() => {\n        /* picturesRequsted();\n\n        axiosInstance.get('pictures')\n            .then(res => {\n                picturesLoaded(res.data);\n            })\n            .catch(() => {\n                picturesError();\n            }); */\n        picturesLoaded(db.pictures);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [refresh]);\n\n    const handleClikEdit = (item) => {\n        setModalId(item.id);\n        setModalName(item.name);\n        toggleEditModal(); \n    };\n\n    const handleClikDelete = (item) => {\n        setModalId(item.id);\n        setModalName(item.name);\n        toggleDeleteModal(); \n    };\n\n    const picturesList = pictures ? pictures.map(item => {\n        const itemCategories = [];\n\n        item.categories.forEach(el => {\n            db.collections.forEach(collection => {\n                if (el === collection.id) {\n                    itemCategories.push(collection.name);\n                }\n            });\n        });\n\n        return (\n            <div key={item.id} className=\"admin-list__item\">\n                <div className=\"admin-list__item-id admin-list__item-id\">{item.id}</div>\n                <div className=\"admin-list__item-name admin-list__item-name--pictures\">{item.name}</div>\n                <div className=\"admin-list__item-categories admin-list__item-categories--pictures\">{itemCategories.join(', ')}</div>\n                <div className=\"admin-list__item-control\">\n                    <svg \n                        onClick={() => handleClikEdit(item)} \n                        className=\"admin-list__item-edit\"\n                    >\n                        <use href={`${icons}#edit`}></use>\n                    </svg>\n                    <svg \n                        onClick={() => handleClikDelete(item)} \n                        className=\"admin-list__item-delete\"\n                    >\n                        <use href={`${icons}#delete`}></use>\n                    </svg>\n                </div>\n            </div>\n        );\n    }) : null;\n\n    const loadingContent = isLoadingPictures ? <LoadingCard/> : null;\n\n    const errorContent = isErrorPictures ? <ErrorCard/> : null;\n\n    return (\n        <>  \n            <div className=\"admin-list\">\n                <div className=\"admin-list__titles\">\n                    <div className=\"admin-list__id-title\">ID</div>\n                    <div className=\"admin-list__name-title admin-list__name-title--pictures\">Название</div>\n                    <div className=\"admin-list__categories-title admin-list__categories-title--pictures\">Категории</div>\n                </div>\n                {loadingContent}\n                {picturesList}\n                {errorContent}\n            </div>\n            <button className='admin-add-btn' onClick={toggleAddModal}>Добавить картину</button>\n            <AddModalPictures \n                isOpen={addModal} \n                toggle={toggleAddModal} \n                toggleRefresh={toggleRefresh}\n            />\n            <EditModalPictures\n                isOpen={editModal} \n                toggle={toggleEditModal} \n                toggleRefresh={toggleRefresh} \n                modalId={modalId}\n                modalName={modalName}\n            />\n            <DeleteModal\n                isOpen={deleteModal} \n                toggle={toggleDeleteModal} \n                toggleRefresh={toggleRefresh}\n                modalId={modalId}\n                modalName={modalName}\n                url={`pictures/`}\n            />\n        </>\n    );\n};\n\nconst LoadingCard = () => {\n    return (\n        <div className=\"loading-card\">\n            <Spinner/>\n        </div>\n    );\n};\n\nconst ErrorCard = () => {\n    return (\n        <div className=\"error-card\">\n            Error\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        pictures: state.pictures,\n        isLoadingPictures: state.isLoadingPictures,\n        isErrorPictures: state.isErrorPictures\n    }\n};\n\nexport default connect(mapStateToProps, actions)(AdminPictures);","import React, {useState} from 'react';\nimport {\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n} from 'reactstrap';\nimport {connect} from 'react-redux';\n\nimport axiosInstance from '../../../../axios';\nimport * as actions from '../../../../actions/actions';\nimport icons from '../../../../icons/icons.svg';\n\nconst AddModalExhibitions = ({collections, isLoadingCollections, isErrorCollcetions, isOpen, toggle,  setUpdate}) => {\n    const initialFormData = Object.freeze({\n        name: '',\n        description: '',\n        date: '',\n        time: '',\n        price: '',\n        address: '',\n        weekday: '',\n        categories: [],\n    });\n\n    const [exhibitionData, updateExhibitionData] = useState(initialFormData);\n    const [exhibitionImg, setExhibitionImg] = useState(null);\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const [validForm, setValidForm] = useState(true);\n\n    const handleChange = (e) => {\n        const target = e.target;\n        // eslint-disable-next-line \n        if ([target.name] == 'image') {\n            setExhibitionImg({\n                image: target.files,\n            });\n        }\n\n        updateExhibitionData({\n            ...exhibitionData,\n            [target.name]: target.value.trim(),\n        });\n    };\n\n    const checkValidation = (fieldName, value) => {\n\n        switch (fieldName){\n            case 'image': \n                if (!value) {\n                    setValidForm(false);\n                }\n                break;\n            default:\n                if (value.trim().length === 0) {\n                    setValidForm(false);\n                }\n                break;\n        }\n\n    };\n\n    const handleSubmit = (formId) => {\n        setError(false);\n        setLoading(true);\n\n        const form = document.querySelector(formId)\n        const formData = new FormData(form);\n\n        setValidForm(true);\n\n        const exhibitionImgLength = exhibitionImg ? exhibitionImg.image.length : null;\n\n        if (!exhibitionImg  || !exhibitionImgLength || !formData.has('categories')) {\n            setLoading(false);\n            setValidForm(false); \n    \n            setTimeout(() => setValidForm(true), 5000);\n        } else {\n            formData.set('name', exhibitionData.name);\n            formData.set('description', exhibitionData.description);\n            formData.set('image', exhibitionImg.image[0]);\n            formData.set('date', exhibitionData.date);\n            formData.set('time', exhibitionData.time);\n            formData.set('price', exhibitionData.price);\n            formData.set('address', exhibitionData.address);\n            formData.set('weekday', exhibitionData.weekday);\n\n            for (let pair of formData.entries()) {\n                checkValidation(pair[0], pair[1]);\n            } \n\n            if (validForm) {\n                axiosInstance.post('exhibitions/create', formData)\n                    .then(() => {\n                        setLoading(false);\n                        setUpdate();\n                        toggle();\n                    })\n                    .catch(err => {\n                        setLoading(false);\n                        setError(true);\n\n                        console.log(err);\n                    });\n            } else {\n                setLoading(false);\n                setTimeout(() => setValidForm(true), 5000);\n            }\n        }        \n    };\n\n    const collectionsOptions = collections.length !== 0 ?  collections.map((item) => {\n        return (\n            <option label={item.name} key={item.id}>{item.id}</option>\n        );\n    }) : null;\n\n    const loadingContent = isLoadingCollections ? 'Loading' : null;\n\n    const errorContent = isErrorCollcetions ? 'Error' : null;\n\n    const loadingText = loading ? 'Загрузка...' : null;\n    const errorText = error ? 'Ошибка' : null;\n    const formErrorText = !validForm ? 'Необходимо заполнить все поля' : null;\n\n    const closeBtn = <svg className='close' onClick={toggle}><use href={`${icons}#close`}></use></svg>;\n\n    return (\n        <Modal isOpen={isOpen} toggle={toggle} className='custom-modal'>\n            <Form id='addExhibitionsForm'>\n                <ModalHeader toggle={toggle} close={closeBtn}>Добавление выставки</ModalHeader>\n                <ModalBody>\n                    <FormGroup>\n                        <Label for=\"exhName\">Название</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"name\" \n                            id=\"exhName\"\n                            onChange={handleChange}\n                            autoComplete='name'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exhDescription\">Описание</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"description\" \n                            id=\"exhDescription\"\n                            onChange={handleChange}\n                            autoComplete='description'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exhImage\">Изображение</Label>\n                        <Input \n                            accept='image/*'\n                            type=\"file\" \n                            name=\"image\" \n                            id=\"exhImage\" \n                            onChange={handleChange} \n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exhDate\">Дата</Label>\n                        <Input \n                            type=\"date\" \n                            name=\"date\" \n                            id=\"exhDate\"\n                            onChange={handleChange}\n                            autoComplete='date'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exhTime\">Время</Label>\n                        <Input \n                            type=\"time\" \n                            name=\"time\" \n                            id=\"exhTime\"\n                            onChange={handleChange}\n                            autoComplete='time'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exhPrice\">Цена</Label>\n                        <Input \n                            type=\"number\" \n                            name=\"price\" \n                            id=\"exhPrice\"\n                            onChange={handleChange}\n                            autoComplete='price'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exhAddr\">Адрес</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"address\" \n                            id=\"exhAddr\"\n                            onChange={handleChange}\n                            autoComplete='address'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exhCateg\">Категории</Label>\n                        <Input \n                            type=\"select\" \n                            name=\"categories\" \n                            id=\"exhCateg\"\n                            multiple\n                        >   \n                            {loadingContent}\n                            {collectionsOptions}  \n                            {errorContent}\n                        </Input>\n                    </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <button disabled onClick={() => {\n                        handleSubmit('#addExhibitionsForm');\n                    }}>Добавить</button>\n                    {loadingText}\n                    {errorText}\n                    {formErrorText}\n                </ModalFooter>\n            </Form>\n        </Modal>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        collections: state.collections,\n        isLoadingCollections: state.isLoadingCollections,\n        isErrorCollcetions: state.isErrorCollcetions\n    }\n};\n\nexport default connect(mapStateToProps, actions)(AddModalExhibitions);","import React, {/* useEffect, */ useState} from 'react';\nimport {\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n} from 'reactstrap';\nimport {connect} from 'react-redux';\n\nimport axiosInstance from '../../../../axios';\nimport * as actions from '../../../../actions/actions';\nimport icons from '../../../../icons/icons.svg';\n\nconst EditModalExhibitions = ({collections,  isLoadingCollections, isErrorCollcetions, isOpen, toggle, modalId,  modalName, setUpdate}) => {\n    const initialFormData = Object.freeze({\n        name: '',\n        description: '',\n        date: '',\n        time: '',\n        price: '',\n        address: '',\n        weekday: '',\n        categories: [],\n    });\n\n    const [exhibitionData, updateExhibitionData] = useState(initialFormData);\n    const [exhibitionImg, setExhibitionImg] = useState(null);\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const handleChange = (e) => {\n        const target = e.target;\n        \n        // eslint-disable-next-line \n        if([target.name] == 'image') {\n            setExhibitionImg({\n                image: target.files\n            });\n        }\n\n        if ([target.value] == 'weekday') {\n            updateExhibitionData({\n                ...exhibitionData,\n                [target.name]: +target.value.trim()\n            })\n        }\n\n        console.log(target.value);\n        console.log(typeof target.value);\n\n        updateExhibitionData({\n            ...exhibitionData,\n            [target.name]: target.value.trim()\n        });\n    };\n\n    const handleSubmit = (formId) => {\n        setError(false);\n        setLoading(true);\n\n        const form = document.querySelector(formId);\n        const formData = new FormData(form);\n\n        let counter = 0;\n        const isImage = exhibitionImg ? exhibitionImg.image : null;\n        const imageLength = isImage ? exhibitionImg.image.length : 0;\n\n        for (let key in exhibitionData) {\n\n            if (!exhibitionData[key]) {\n                formData.delete(key);\n            }\n        }\n\n        if (!exhibitionImg || !imageLength) {\n            formData.delete('image');\n        }\n\n        // eslint-disable-next-line \n        for (let [name] of formData.keys()) {\n            counter++;\n        }\n\n        if (counter === 0) {\n            setLoading(false);\n\n            toggle();\n        } else {\n            axiosInstance.put(`exhibitions/${modalId}`, formData)\n                .then(() => {\n                    setUpdate();\n                    setLoading(false);\n\n                    toggle();\n                })\n                .catch(err => {\n                    setLoading(false);\n                    setError(true);\n\n                    console.log(err);\n                });\n        }\n    };\n\n    const collectionsOptions = collections ? collections.map((item) => {\n        return (\n            <option label={item.name} key={item.id}>{item.id}</option>\n        );\n    }) : null;\n\n    const loadingText = loading ? 'Загрузка...' : null;\n    const errorText = error ? 'Ошибка' : null;\n\n    const loadingContent = isLoadingCollections ? 'Loading' : null;\n\n    const errorContent = isErrorCollcetions ? 'Error' : null;\n\n    const closeBtn = <svg className='close' onClick={toggle}><use href={`${icons}#close`}></use></svg>;\n\n    return (\n        <Modal isOpen={isOpen} toggle={toggle} className='custom-modal'>\n            <Form id='editExhibitionsForm'>\n                <ModalHeader toggle={toggle} close={closeBtn}>Изменеие \"{modalName}\"</ModalHeader>\n                <ModalBody>\n                    <FormGroup>\n                        <Label for=\"exhEditName\">Название</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"name\" \n                            id=\"exhEditName\"\n                            onChange={handleChange}\n                            autoComplete='name'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exhEditDescription\">Описание</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"description\" \n                            id=\"exhEditDescription\"\n                            onChange={handleChange}\n                            autoComplete='description'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exhEditImage\">Изображение</Label>\n                        <Input \n                            accept='image/*'\n                            type=\"file\" \n                            name=\"image\" \n                            id=\"exhEditImage\" \n                            onChange={handleChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exhEditDate\">Дата</Label>\n                        <Input \n                            type=\"date\" \n                            name=\"date\" \n                            id=\"exhEditDate\"\n                            onChange={handleChange}\n                            autoComplete='date'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exhEditTime\">Время</Label>\n                        <Input \n                            type=\"time\" \n                            name=\"time\" \n                            id=\"exhEditTime\"\n                            onChange={handleChange}\n                            autoComplete='time'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exhEditPrice\">Цена</Label>\n                        <Input \n                            type=\"number\" \n                            name=\"price\" \n                            id=\"exhEditPrice\"\n                            onChange={handleChange}\n                            autoComplete='price'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exhEditAddr\">Адрес</Label>\n                        <Input \n                            type=\"text\" \n                            name=\"address\" \n                            id=\"exhEditAddr\"\n                            onChange={handleChange}\n                            autoComplete='address'\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for='exhEditCategories'>Категории</Label>\n                        <Input \n                            type=\"select\" \n                            name=\"categories\" \n                            id=\"exhEditCategories\"\n                            multiple\n                        >   \n                            {loadingContent}\n                            {collectionsOptions}\n                            {errorContent}\n                        </Input>\n                    </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <button disabled onClick={() => {\n                        handleSubmit('#editExhibitionsForm');\n                    }}>Изменить</button>\n                    {loadingText}\n                    {errorText}\n                </ModalFooter>\n            </Form>\n        </Modal>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        collections: state.collections,\n        isLoadingCollections: state.isLoadingCollections,\n        isErrorCollcetions: state.isErrorCollcetions\n    }\n};\n\n\nexport default connect(mapStateToProps, actions)(EditModalExhibitions);","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {Button} from 'reactstrap';\n\nimport * as actions from '../../../../actions/actions';\nimport axiosInstance from '../../../../axios';\nimport AddModalExhibitions from './addModalExhibitions';\nimport EditModalExhibitions from './editModalExhibitions';\nimport DeleteModal from '../deleteModal';\nimport Spinner from '../../../spinner/spinner';\nimport db from '../../../../db';\nimport icons from '../../../../icons/icons.svg';\nimport {setMonthName} from '../../../../dateTransform/dateTransform';\n\nconst AdminExhibitions = ({exhibitions, exhibitionsLoaded, exhibitionsRequsted, exhibitionsError, isLoadingExhibitions, isErrorExhibitions}) => {\n    const [addModal, setAddModal] = useState(false);\n    const [editModal, setEditModal] = useState(false);\n    const [deleteModal, setDeleteModal] = useState(false);\n\n    const [modalId, setModalId] = useState();\n    const [modalName, setModalName] = useState();\n\n    const [isUpdate, setIsUpdate] = useState(false);\n\n    const setUpdate = () => setIsUpdate(true);\n\n    const toggleAddModal = () => setAddModal(!addModal);\n    const toggleEditModal = () => setEditModal(!editModal);\n    const toggleDeleteModal = () => setDeleteModal(!deleteModal);\n\n    useEffect(() => {\n        if (exhibitions.length === 0 || isUpdate) {\n            /* exhibitionsRequsted();\n\n            axiosInstance.get('exhibitions')\n                .then(res => { \n                    exhibitionsLoaded(res.data);\n                    setIsUpdate(false);\n                })\n                .catch(() => {\n                    exhibitionsError();\n                    setIsUpdate(false);\n                }); */\n\n            exhibitionsLoaded(db.exhibitions);\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isUpdate]);\n\n    const handleClikEdit = (item) => {\n        setModalId(item.id);\n        setModalName(item.name);\n        toggleEditModal(); \n    };\n\n    const handleClikDelete = (item) => {\n        setModalId(item.id);\n        setModalName(item.name);\n        toggleDeleteModal(); \n    };\n\n    const exhibitionsList = exhibitions.length !== 0 ? exhibitions.map((item) => {\n        const itemCategories = [];\n\n        item.categories.forEach(el => {\n            db.collections.forEach(collection => {\n                if (el === collection.id) {\n                    itemCategories.push(collection.name);\n                }\n            });\n        });\n\n        const date = new Date(item.date);\n        const dateData = {\n            day: date.getDate(),\n            month: setMonthName(date.getMonth()),\n            year: date.getFullYear(),\n        };\n\n        return (\n            <div key={item.id} className=\"admin-list__item\">\n                <div className=\"admin-list__item-id admin-list__item-id\">{item.id}</div>\n                <div className=\"admin-list__item-name admin-list__item-name--exhibitions\">{item.name}</div>\n                <div className=\"admin-list__item-categories admin-list__item-categories--exhibitions\">{itemCategories.join(', ')}</div>\n                <div className=\"admin-list__item-date admin-list__item-date--exhibitions\">{dateData.day} {dateData.month} {dateData.year}<br/>{item.time}</div>\n                <div className=\"admin-list__item-price admin-list__item-price--exhibitions\">{item.price} руб.</div>\n                <div className=\"admin-list__item-control\">\n                    <svg \n                        onClick={() => handleClikEdit(item)} \n                        className=\"admin-list__item-edit\"\n                    >\n                        <use href={`${icons}#edit`}></use>\n                    </svg>\n                    <svg \n                        onClick={() => handleClikDelete(item)} \n                        className=\"admin-list__item-delete\"\n                    >\n                        <use href={`${icons}#delete`}></use>\n                    </svg>\n                </div>\n            </div>\n        );\n    }) : null;\n\n    const loadingContent = isLoadingExhibitions ? <LoadingCard/> : null;\n\n    const errorContent = isErrorExhibitions ? <ErrorCard/> : null;\n\n    return (\n        <>  \n            <div className=\"admin-list\">\n                <div className=\"admin-list__titles\">\n                    <div className=\"admin-list__id-title\">ID</div>\n                    <div className=\"admin-list__name-title admin-list__name-title--exhibitions\">Название</div>\n                    <div className=\"admin-list__categories-title admin-list__categories-title--exhibitions\">Категории</div>\n                    <div className=\"admin-list__date-title admin-list__date-title--exhibitions\">Дата</div>\n                    <div className=\"admin-list__price-title admin-list__price-title--exhibitions\">Стоимость</div>\n                </div>\n                {loadingContent}\n                {exhibitionsList}\n                {errorContent}\n            </div>\n            <button className='admin-add-btn ' onClick={toggleAddModal}>Добавить выставку</button>\n            <AddModalExhibitions \n                isOpen={addModal} \n                toggle={toggleAddModal} \n                setUpdate={setUpdate}\n            />\n            <EditModalExhibitions \n                isOpen={editModal} \n                toggle={toggleEditModal} \n                setUpdate={setUpdate} \n                modalId={modalId}\n                modalName={modalName}\n            />\n            <DeleteModal\n                isOpen={deleteModal} \n                toggle={toggleDeleteModal} \n                setUpdate={setUpdate}\n                modalId={modalId}\n                modalName={modalName}\n                url={`exhibitions/`}\n            />\n        </>\n        \n    );\n};\n\nconst LoadingCard = () => {\n    return (\n        <div className=\"loading-card\">\n            <Spinner/>\n        </div>\n    );\n};\n\nconst ErrorCard = () => {\n    return (\n        <div className=\"error-card\">\n            Error\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        exhibitions: state.exhibitions,\n        isLoadingExhibitions: state.isLoadingExhibitions,\n        isErrorExhibitions: state.isErrorExhibitions\n    }\n};\n\nexport default connect(mapStateToProps, actions)(AdminExhibitions);","import React, {useState} from 'react';\nimport { \n    TabContent, \n    TabPane, \n    Nav, \n    NavItem, \n    NavLink \n} from 'reactstrap';\nimport classnames from 'classnames';\n\nimport './adminControl.scss';\n\nimport AdminCollections from './collcetions/adminCollections';\nimport AdminPictures from './pictures/adminPictures';\nimport AdminExhibitions from './exhibitions/adminExhibitions';\n\nconst AdminControl = () => {\n    const [activeTab, setActiveTab] = useState('1');\n\n    const toggle = tab => {\n        if(activeTab !== tab) setActiveTab(tab);\n    };\n\n    return (\n        <div className='admin-control'>\n            <Nav className='second-tabs' tabs>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === '1' })}\n                        onClick={() => { toggle('1'); }}\n                    >\n                        Коллекции\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === '2' })}\n                        onClick={() => { toggle('2'); }}\n                    >\n                        Выставки\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === '3' })}\n                        onClick={() => { toggle('3'); }}\n                    >\n                        Картины\n                    </NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"1\">\n                    <AdminCollections/>\n                </TabPane>\n                <TabPane tabId=\"2\">\n                    <AdminExhibitions/>\n                </TabPane>\n                <TabPane tabId=\"3\">\n                    <AdminPictures/>\n                </TabPane>\n            </TabContent>\n        </div>\n    )\n};\n\nexport default AdminControl;","import React, {useState} from 'react';\nimport { \n    TabContent, \n    TabPane, \n    Nav, \n    NavItem, \n    NavLink \n} from 'reactstrap';\nimport classnames from 'classnames';\n\nimport './admin.scss';\n\nimport AdminPayment from './adminPayment/adminPayment';\nimport AdminControl from './adminControl/adminControl';\n\nconst Admin = () => {\n    const [activeTab, setActiveTab] = useState('1');\n\n    const toggle = tab => {\n        if(activeTab !== tab) setActiveTab(tab);\n    };\n\n    return (\n        <div className='container tabs-wrapper'>\n            <Nav className='first-tabs' tabs>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === '1' })}\n                        onClick={() => { toggle('1'); }}\n                    >\n                        Управление контентом\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === '2' })}\n                        onClick={() => { toggle('2'); }}\n                    >\n                        Билеты на выставки\n                    </NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent className='first-tabs-content' activeTab={activeTab}>\n                <TabPane tabId=\"1\">\n                    <AdminControl/>\n                </TabPane>\n                <TabPane tabId=\"2\">\n                    <AdminPayment/>\n                </TabPane>\n            </TabContent>\n        </div>\n    );\n};\n\nexport default Admin;","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport * as actions from '../actions/actions';\nimport Admin from '../components/admin/admin';\n\nconst AdminPage = ({toggleHeaderColor}) => {\n    useEffect(() => {\n        toggleHeaderColor(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return ( \n        <div className=\"admin-page\">\n            <Admin/>\n        </div>               \n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        darkHeader: state.darkHeader\n    }\n};\n\nexport default connect(mapStateToProps, actions)(AdminPage);","import React from 'react';\n\nconst FormErrors = ({formErrors, typeFor}) => {\n    \n    return (\n        <div className=\"form-errors\">\n            {formErrors[typeFor]}\n        </div>\n    );\n\n};\n\nexport default FormErrors;","import React, {useState} from 'react';\nimport {\n    Form,\n    ModalBody,\n    FormGroup,\n    Label,\n    Input,\n    ModalFooter,\n} from 'reactstrap';\nimport {useHistory} from 'react-router-dom';\n\nimport axiosInstance from '../../../axios';\nimport FormErrors from '../formErrors/formErrors';\n\nconst LogIn = ({toggle, setAutorization}) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const initialFormData = Object.freeze({\n        email: '',\n        password: '',\n    });\n\n    const history = useHistory();\n\n    const [formData, updateFormData] = useState(initialFormData);\n\n    const [formErrors, setFormErrors] = useState(initialFormData);\n\n    const [emailValid, setEmailValid] = useState(false);\n    const [passValid, setPassValid] = useState(false);\n    const [formValid, setFormValid] = useState(false);\n\n    const validateField = (field, input=false) => {\n        let fieldName = field.name,\n            value = field.value;\n\n        let emailValidate = emailValid,\n            passwordValidate = passValid;\n\n        switch (fieldName) {\n            case 'email':\n                emailValidate = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n                setEmailValid(emailValidate);\n\n                if(!input) {\n                    setFormErrors({\n                        ...formErrors,\n                        email: emailValidate ? '' : 'Некорректный адрес',\n                    });\n                    \n                    if (emailValidate) {\n                        field.classList.remove('attention');\n                    } else {\n                        field.classList.add('attention');\n                    }\n                }\n                \n                break;\n            case 'password': \n                passwordValidate = value.length >= 4;\n                setPassValid(passwordValidate);\n\n                if(!input) {\n                    setFormErrors({\n                        ...formErrors,\n                        password:  passwordValidate ? '' : 'Слишком короткий пароль',\n                    });\n\n                    if (passValid) {\n                        field.classList.remove('attention');\n                    } else {\n                        field.classList.add('attention');\n                    }\n                }\n                \n                break;\n            default: \n                break;\n        }\n\n        setFormValid(emailValidate && passwordValidate);\n    };\n    \n    const handleInput = (e) => {\n        const target = e.target;\n\n        validateField(target, true);\n\n        updateFormData({\n            ...formData,\n            [target.name]: target.value.trim(),\n        });\n    }\n\n    const handleBlur = (e) => {\n        const target = e.target;\n\n        validateField(target);\n\n        updateFormData({\n            ...formData,\n            [target.name]: target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        setError(false);\n        setLoading(true);\n\n        if (formValid) {\n            axiosInstance\n                .post('token/', {\n                    email: formData.email,\n                    password: formData.password,\n                })\n                .then((res) => {\n                    localStorage.setItem('access_token', res.data.access);\n                    localStorage.setItem('refresh_token', res.data.refresh);\n\n                    axiosInstance.defaults.headers['Authorization'] =\n                        'Bearer ' + localStorage.getItem('access_token');\n                    history.push('/');\n\n                    setLoading(false);\n                    setAutorization(true);\n                    toggle();\n                })\n                .catch((err) => {\n                    console.log(err);\n\n                    setLoading(false);\n                    setError(true);\n\n                    setTimeout(() => {\n                        setError(false);\n                    }, 5000);\n                });\n        }\n        \n    };\n\n    const loadingText = loading ? 'Загрузка...' : null;\n    const errorText = error ? 'Ошибка' : null;\n\n    return (\n        <Form>\n            <ModalBody>\n                <FormGroup>\n                    <Input \n                        type='email' \n                        name='email' \n                        id='loginInput'\n                        onBlur={handleBlur}\n                        onInput={handleInput}\n                        autoComplete='email'\n                        placeholder='Почта'\n                    />\n                    <FormErrors typeFor={'email'} formErrors={formErrors}/>\n                </FormGroup>\n                <FormGroup>\n                    <Input \n                        type='password' \n                        name='password' \n                        id='passwordInput'\n                        autoComplete=\"current-password\"\n                        onBlur={handleBlur}\n                        onInput={handleInput}\n                        placeholder='Пароль'\n                    />\n                    <FormErrors typeFor={'password'} formErrors={formErrors}/>\n                </FormGroup>\n                \n            </ModalBody>\n            <ModalFooter>\n                <button \n                        type='submit'\n                        onClick={handleSubmit}\n                        disabled={!formValid}\n                    >\n                        Войти\n                    </button>\n                <span className=\"error-text\" style={{display: `${errorText ? '' : 'none'}`}}>{errorText}</span>\n                <span className=\"loading-text\" style={{display: `${loadingText ? '' : 'none'}`}}>{loadingText}</span>\n            </ModalFooter>\n        </Form>\n    );\n};\n\nexport default LogIn;","import React, {useState} from 'react';\nimport {\n    Form,\n    ModalBody,\n    FormGroup,\n    Label,\n    Input,\n    ModalFooter,\n    Button,\n} from 'reactstrap';\nimport {useHistory} from 'react-router-dom';\n\nimport axiosInstance from '../../../axios';\nimport FormErrors from '../formErrors/formErrors';\n\nconst Register = ({toggle, setAutorization}) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const [isValidPass, setIsValidPass] = useState(null);\n\n    const history = useHistory();\n\n    const initialFormData = Object.freeze({\n        email: '',\n        password: '',\n        checkPassword: '',\n    });\n\n    const [formErrors, setFormErrors] = useState(initialFormData);\n\n    const [emailValid, setEmailValid] = useState(false);\n    const [passValid, setPassValid] = useState(false);\n    const [formValid, setFormValid] = useState(false);\n\n    const [formData, updateFormData] = useState(initialFormData);\n\n    const validateField = (field, input=false) => {\n        let fieldName = field.name,\n            value = field.value;\n\n        let emailValidate = emailValid,\n            passwordValidate = passValid;\n\n        switch (fieldName) {\n            case 'email':\n                emailValidate = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n                setEmailValid(emailValidate);\n\n                if(!input) {\n                    setFormErrors({\n                        ...formErrors,\n                        email: emailValidate ? '' : 'Некорректный адрес',\n                    });\n                    \n                    if (emailValidate) {\n                        field.classList.remove('attention');\n                    } else {\n                        field.classList.add('attention');\n                    }\n                }\n                \n                break;\n            case 'password': \n                passwordValidate = value.length >= 4;\n                setPassValid(passwordValidate);\n\n                if(!input) {\n                    setFormErrors({\n                        ...formErrors,\n                        password:  passwordValidate ? '' : 'Слишком короткий пароль',\n                    });\n\n                    if (passValid) {\n                        field.classList.remove('attention');\n                    } else {\n                        field.classList.add('attention');\n                    }\n                }\n\n                break;\n            default: \n                break;\n        }\n        \n        setFormValid(passwordValidate && emailValidate);\n    };\n\n    const handleInput = (e) => {\n        const target = e.target;\n\n        validateField(target, true);\n        // eslint-disable-next-line\n        if (target.name == 'checkPassword' && target.value === formData.password) {\n            setIsValidPass(true);\n            target.classList.remove('attention');\n            // eslint-disable-next-line\n        } else if (target.name == 'checkPassword') {\n            setIsValidPass(false);\n            target.classList.add('attention');\n        }\n\n        updateFormData({\n            ...formData,\n            [target.name]: target.value.trim(),\n        });\n    };\n\n    const handleBlur = (e) => {\n        const target = e.target;\n\n        validateField(target);\n        // eslint-disable-next-line\n        if (target.name == 'checkPassword' && target.value === formData.password) {\n            setIsValidPass(true);\n            \n            // eslint-disable-next-line\n        } else if (target.name == 'checkPassword') {\n            setIsValidPass(false);\n            \n        }\n\n        updateFormData({\n            ...formData,\n            [target.name]: target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        setError(false);\n        setLoading(true);\n\n        const formData1 = new FormData();\n\n        if (isValidPass && formValid) {\n            formData1.set('email', formData.email);\n            formData1.set('password', formData.password);\n            formData1.set('is_user', 1);\n\n            axiosInstance.post('users/register', formData1)\n                .then(() => {\n                    axiosInstance.post('token/', formData1)\n                        .then(res => {\n                            localStorage.setItem('access_token', res.data.access);\n                            localStorage.setItem('refresh_token', res.data.refresh);\n\n                            axiosInstance.defaults.headers['Authorization'] =\n                                'Bearer ' + localStorage.getItem('access_token');\n                            history.push('/');\n\n                            setLoading(false);\n                            setAutorization(true);\n                            toggle();\n                        })\n                        .catch(err => {\n                            console.log(err);\n                            setLoading(false);\n                            setError(true);\n                        });\n                })\n                .catch(err => {\n                    console.log(err);\n                    setLoading(false);\n                    setError(true);\n\n                    setTimeout(() => {\n                        setError(false);\n                    }, 5000);\n                });\n        }\n    };\n\n    const validText = isValidPass === null ? null : isValidPass ? null : <div className='form-errors'>Пароли не совпадают</div>;\n\n    const loadingText = loading ? 'Загрузка...' : null;\n    const errorText = error ? 'Ошибка' : null;\n\n    return (\n        <Form>\n            <ModalBody>\n                <FormGroup>\n                    <Input \n                        type='email' \n                        name='email' \n                        id='registrMail'\n                        autoComplete='email'\n                        onBlur={handleBlur}\n                        onInput={handleInput}\n                        placeholder='Почта'\n                    />\n                    <FormErrors typeFor={'email'} formErrors={formErrors}/>\n                </FormGroup>  \n                <FormGroup>\n                    <Input \n                        type='password' \n                        name='password' \n                        id='registrPass'\n                        autoComplete=\"current-password\"\n                        onBlur={handleBlur}\n                        onInput={handleInput}\n                        placeholder='Пароль'\n                    />\n                    <FormErrors typeFor={'password'} formErrors={formErrors}/>\n                </FormGroup>          \n                <FormGroup>\n                    <Input \n                        type='password' \n                        name='checkPassword' \n                        id='checkPassword'\n                        autoComplete=\"current-password\"\n                        onBlur={handleBlur}\n                        onInput={handleInput}\n                        placeholder='Подтвердите пароль'\n                    />\n                    {validText}\n                </FormGroup>    \n            </ModalBody>\n            <ModalFooter>\n                <button \n                    type='submit'\n                    onClick={handleSubmit}\n                    disabled={!formValid || !isValidPass}\n                >\n                    Зарегистрироваться\n                </button>\n                <span className=\"error-text\" style={{display: `${errorText ? '' : 'none'}`}}>{errorText}</span>\n                <span className=\"loading-text\" style={{display: `${loadingText ? '' : 'none'}`}}>{loadingText}</span>\n            </ModalFooter>\n        </Form>\n    );\n};\n\nexport default Register;","import React, {useState} from 'react';\nimport {  \n    Modal, \n    ModalHeader, \n    Nav,\n    NavItem,\n    NavLink,\n    TabContent,\n    TabPane,\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport {connect} from 'react-redux';\n\nimport * as actions from '../../actions/actions';\nimport LogIn from './logIn/logIn';\nimport Register from './register/register';\nimport icons from '../../icons/icons.svg';\n\nconst LogInModal = ({isOpen, toggle, setAutorization}) => {\n    const [activeTab, setActiveTab] = useState('1');\n\n    const toggleTab = tab => {\n        if(activeTab !== tab) setActiveTab(tab);\n    };\n\n    const closeBtn = <svg className='close' onClick={toggle}><use href={`${icons}#close`}></use></svg>;\n    \n    return (\n        <Modal isOpen={isOpen} toggle={toggle} className='custom-modal'>\n            <ModalHeader toggle={toggle} close={closeBtn}>\n                <Nav tabs>\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: activeTab === '1' })}\n                            onClick={() => { toggleTab('1'); }}\n                        >\n                            Вход\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: activeTab === '2' })}\n                            onClick={() => { toggleTab('2'); }}\n                        >\n                            Регистрация\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n            </ModalHeader>\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"1\">\n                    <LogIn \n                        toggle={toggle} \n                        setAutorization={setAutorization}\n                    />\n                </TabPane>\n                <TabPane tabId=\"2\">\n                    <Register \n                        toggle={toggle} \n                        setAutorization={setAutorization}\n                    />\n                </TabPane>\n            </TabContent> \n        </Modal>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isAutorization: state.isAutorization\n    }\n};\n\nexport default connect(mapStateToProps, actions)(LogInModal);","import React,{ useEffect, useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport axiosInstance from '../../axios';\nimport * as actions from '../../actions/actions';\nimport icons from '../../icons/icons.svg';\n\nconst LogOutModal = ({isOpenExit, toggleExit, setAutorization}) => {\n    const history = useHistory();\n\n    const [loading, setLoading] = useState(false);\n\n    const closeBtn = <svg className='close' onClick={toggleExit}><use href={`${icons}#close`}></use></svg>;\n\n    const handleSubmit = () => {\n        const refreshToken = localStorage.getItem('refresh_token');\n\n        setLoading(true);\n\n        if (refreshToken) {\n            axiosInstance.post(`users/logout?refresh_token=${refreshToken}`, {\n                refresh_token: refreshToken,\n            })\n                .then(() => {           \n                    localStorage.removeItem('access_token');\n                    localStorage.removeItem('refresh_token');\n\n                    axiosInstance.defaults.headers['Authorization'] = null;\n                    setAutorization(false);\n                    setLoading(false);\n\n                    toggleExit();\n                    \n                    history.push('/');\n                    window.location.reload();    \n                })\n                .catch(err => {\n                    localStorage.removeItem('access_token');\n                    localStorage.removeItem('refresh_token');\n\n                    axiosInstance.defaults.headers['Authorization'] = null;\n                    setAutorization(false);\n                    setLoading(false);\n\n                    toggleExit();\n\n                    history.push('/');\n                    window.location.reload();\n\n                    console.log('LogOut with error', err);\n                })\n        } else {\n            console.log('NoAutor');\n        }\n    };\n\n    const loadingText = loading ? 'Загрузка...' : null;\n\n    return (\n        <Modal \n            isOpen={isOpenExit} \n            toggle={toggleExit} \n            className='custom-modal'\n\n        >\n            <ModalHeader toggle={toggleExit} close={closeBtn}>\n                Выход\n            </ModalHeader>\n            <ModalBody>\n                Вы уверены?\n            </ModalBody>\n            <ModalFooter>\n                <button onClick={handleSubmit}>\n                    Да, выйти.\n                </button>\n                <span className=\"loading-text\" style={{display: `${loadingText ? '' : 'none'}`}}>{loadingText}</span>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isAutorization: state.isAutorization,\n    }\n};\n\nexport default connect(mapStateToProps, actions)(LogOutModal);","export default __webpack_public_path__ + \"static/media/smalWhiteArrow.9537c824.svg\";","export default __webpack_public_path__ + \"static/media/smalBlackArrow.811974e6.svg\";","import React, { useState, useEffect } from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport LogInModal from '../logInModal/logInModal';\nimport LogOutModal from '../logOutModal/logOutModal';\nimport * as actions from '../../actions/actions';\n\nimport smallWhiteArrow from './img/smalWhiteArrow.svg';\nimport smallBlackArrow from './img/smalBlackArrow.svg';\nimport icons from '../../icons/icons.svg';\n\nimport './header.scss';\n\nconst Header = ({darkHeader, isAutorization}) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [isOpenExit, setIsOpenExit] = useState(false);\n    const [isOpenBurger, setIsOpenBurger] = useState(false);\n    const [isMobile, setIsMobile] = useState(false);\n\n    const darkClass = darkHeader ? 'dark-color' : '';\n    const noTransparentBG = darkHeader ? 'header-bg' : '';\n\n    const smallArrow = darkHeader ? smallBlackArrow : isMobile ? smallBlackArrow : smallWhiteArrow;\n\n    const toggle = () => setIsOpen(!isOpen);\n    const toggleExit = () => setIsOpenExit(!isOpenExit);\n\n    const toggleBurger = () => setIsOpenBurger(!isOpenBurger);\n\n    const checkIsMobile = () => {\n        const clientWidth = document.documentElement.clientWidth,\n              scrollBarWidth = getScrollbarWidth();\n\n        if (clientWidth + scrollBarWidth < 992 ) {\n            setIsMobile(true);\n        } else {\n            setIsMobile(false);\n        }\n    };\n\n    useEffect(() => {\n        checkIsMobile();\n    }, []);\n\n    const toggleMenu = () => {\n        const menu = document.querySelector('.header__control'),\n              body = document.body;\n        \n        body.classList.toggle('open-menu');\n        toggleBurger();\n        menu.classList.toggle('active');\n\n        if (body.classList.contains('open-menu')) {\n            body.style.paddingRight = getScrollbarWidth() + 'px';\n        } else {\n            body.style.paddingRight = '';\n        }\n    };\n\n    const handleClickSubstr = (e) => {\n        const target = e.target.closest('.header__control'),\n              burgerTarget = e.target.closest('.burger');\n\n        if (!target && isOpenBurger && !burgerTarget) {\n            toggleMenu();\n        }\n    };\n    \n    const handleClik = () => {\n        const clientWidth = document.documentElement.clientWidth,\n              scrollBarWidth = getScrollbarWidth(),\n              isOpenMenu = document.body.classList.contains('open-menu');\n     \n        if (clientWidth + (isOpenMenu ? 0 : scrollBarWidth) < 992 ) {\n            toggleMenu();\n        } else {\n            return;\n        }\n    };\n\n    const headerEnterOrExit = !isAutorization ? \n        <LogInBtn toggle={toggle} darkClass={darkClass} smallArrow={smallArrow}/> : \n        <LogOutBtn toggleExit={toggleExit} darkClass={darkClass}/>;\n\n    const headerUserBtns = /* isAutorization */ true ? \n                    <>\n                        <AdminBtn handleClik={handleClik} darkClass={darkClass}/>\n                        <UserPA handleClik={handleClik} darkClass={darkClass}/>\n                    </> : null;\n\n    const activeBurger = isOpenBurger ? 'active' : '';\n\n    return (\n        <header onClick={(e) => handleClickSubstr(e)} className={`header ${noTransparentBG}`}>\n            <div className='header__flex-wrapper container'>\n                <div className=\"header__logo title\">\n                    <Link className={darkClass} to='/galartus_front/'>Galartus</Link>\n                </div>\n                <div className=\"header__control\">\n                    <div className=\"header__logo title\">\n                        <Link onClick={handleClik} to='/galartus_front/'>Galartus</Link>\n                    </div>\n                    <nav className=\"header__nav nav\">\n                        <ul className=\"nav__list\">\n                            <li className=\"nav__item nav__item--menu\">\n                                <Link onClick={handleClik} className={darkClass}  to='/galartus_front/'>\n                                    <span>Главная</span>\n                                </Link>\n                            </li>\n                            <li className=\"nav__item\">\n                                <Link onClick={handleClik} className={darkClass}  to='/exhibitions'>\n                                    <span>Выставки</span>\n                                </Link>\n                            </li>\n                            <li className=\"nav__item\">\n                                <Link onClick={handleClik} className={darkClass}  to='/collections'>\n                                    <span>Коллекции</span>\n                                </Link>\n                            </li>\n                            <li className=\"nav__item\">\n                                <Link onClick={handleClik} className={darkClass}  to='/about'>\n                                    <span>О музее</span>\n                                </Link>\n                            </li>\n                        </ul>\n                    </nav>\n                    <div className=\"header__control-btns btns-group\">\n                        {headerUserBtns}\n                        {headerEnterOrExit}\n                    </div>\n                </div>\n                <div className={`burger ${darkClass} ${activeBurger}`} onClick={toggleMenu}>\n                    <span className='burger__upper-line'></span>\n                    <span className='burger__middle-line burger__middle-line--upper'></span>\n                    <span className='burger__middle-line burger__middle-line--down'></span>\n                    <span className='burger__down-line'></span>\n                </div>\n            </div>\n            <LogInModal isOpen={isOpen} toggle={toggle}/> \n            <LogOutModal isOpenExit={isOpenExit} toggleExit={toggleExit}/>    \n        </header>\n    );\n};\n\nconst LogInBtn = ({toggle, darkClass, smallArrow}) => {\n    return (\n        <button  onClick={toggle}  className={`btns-group__btn ${darkClass}`}>\n            Войти\n            <img src={smallArrow} alt=\"smallArrow\"/>\n        </button> \n    );\n};\n\nconst LogOutBtn = ({toggleExit, darkClass}) => {\n    const color = darkClass ? 'black-' : 'white-';\n\n    return (\n        <svg  onClick={toggleExit}  className={`logout-icon`}>\n            <use href={`${icons}#${color}exit`}></use>\n        </svg> \n    );\n};\n\nconst AdminBtn = ({darkClass, handleClik}) => {\n    return (\n        <button className={`btns-group__btn ${darkClass}`}>\n            <Link onClick={handleClik} className={darkClass} to='/admin'>Управление</Link>\n        </button>\n    );\n};\n\nconst UserPA = ({darkClass, handleClik}) => {\n    return (\n        <button className={`btns-group__btn ${darkClass}`}>\n            <Link onClick={handleClik} className={darkClass} to='/user'>Личный кабинет</Link>\n        </button> \n    );\n};\n\nfunction getScrollbarWidth() {\n\n    const outer = document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.overflow = 'scroll';\n    outer.style.msOverflowStyle = 'scrollbar'; \n    document.body.appendChild(outer);\n\n    const inner = document.createElement('div');\n    outer.appendChild(inner);\n  \n    const scrollbarWidth = (outer.offsetWidth - inner.offsetWidth);\n\n    outer.parentNode.removeChild(outer);\n  \n    return scrollbarWidth;\n  \n}\n\nconst mapStateToProps = (state) => {\n    return {\n        darkHeader: state.darkHeader,\n        isAutorization: state.isAutorization\n    }\n};\n\nexport default connect(mapStateToProps, actions)(Header);","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport * as actions from '../actions/actions';\n\nconst NotFoundPage = ({toggleHeaderColor}) => {\n    useEffect(() => {\n        toggleHeaderColor(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"not-found-page\">\n            <div className=\"container\">\n                \n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        \n    }\n};\n\nexport default connect(mapStateToProps, actions)(NotFoundPage);","import React, { useEffect, useState } from 'react';\nimport {Button, Container} from 'reactstrap';\nimport {connect} from 'react-redux';\n\nimport './exhibitionInfo.scss';\n\nimport axiosInstance from '../../axios';\nimport * as actions from '../../actions/actions';\nimport {setShortWeekdayName, setMonthName} from '../../dateTransform/dateTransform';\n\nimport db from '../../db';\n\nconst ExhibitionInfo = ({exhibitionId, isAutorization, setCartCount, cartCount}) => {\n    const [exhibitionData, setExhibitionData] = useState(null);\n\n    const [count, setCount] = useState(0);\n\n    const resetCount = () => setCount(0);\n\n    const decrCount = () => {\n        if (count > 0) {\n            setCount(count - 1);\n        } \n    };\n    const incrCount = () => setCount(count + 1); \n\n    useEffect(() => {\n        db.exhibitions.forEach(item => {\n            if (item.id === +exhibitionId) {\n                setExhibitionData(item);\n            }\n        });\n        /* axiosInstance.get(`exhibitions?id=${exhibitionId}`)\n            .then(res => {\n                setExhibitionData(res.data[0]);\n            })\n            .catch(err => console.log(err)); */\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const buyContent = isAutorization ? \n        <PurchaseBlock \n            resetCount={resetCount}\n            count={count}\n            decrCount={decrCount}\n            incrCount={incrCount}\n            id={exhibitionId}\n            cartCount={cartCount}\n            setCartCount={setCartCount}\n        /> : \n        <NoAutorization/>;\n\n    const exhibition = exhibitionData ? <Exhibition isAutorization={isAutorization} buyContent={buyContent} data={exhibitionData}/> : null;\n\n    /* if (exhibitionData) {\n        return (        \n                <Container>\n                    <div className=\"exhibition-info__img\">\n                        <img src={exhibitionData.image} alt={exhibitionData.name} />\n                    </div>\n                    <div className=\"exhibition-info__title\">{exhibitionData.name}</div>\n                    <div className=\"exhibition-info__description\">{exhibitionData.description}</div>\n                    <div className=\"exhibition-info__prise\">{exhibitionData.price}р.</div>\n                    {buyContent}\n                </Container>                           \n        );\n    } else {\n        return (\n            <p>Wait data...</p>\n        );\n    } */\n\n    return (\n        <>  \n            <div className=\"exhibition-info__img\">\n                <img src={exhibitionData ? exhibitionData.image : null} alt={exhibitionData ? exhibitionData.name : null} />\n            </div>\n            <div className=\"container\">\n                {exhibition}\n            </div>\n        </>\n        \n    )\n\n};\n\nconst Exhibition = ({buyContent, data, isAutorization}) => {\n    const date = new Date(data.date);\n\n    const dateData = {\n        day: date.getDate(),\n        weekday: setShortWeekdayName(date.getDay()),\n        month: setMonthName(date.getMonth()),\n    };\n\n    return (\n        <>\n            <div className=\"exhibition\">\n                <div className=\"exhibition__img\">\n                    <img src={data.image} alt={data.name} />\n                </div>\n                <div className=\"exhibition__purchase-info\">\n                    <h2 className=\"exhibition__title title\">{data.name}</h2>\n                    <div className=\"exhibition__time\">{dateData.day} {dateData.month} ({dateData.weekday}), {data.time}</div>\n                    <div className=\"exhibition__address\">{data.address}</div>\n                    <div className=\"exhibition__prise title\">{data.price}₽</div>\n                    <button disabled={!isAutorization} className=\"exhibition__add-to-cart\">Купить билет</button>\n                    {buyContent}\n                </div>\n            </div>\n            <div className=\"details\">\n                <div className=\"details__title title\">\n                    Подробнее о выставке\n                </div>\n                <div className=\"details__text\">\n                    {data.description}\n                </div>\n            </div>\n        </>\n        \n    )\n};\n\nconst PurchaseBlock = ({count, decrCount, incrCount, id, resetCount, setCartCount, cartCount}) => {\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    const disabled = !(count > 0);\n\n    const handleSubmit = () => {\n\n        if (!disabled) {\n            setSuccess(false);\n            setError(false);\n            setLoading(true);\n\n            axiosInstance.put(`cart/add/${id}/${count}`)\n                .then(() => {\n                    setLoading(false);\n                    setSuccess(true);\n                    setCartCount(cartCount, 1);\n\n                    resetCount();\n\n                    setTimeout(() => setSuccess(false), 2000);\n                })\n                .catch(err => {\n                    setLoading(false);\n                    setError(true);\n\n                    console.log('Add caert err', err);\n                })\n        }\n    }\n\n    const loadingText = loading ? 'Подождите...' : null;\n    const errorText = error ? 'Произошла ошибка...' : null;\n\n    const successText = success ? 'Добавили в корзину!' : null;\n\n    return (\n        <div className=\"purchase\">\n            <button \n                className='purchase__btn' \n                disabled={disabled}\n                onClick={handleSubmit}\n            >\n                Добавить в корзину\n            </button>\n            <div className=\"purchase__numbers\">\n                <Button onClick={decrCount} disabled={disabled} className=\"purchase__decr\">-</Button>\n                <div className=\"purchase__count\">{count}</div>\n                <Button onClick={incrCount} className=\"purchase__incr\">+</Button>\n            </div>\n            {loadingText}\n            {errorText}\n            {successText}\n        </div>\n    )\n};\n\nconst NoAutorization = () => {\n    return (\n        <div className=\"no-autorization\">\n            Для приобритения билетов необxодимо авторизироваться\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        cartCount: state.cartCount,\n    }\n};\n\nexport default connect(mapStateToProps, actions)(ExhibitionInfo);","import React, {useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport ExhibitionInfo from '../components/exhibitionInfo/exhibitionInfo';\nimport * as actions from '../actions/actions';\n\nconst ExhibitionInfoPage = ({toggleHeaderColor, isAutorization}) => {\n    useEffect(() => {\n        toggleHeaderColor(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const {id} = useParams();\n\n    return (\n        <div className=\"exhibition-info\">\n            <ExhibitionInfo isAutorization={isAutorization} exhibitionId={id}/>\n        </div>        \n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        darkHeader: state.darkHeader,\n        isAutorization: state.isAutorization\n    }\n};\n\nexport default connect(mapStateToProps, actions)(ExhibitionInfoPage);","import React, { useEffect, useState } from 'react';\nimport { Button, Container } from 'reactstrap';\nimport {connect} from 'react-redux';\n\nimport './cart.scss';\n\nimport axiosInstance from '../../axios';\nimport * as actions from '../../actions/actions';\n\nconst Cart = ({setCartCount, cartCount}) => {\n    const [buyList, setBuyList] = useState([]);\n    const [order, setOrder] =useState([]);\n\n    const [loadingPayment, setLoadingPayment] = useState(false);\n    const [errorPayment, setErrorPayment] = useState(false);\n\n    const [refresh, setRefresh] = useState(false);\n    \n    const toggleRefresh = () => setRefresh(!refresh);\n\n    useEffect(() => {\n        axiosInstance.get('cart/details?is_ordered=0')\n            .then(res => {\n                if (res.data.length > 0) {\n                    if (res.data[0].items.length > 0) {\n                        setBuyList(res.data[0].items);\n                        setOrder(res.data[0]);\n                    } else {\n                        setBuyList([]);\n                        setOrder([]);\n                    } \n                } else {\n                    setBuyList([]);\n                    setOrder([]);\n                }  \n            })\n            .catch(err => console.log(err));\n    }, [refresh]);\n\n    const handleDelete = (id) => {\n        \n\n        axiosInstance.delete(`cart/${id}/remove`)\n            .then(() => {\n                setLoadingPayment(false);\n                setCartCount(cartCount, -1);\n\n                toggleRefresh();\n            })\n            .catch(err => {\n                console.log(err);\n            } );\n    };\n\n    const handlePayment = () => {\n        setErrorPayment(false);\n        setLoadingPayment(true);\n\n        axiosInstance.put('cart/payment')\n            .then(() => {\n                setLoadingPayment(false);\n\n                setCartCount(0, 0);\n\n                setBuyList([]);\n                setOrder([]);\n                toggleRefresh();\n            })\n            .catch(err => {\n                console.log(err);\n\n                setLoadingPayment(false);\n                setErrorPayment(true);\n            });\n    };\n\n    const loadingPaymentText = loadingPayment ? 'Подождите...' : null;\n    const errorPaymentText = errorPayment ? 'Ошибка' : null;\n\n    const purchaseCards = buyList.length > 0 ? buyList.map(item => {\n        const {name, date, time} = item.exhibition;\n\n        return (\n            <div key={item.id} className=\"purchase\">\n                <div className=\"purchase__name\">{name}</div>\n                <div className=\"purchase__date\">{date}</div>\n                <div className=\"purchase__time\">{time}</div>\n                <div className=\"purchase__quantity\">{item.quantity}</div>\n                <div className=\"purchase__price\">{item.total}р</div>\n                <Button onClick={() => handleDelete(item.id)} className='purchase__delete' color='danger'>X</Button>\n            </div>\n        )\n    }) : <p>Пусто</p>;\n\n    return (\n        <div className=\"cart\">\n            <Container className='cart__container'>\n                <div className=\"cart__flex-wrapper\">\n                    <div className=\"purchase-wrpper\">\n                        {purchaseCards}\n                    </div>\n                    <div className=\"purchase__payment\">\n                        <div className=\"purchase__amount\">К оплате {order.amount}р</div>\n                        <Button \n                            onClick={handlePayment}\n                            disabled={buyList.length === 0}\n                        >\n                            Оплатить\n                        </Button>\n                        {loadingPaymentText}\n                        {errorPaymentText}\n                    </div>\n                    \n                </div>  \n            </Container>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        cartCount: state.cartCount,\n    }\n};\n\nexport default connect(mapStateToProps, actions)(Cart);","import React, { useEffect } from 'react';\nimport {connect} from 'react-redux';\n\nimport * as actions from '../actions/actions';\nimport Cart from '../components/cart/cart';\n\nconst CartPage = ({toggleHeaderColor}) => {\n\n    useEffect(() => {\n        toggleHeaderColor(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <Cart/>\n    );\n};\n\nconst mapStateToProps = () => {\n    return {\n\n    }\n}; \n\nexport default connect(mapStateToProps, actions)(CartPage);","import React from 'react';\nimport { Button } from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nconst CartBtn = ({cartCount}) => {\n    const count = cartCount === 0 ? null : cartCount;\n\n    const content = localStorage.getItem('access_token') ? \n        <Button><Link to='/cart'>Корзина {count}</Link></Button> \n        : null;\n\n    return (\n        <div className=\"cart-btn\">\n            {content}\n        </div>\n    );\n};\n\nexport default CartBtn;","import React, { useState, useEffect } from 'react';\n\nimport './paymentList.scss';\n\nimport axiosInstance from '../../axios';\n\nconst PaymentList = ({exhId}) => {\n    const [users, setUsers] = useState([]);\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        setError(false);\n        setLoading(true);\n\n        axiosInstance.get(`employee?exhibition=${exhId}`)\n            .then((res) => {\n                setLoading(false);\n\n                setUsers(res.data);\n            })\n            .catch(err => {\n                console.log(err);\n\n                setLoading(false);\n                setError(true);\n            });\n    }, []);\n\n    const userList = users.length !== 0 ? users.map(item => {\n        const {email, first_name} = item.account;\n\n        return (\n            <div key={item.id} className=\"user-card\">          \n                <div className=\"user-card__id\">{item.id}</div>\n                <div className=\"user-card__email\">{email}</div>\n                <div className=\"user-card__name\">{first_name}</div>\n                <div className=\"user-card__quantity\">{item.quantity}</div>\n                <div className=\"user-card__amount\">{item.amount}</div>\n            </div>\n        )\n    }) : null;\n\n    const loadingText = loading ? 'Загрузка...' : null;\n    const errorText = error ? 'Ошибка' : null;\n    const emptyText = !userList && !loading && !error ? <div>empty</div> : null;\n\n    return (\n        <div className='payment-list'>\n            <div className=\"payment-list__title\">\n                <div className=\"payment-list__id\">ID</div>\n                <div className=\"payment-list__email\">Почта</div>\n                <div className=\"payment-list__name\">Имя</div>\n                <div className=\"payment-list__quantity\">Кол-во</div>\n                <div className=\"payment-list__amount\">Стоимость</div>\n            </div>\n            {loadingText}\n            {userList}\n            {errorText}\n            {emptyText}\n        </div>\n        \n    )\n};\n\nexport default PaymentList;","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {useParams} from 'react-router-dom';\nimport { Container } from 'reactstrap';\n\nimport '../styles/pages/paymentListPage.scss';\n\nimport * as actions from '../actions/actions';\nimport PaymentList from '../components/paymentList/paymentList';\n\nconst PaymentListPage = ({toggleHeaderColor}) => {\n    useEffect(() => {\n        toggleHeaderColor(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const {id} = useParams();\n\n    return (\n        <div className=\"payment-list-page\">\n            <Container>\n                <PaymentList exhId={id}/>\n            </Container>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        \n    }\n};\n\n\nexport default connect(mapStateToProps, actions)(PaymentListPage);","import React, {useEffect} from 'react';\nimport {BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport * as actions from '../../actions/actions';\nimport Footer from '../footer/footer';\nimport MainPage from '../../pages/mainPage';\nimport ExhibitionsPage from '../../pages/exhibitionsPage';\nimport AboutPage from '../../pages/aboutPage';\nimport AllCollectionsPage from '../../pages/allCollectionsPage';\nimport UserPage from '../../pages/userPage';\nimport CollectionPage from '../../pages/collectonPage';\nimport ItemPage from '../../pages/itemPage';\nimport AdminPage from '../../pages/adminPage';\nimport Header from '../header/header';\nimport NotFoundPage from '../../pages/notFoundPage';\nimport ExhibitionInfoPage from '../../pages/exhibitionInfoPage';\nimport CartPage from '../../pages/cartPage';\nimport CartBtn from '../cart/cartBtn/cartBtn';\nimport axiosInstance from '../../axios';\nimport PaymentListPage from '../../pages/paymentListPage';\n\nconst App = ({isAutorization, setAutorization, setCartCount, cartCount}) => {\n    useEffect(() => {\n        if (localStorage.getItem('access_token')) {\n            setAutorization(true);\n\n            axiosInstance.get('cart/details?is_ordered=0')\n                .then(res => {\n                    if (res.data[0] && res.data[0].items.length > 0) {\n                        setCartCount(cartCount, res.data[0].items.length);\n                    } else {\n                        setCartCount(0, 0);\n                    }\n                })\n        } else {\n            setAutorization(false);\n        }\n\n        const htmlEl = document.querySelector('html');\n        const initialFZ = getComputedStyle(htmlEl).fontSize;\n        const initilaWidth = document.documentElement.clientWidth;\n        \n\n        if (initilaWidth > 1920) {\n            const adaptiveCoef = initilaWidth/1920;\n            htmlEl.style.fontSize = `${adaptiveCoef*initialFZ}px`;\n\n            console.log(adaptiveCoef);\n        }\n        \n        \n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isAutorization]);\n\n    return (\n        <Router>\n            <Header/>\n            <CartBtn cartCount={cartCount}/>\n            <div className=\"content\">\n                <Switch>\n                    <Route exact path='/galartus_front/' component={MainPage}/>\n                    <Route exact path='/exhibitions' component={ExhibitionsPage}/>\n                    <Route exact path='/collections' component={AllCollectionsPage}/>\n                    <Route exact path='/about' component={AboutPage}/>\n                    <Route exact path='/user' component={UserPage} />\n                    <Route exact path='/collections/:id' component={CollectionPage}/>\n                    <Route exact path={`/pictures/:id`} component={ItemPage} />\n                    <Route exact path='/exhibitions/:id' component={ExhibitionInfoPage}/>\n                    <Route exact path='/admin' component={AdminPage}/>\n                    <Route exact path='/cart' component={CartPage} />\n                    <Route exact path='/payment-list/:id' component={PaymentListPage}/>\n                    <Route component={NotFoundPage}/>\n                </Switch>\n            </div>  \n            <Footer/>\n        </Router>\n    \n  );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isAutorization: state.isAutorization,\n        cartCount: state.cartCount,\n    }\n};\n\nexport default connect(mapStateToProps, actions)(App);\n","const initialState = {\n    collections: [],\n    exhibitions: [],\n    pictures: [],\n    isLoadingCollections: true,\n    isErrorCollcetions: false,\n    isLoadingPictures: true,\n    isErrorPictures: false,\n    isLoadingExhibitions: true,\n    isErrorExhibitions: false,\n    darkHeader: false,\n    currentPicture: [],\n    isAutorization: null,\n    likesId: null,\n    cartCount: null,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'TOGGLE_HEADER_COLOR':\n            return {\n                ...state,\n                darkHeader: action.darkHeader\n            }\n        case 'COLLECTIONS_LOADED':\n            return {\n                ...state,\n                collections: action.payload,\n                isLoadingCollections: false,\n                isErrorCollcetions: false\n            };\n        case 'COLLECTIONS_REQUSTED':\n            return {\n                ...state,\n                isErrorCollcetions: false,\n                isLoadingCollections: true\n            }\n        case 'COLLECTIONS_ERROR':\n            return {\n                ...state,\n                isLoadingCollections: false,\n                collections: null,\n                isErrorCollcetions: true\n            };\n        case 'EXHIBITIONS_LOADED':\n            return {\n                ...state,\n                exhibitions: action.payload,\n                isLoadingExhibitions: false,\n                isErrorExhibitions: false\n            };\n        case 'EXHIBITIONS_REQUSTED':\n            return {\n                ...state,\n                isErrorExhibitions: false,\n                isLoadingExhibitions: true\n            };\n        case 'EXHIBITIONS_ERROR':\n            return {\n                ...state,\n                exhibitions: null,\n                isLoadingExhibitions: false,\n                isErrorExhibitions: true\n            };\n        case 'PICTURES_LOADED':\n            return {\n                ...state,\n                pictures: action.payload,\n                isLoadingPictures: false,\n                isErrorPictures: false\n            };\n        case 'PICTURES_REQUSTED':\n            return {\n                ...state,\n                isErrorPictures: false,\n                isLoadingPictures: true\n            };\n        case 'PICTURES_ERROR':\n            return {\n                ...state,\n                pictures: null,\n                isLoadingPictures: false,\n                isErrorPictures: true\n            }\n        case 'SET_CURRENT_PICTURE':\n            return {\n                ...state,\n                currentPicture: action.payload\n            }\n        case 'SET_IS_AUTORIZATION':\n            return {\n                ...state,\n                isAutorization: action.isAutorization\n            }\n        case 'SET_LIKES_ID':\n            return {\n                ...state,\n                likesId: action.payload,\n            }\n        case 'SET_CART_COUNT':\n            return {\n                ...state,\n                cartCount: action.count\n            }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import {createStore} from 'redux';\nimport reducer from './reducers/reducers';\n\nconst store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.scss';\n\nimport App from './components/app/app';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n        <div className=\"content-wrapper\">\n            <App/>\n        </div>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}